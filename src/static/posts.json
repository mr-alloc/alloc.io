[
  {
    "path": "/docs/computer-science/computer-structure/io-manager",
    "header": {
      "layout": "wiki",
      "title": "ÏûÖÏ∂úÎ†• Í¥ÄÎ¶¨Ïûê",
      "tags": [
        "I/O Manager",
        "I/O"
      ],
      "summary": "I/O Manager",
      "hide": true,
      "date": 1999999999999,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "Ïª¥Ìì®ÌÑ∞",
        "ÌïòÎìúÏõ®Ïñ¥"
      ],
      "images": [],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "I/O ManagerÎûÄ?",
            "title": "I/O ManagerÎûÄ?",
            "fragment": "root-0",
            "children": []
          },
          {
            "rank": 2,
            "origin": "PCI express",
            "title": "PCI express",
            "fragment": "root-1",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Bridge (North Bridge, South Bridge)",
            "title": "Bridge (North Bridge, South Bridge)",
            "fragment": "root-2",
            "children": []
          },
          {
            "rank": 2,
            "origin": "I/O ManagerÏùò Ïó≠Ìï†",
            "title": "I/O ManagerÏùò Ïó≠Ìï†",
            "fragment": "root-3",
            "children": []
          }
        ]
      }
    },
    "description": "",
    "content": "\r\n## I/O ManagerÎûÄ?\r\n\r\n## PCI express\r\n\r\n## Bridge (North Bridge, South Bridge)\r\n\r\n## I/O ManagerÏùò Ïó≠Ìï†\r\n"
  },
  {
    "path": "/docs/computer-science/computer-structure/programmed-io",
    "header": {
      "layout": "wiki",
      "title": "Programmed Input/Output (PIO)",
      "tags": [
        "Hardware",
        "PIO"
      ],
      "summary": "PIO",
      "hide": true,
      "date": 1999999999999,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "Ïª¥Ìì®ÌÑ∞",
        "ÌïòÎìúÏõ®Ïñ¥"
      ],
      "images": [],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "PIOÎûÄ?",
            "title": "PIOÎûÄ?",
            "fragment": "root-0",
            "children": []
          },
          {
            "rank": 2,
            "origin": "PIOÏùò Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ°Î∞©Ïãù",
            "title": "PIOÏùò Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ°Î∞©Ïãù",
            "fragment": "root-1",
            "children": []
          }
        ]
      }
    },
    "description": "",
    "content": "\r\n## PIOÎûÄ?\r\n\r\n`Programmed I/O`(Ïù¥Ìïò PIO)Îäî ÎßêÍ∑∏ÎåÄÎ°ú ÌîÑÎ°úÍ∑∏Îû® ÏûÖÏ∂úÎ†•Ïù¥Îã§. `PIO` Î∞©ÏãùÏùÄ [ÎÑ§Ìä∏ÏõåÌÅ¨ Ïñ¥ÎåëÌÑ∞]() ÎòêÎäî [ATA]() Í∏∞ÏñµÏû•Ïπò Í∞ôÏùÄ Ï£ºÎ≥ÄÍ∏∞Í∏∞ÏôÄ [CPU](/wiki/central-processing-unit) ÏÇ¨Ïù¥ÏóêÏÑú Îç∞Ïù¥ÌÑ∞Î•º Ï£ºÍ≥† Î∞õÎäîÎã§.\r\nCPUÏùò Í∞úÏûÖÏúºÎ°ú Ï≤òÎ¶¨ÎêòÎØÄÎ°ú ÏÑ±Îä•Ïóê ÏòÅÌñ•ÏùÑ Ï£ºÎ©∞, Ïù¥Îü¨Ìïú Îã®Ï†êÏùÑ Í∑πÎ≥µÌïòÍ∏∞ ÏúÑÌï¥ [Ïù∏ÌÑ∞ÎüΩÌä∏](/wiki/interrupt)ÎÇò [DMA](/wiki/direct-memory-access)Í∞ôÏùÄ Î∞©ÏãùÏù¥ Í≥†ÏïàÎêòÏóàÎã§.\r\n\r\n\r\n## PIOÏùò Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ°Î∞©Ïãù\r\n\r\n`PIO`Îäî CPUÍ∞Ä Îç∞Ïù¥ÌÑ∞Î•º ÏùΩÍ±∞ÎÇò Ïì∏ Ïû•ÏπòÏóêÎåÄÌï¥ÏÑú Ï£ºÏÜåÏã†Ìò∏(ÎåÄÏÉÅÏ£ºÏÜå)ÏôÄ Ï†úÏñ¥Ïã†Ìò∏(IOR, IOW)Î°ú I/O ÌôúÏÑ±ÌôîÍ∞Ä Ïù¥Î£®Ïñ¥ÏßÄÎ©¥ Îç∞Ïù¥ÌÑ∞Î≤ÑÏä§Î•º ÌÜµÌï¥ Ï†ÑÏÜ°ÎêúÎã§. \r\n"
  },
  {
    "path": "/docs/infrastructure/kubernetes/update-istio",
    "header": {
      "layout": "post",
      "title": "istio ÏóÖÎç∞Ïù¥Ìä∏ (1.22.1 -> 1.25.0)",
      "tags": [
        "Spring",
        "Spring Boot",
        "Spring Security"
      ],
      "date": 1743479880000,
      "thumbnail": "/post/infrastructure/kubernetes/update-istio.webp",
      "current-company": "NEOWIZ",
      "current-position": "Software Engineer",
      "summary": "istio ÏóÖÎç∞Ïù¥Ìä∏",
      "excerpt_separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "Ïù∏ÌîÑÎùº",
        "Ïø†Î≤ÑÎÑ§Ìã∞Ïä§"
      ],
      "images": [],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "ÏÑ†Ìñâ ÏßÄÏãù::prerequisites",
            "title": "ÏÑ†Ìñâ ÏßÄÏãù",
            "fragment": "prerequisites",
            "children": []
          },
          {
            "rank": 2,
            "origin": "ÏÑ§Ïπò::install-istio",
            "title": "ÏÑ§Ïπò",
            "fragment": "install-istio",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Î≤ÑÏ†Ñ ÏóÖÎç∞Ïù¥Ìä∏",
            "title": "Î≤ÑÏ†Ñ ÏóÖÎç∞Ïù¥Ìä∏",
            "fragment": "root-2",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Î†àÏù¥Î∏î Ï†ÅÏö© Î∞è ÏÇ¨Ïù¥ÎìúÏπ¥ Ï£ºÏûÖ::labeling-and-inject-sidecar",
            "title": "Î†àÏù¥Î∏î Ï†ÅÏö© Î∞è ÏÇ¨Ïù¥ÎìúÏπ¥ Ï£ºÏûÖ",
            "fragment": "labeling-and-inject-sidecar",
            "children": []
          },
          {
            "rank": 2,
            "origin": "TL;DR::too-long-did-not-read",
            "title": "TL;DR",
            "fragment": "too-long-did-not-read",
            "children": []
          }
        ]
      }
    },
    "description": "Í¥ÄÎ¶¨ÌïòÎäî K8s Î≤ÑÏ†ÑÏù¥ Ïò¨ÎùºÍ∞ÄÎ©¥ÏÑú, ÌïÑÏöîÌïú istio ÏóÖÎç∞Ïù¥Ìä∏ ÏßÑÌñâÏùÑ Í∞ÑÎã®Ìûà Ï†ïÎ¶¨Ìï¥Î≥¥Ïûê.",
    "content": "\r\n\r\n## ÏÑ†Ìñâ ÏßÄÏãù::prerequisites\r\n\r\n1. ÌïµÏã¨ Ïª¥Ìè¨ÎÑåÌä∏\r\n   * istiod: Ïª®Ìä∏Î°§ ÌîåÎ†àÏù∏ (istio-system namespaceÏóê ÏúÑÏπòÌïòÎ©∞ ÏõåÏª§ ÎÖ∏ÎìúÏóê Î∞∞Ìè¨)\r\n   * istio-proxy: ÏÇ¨Ïù¥ÎìúÏπ¥ ÌîÑÎ°ùÏãú (Í∞Å Ïñ¥ÌîåÎ¶¨ÏºÄÏù¥ÏÖò PodÏóê Ï£ºÏûÖÎêòÎ©∞ istiodÏôÄ ÌÜµÏã†)\r\n   * istio-ingressgateway: Ïù∏Î∞îÏö¥Îìú Ìä∏ÎûòÌîΩ Ï≤òÎ¶¨\r\n   * istio-egressgateway: ÏïÑÏõÉÎ∞îÏö¥Îìú Ìä∏ÎûòÌîΩ Ï≤òÎ¶¨ (ÏÑ†ÌÉùÏ†Å)\r\n2. Í¥ÄÎ¶¨ÎèÑÍµ¨\r\n   * istioctl: istio CLI ÎèÑÍµ¨ (ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏)\r\n   * kubectl: k8s CLI ÎèÑÍµ¨ (ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏)\r\n3. Î¶¨ÏÜåÏä§\r\n   * Namespace: istio-system\r\n   * Pod: Ïª®ÌÖåÏù¥ÎÑà Ïã§ÌñâÎã®ÏúÑ\r\n   * Service: ÏÑúÎπÑÏä§ ÎîîÏä§Ïª§Î≤ÑÎ¶¨ÏôÄ Î°úÎìúÎ∞∏Îü∞Ïã±\r\n   * Deployment: Pod Í¥ÄÎ¶¨ Î∞è Î∞∞Ìè¨\r\n4. ÏïÑÌÇ§ÌÖçÏ≥ê Ïö©Ïñ¥\r\n   * Control Plane: Ï§ëÏïô Ï†úÏñ¥/Í¥ÄÎ¶¨ Î∂ÄÎ∂Ñ\r\n   * Data Plane: Ïã§Ï†ú Ìä∏ÎûòÌîΩÏùÑ Ï≤òÎ¶¨ÌïòÎäî Î∂ÄÎ∂Ñ\r\n   * Sidecar: Î©îÏù∏ Ïª®ÌÖåÏù¥ÎÑàÏôÄ Ìï®Íªò Ïã§ÌñâÎêòÎäî Î≥¥Ï°∞ Ïª®ÌÖåÏù¥ÎÑà\r\n\r\n## ÏÑ§Ïπò::install-istio\r\n\r\nÎ®ºÏ†Ä istioÎ•º ÏÑ§ÏπòÌïòÍ∏∞Ï†ÑÏóê [kubectl](https://kubernetes.io/ko/docs/tasks/tools/install-kubectl-linux/)Í≥º [istioctl](https://github.com/istio/istio/releases)ÏùÑ ÏÑ§ÏπòÌï¥ÏïºÌïúÎã§. \r\n\r\n> kubectlÏùÑ ÏÑ§ÏπòÌïòÍ≥† ÌÅ¥Îü¨Ïä§ÌÑ∞ ÏÑ§Ï†ïÏù¥ ÎêòÏßÄÏïäÏïòÎã§Î©¥, `aws eks update-kubeconfig --name ÌÅ¥Îü¨Ïä§ÌÑ∞Ïù¥Î¶Ñ --region Î¶¨Ï†ÑÏù¥Î¶Ñ --profile ÌîÑÎ°úÌïÑÏù¥Î¶Ñ` Î™ÖÎ†πÏúºÎ°ú ÏÑ§Ï†ïÌï† Ïàò ÏûàÎã§.\r\n:{ \"type\": \"tip\", \"icon\": \"lightbulb\" }\r\n\r\n`istioctl`Ïù¥ ÏÑ§ÏπòÎêòÏóàÎã§Î©¥ Îã§ÏùåÏùò Î™ÖÎ†πÏúºÎ°ú `kubectl context`Ïóê ÏÑ§Ï†ïÎêú ÌÅ¥Îü¨Ïä§ÌÑ∞Ïùò Í≤ÄÏÇ¨Î•º ÏßÑÌñâÌïúÎã§.\r\n\r\n```\r\n> istioctl x precheck\r\n‚úî No issues found when checking the cluster. Istio is safe to install or upgrade!\r\n  To get started, check out https://istio.io/latest/docs/setup/getting-started/.\r\n```\r\n\r\nÏúÑÏôÄ Í∞ôÏù¥ ÎÇòÏò®Îã§Î©¥, Ï†ïÏÉÅÏ†ÅÏúºÎ°ú ÏÑ§ÏπòÍ∞Ä Í∞ÄÎä•Ìïú ÏÉÅÌÉúÏù¥Îã§.\r\n\r\n```\r\n> ./istioctl install --set revision=1-25-0\r\n        |\\\r\n        | \\\r\n        |  \\\r\n        |   \\\r\n      /||    \\\r\n     / ||     \\\r\n    /  ||      \\\r\n   /   ||       \\\r\n  /    ||        \\\r\n /     ||         \\\r\n/______||__________\\\r\n____________________\r\n  \\__       _____/\r\n     \\_____/\r\n\r\nThis will install the Istio 1.25.0 profile \"default\" into the cluster. Proceed? (y/N) y\r\n‚úî Istio core installed ‚õµÔ∏è\r\n‚úî Istiod installed üß†\r\n‚úî Ingress gateways installed üõ¨\r\n‚úî Installation complete\r\n```\r\n\r\nÏúÑ Ï≤òÎüº ÏÑ§ÏπòÍ∞Ä ÏôÑÎ£åÎêòÏóàÎã§Î©¥, service, pod, configmapÏùÑ Î™®Îëê ÌôïÏù∏Ìï¥Î≥¥Ïûê.\r\n\r\n```\r\n> kubectl get svc -n istio-system\r\nNAME                   TYPE           CLUSTER-IP       EXTERNAL-IP\r\nistio-ingressgateway   LoadBalancer   {Clister IP}     {AWS ELB DNS Address}\r\nistiod-1-22-1          ClusterIP      {Clister IP}     <none>\r\nistiod-1-25-0          ClusterIP      {Clister IP}     <none>\r\n\r\n> kubectl get pods -n istio-system\r\nNAME                                   READY   STATUS    RESTARTS   AGE\r\nistio-ingressgateway-655dc875b-sgsgm   1/1     Running   0          6m31s\r\nistiod-1-22-1-94f886767-lxjdh          1/1     Running   0          77d\r\nistiod-1-22-1-94f886767-qrccf          1/1     Running   0          77d\r\nistiod-1-25-0-85c49d99c6-x8cv5         1/1     Running   0          6m43s\r\n\r\n> kubectl get configmap -n istio-system\r\nNAME                                  DATA   AGE\r\nistio-1-22-1                          2      188d\r\nistio-1-25-0                          2      7m54s\r\nistio-ca-root-cert                    1      ...\r\nistio-gateway-deployment-leader       0      ...\r\nistio-gateway-status-leader           0      ...\r\nistio-ip-autoallocate                 0      7m43s\r\nistio-leader                          0      ...\r\nistio-namespace-controller-election   0      ...\r\nistio-sidecar-injector-1-22-1         2      188d\r\nistio-sidecar-injector-1-25-0         2      7m54s\r\nkube-root-ca.crt                      1      ...\r\n```\r\n\r\nÏÑ§ÏπòÍ∞Ä Ï†ïÏÉÅÏ†ÅÏúºÎ°ú ÎêúÍ≤ÉÏúºÎ°ú Î≥¥Ïù∏Îã§. \r\n\r\n\r\n## Î≤ÑÏ†Ñ ÏóÖÎç∞Ïù¥Ìä∏\r\n\r\nÏïàÏ†ÑÌïú ÏóÖÍ∑∏Î†àÏù¥ÎìúÎ•º ÏúÑÌï¥ ÌòÑÏû¨ ÏÇ¨Ïö©Ï§ëÏù∏ Sidecar Injector ConfigMapÏùÑ Î∞±ÏóÖ Ìï¥ÎëêÏûê.\r\n\r\n```\r\nk get configmap -n istio-system istio-sidecar-injector-1-25-0 -o yaml > istio-sidecar-injector-1.25.0.yaml\r\n```\r\n\r\ncanary(Ïã†Í∑ú Î≤ÑÏ†Ñ)ÏôÄ stable(ÌòÑÏû¨ Î≤ÑÏ†Ñ) ÌÉúÍ∑∏Î°ú ÏïàÏ†ïÏ†ÅÏù∏ Î∞∞Ìè¨Ï†ÑÎûµÏùÑ ÏÇ¨Ïö©Ï§ëÏù¥Í∏∞ ÎïåÎ¨∏Ïóê, ÌÉúÍ∑∏ÏÑ§Ï†ïÏù¥ ÌïÑÏöîÌïòÎã§.\r\n\r\n```shell::ÌÉúÍ∑∏ ÌôïÏù∏\r\n> istioctl tag list\r\nTAG    REVISION NAMESPACES\r\ncanary 1-22-1\r\nstable 1-22-1   some-qa,some-staging\r\n       1-25-0\r\n```\r\nÌòÑÏû¨Îäî `qa`ÏôÄ `staging` namespaceÎ™®Îëê stableÎ°ú Ï†ÅÏö©ÎêòÏñ¥ÏûàÍ∏∞ ÎïåÎ¨∏Ïóê ÏÉàÎ°ú Î≥ÄÍ≤ΩÌï† 1.25.0 revisionÏùÑ canaryÎ°ú Î∞îÍøîÏ§òÏïºÌïúÎã§.\r\n\r\n```shell::ÏÉàÎ°úÏö¥ Î≤ÑÏ†ÑÏùÑ canaryÎ°ú Î≥ÄÍ≤Ω\r\n> istioctl tag set canary --revision 1-25-0 --overwrite\r\nRevision tag \"canary\" created, referencing control plane revision \"1-25-0\". To enable injection using this\r\nrevision tag, use 'kubectl label namespace <NAMESPACE> istio.io/rev=canary'\r\n> istioctl tag show\r\nTAG    REVISION NAMESPACES\r\nstable 1-22-1   some-qa, some-staging\r\ncanary 1-25-0\r\n```\r\n\r\n## Î†àÏù¥Î∏î Ï†ÅÏö© Î∞è ÏÇ¨Ïù¥ÎìúÏπ¥ Ï£ºÏûÖ::labeling-and-inject-sidecar\r\n\r\nÎ¶¨ÎπÑÏ†Ñ ÌÉúÍ∑∏Î•º ÏÉùÏÑ±ÌñàÎã§Î©¥, Ïù¥Ï†ú Í∞ÄÏù¥Îìú ÎåÄÎ°ú Î†àÏù¥Î∏îÏùÑ namespaceÏóê Ï†ÅÏö©Ìï† Ïàò ÏûàÎã§.\r\n\r\n```shell::Î†àÏù¥Î∏î Ï†ÅÏö© Î∞è ÌôïÏù∏\r\n> kubectl label namespace some-qa istio.io/rev=canary --overwrite\r\nnamespace/some-qa labeled\r\n> k get ns -L istio.io/rev\r\nNAME                     STATUS   AGE    REV\r\n...\r\nistio-operator           Active   188d\r\nistio-system             Active   ...\r\n...\r\nsome-qa                  Active   ....   canary\r\nsome-staging             Active   ....   stable\r\n> k get ns --show-labels\r\nNAME                     STATUS   AGE    LABELS\r\n...\r\nsome-qa                  Active   509d   ...,istio.io/rev=canary,...\r\nsome-staging             Active   509d   ...,istio.io/rev=stable,...\r\n```\r\n\r\nÎ†àÏù¥Î∏îÏù¥ Ï†ïÏÉÅÏ†ÅÏúºÎ°ú namespaceÏóê Ï†ÅÏö©ÎêúÍ±∏ ÌôïÏù∏ Ìï† Ïàò ÏûàÎã§. Ïù¥Ï†ú Î∞∞Ìè¨Î•º ÌïòÏó¨, ÏÇ¨Ïù¥ÎìúÏπ¥Í∞Ä Ï†ïÏÉÅÏ†ÅÏúºÎ°ú Îì§Ïñ¥Í∞ÄÎäîÏßÄ ÌôïÏù∏Ïù¥ ÌïÑÏöîÌïòÎã§.\r\n\r\n::code-group\r\n\r\n```shell::Î∞∞Ìè¨ Ï†Ñ(1.22.1) ÌôïÏù∏\r\n> kubectl describe pod foo-pod -n some-qa | grep -A 10 \"Init Containers:\"\r\nInit Containers:\r\n  istio-init:\r\n    Container ID:  containerd://...\r\n    Image:         .../istio/proxyv2:1.22.1\r\n    Image ID:      .../istio/proxyv2@sha256:...\r\n    Port:          <none>\r\n    Host Port:     <none>\r\n    Args:\r\n      istio-iptables\r\n      -p\r\n      15001\r\n```\r\n\r\n```shell::Ïñ¥ÌîåÎ¶¨ÏºÄÏù¥ÏÖò Ïû¨Î∞∞Ìè¨\r\n> kubectl -n some-qa rollout restart deploy foo-pod\r\ndeployment.apps/foo-pod restarted\r\n```\r\n\r\n```shell::Î∞∞Ìè¨ ÌõÑ(1.25.0)\r\n> kubectl describe pod foo-pod -n some-qa | grep -A 10 \"Init Containers:\"\r\nInit Containers:\r\n  istio-init:\r\n    Container ID:  containerd://...\r\n    Image:         .../istio/proxyv2:1.25.0\r\n    Image ID:      .../istio/proxyv2@sha256:...\r\n    Port:          <none>\r\n    Host Port:     <none>\r\n    Args:\r\n      istio-iptables\r\n      -p\r\n      15001\r\n```\r\n::\r\n\r\nnamespaceÏóê ÏûàÎäî `foo-pod` deploymentÏùò Î™®Îì† podÏùÑ Ïû¨ÏãúÏûë ÌñàÎã§Î©¥, ÏúÑÏôÄ Í∞ôÏù¥ sidecar injectionÏù¥ Ï†ïÏÉÅÏ†ÅÏúºÎ°ú ÎêòÏóàÏùÑ Í≤ÉÏù¥Îã§.\r\n(`istioctl proxy-status`Î°ú Ïª®ÌÖçÏä§Ìä∏Ïóê Î∞∞Ìè¨Îêú ÏÉÅÌÉúÎ•º ÌôïÏù∏ Ìï† Ïàò ÏûàÎã§.)\r\n\r\nÌÖåÏä§Ìä∏Í∞Ä ÏôÑÎ£åÎêòÏóàÎã§Î©¥, stable ÌÉúÍ∑∏Î•º ÏÉàÎ°úÏö¥ Î≤ÑÏ†ÑÏúºÎ°ú Î≥ÄÍ≤ΩÌï¥Ï£ºÍ≥†, ÎÇòÎ®∏ÏßÄ Ïö¥ÏòÅ namespaceÎ•º Îã§Ïãú ÏóÖÎç∞Ïù¥Ìä∏ Ìï¥Ï§òÏïºÌïúÎã§.\r\n```shell::ÌÉúÍ∑∏ Î≥ÄÍ≤Ω Î∞è Î†àÏù¥Î∏îÎßÅ\r\n> istioctl tag set stable --revision 1-25-0 --overwrite\r\nRevision tag \"stable\" created, referencing control plane revision \"1-25-0\". To enable injection using this\r\nrevision tag, use 'kubectl label namespace <NAMESPACE> istio.io/rev=stable'\r\n\r\n> istioctl tag show\r\nTAG    REVISION NAMESPACES\r\n       1-22-1\r\ncanary 1-25-0   some-qa,some-staging\r\nstable 1-25-0\r\n\r\n> kubectl label namespace some-qa istio.io/rev=stable --overwrite\r\nnamespace/some-qa labeled\r\n> kubectl label namespace some-staging istio.io/rev=stable --overwrite\r\nnamespace/some-staging labeled\r\n```\r\n\r\n```shell::Pod Ïû¨Î∞∞Ìè¨\r\n> kubectl rollout restart -n some-qa foo-pod\r\n> kubectl rollout restart -n some-staging foo-pod\r\n```\r\n\r\nÎ∞∞Ìè¨Í∞Ä Ï†ïÏÉÅÏ†ÅÏúºÎ°ú ÎêòÏóàÍ≥†, Í∏∞Ï°¥ Î≤ÑÏ†ÑÏùÑ ÏÇ¨Ïö©ÌïòÎäî namespaceÍ∞Ä ÏóÜÎã§Î©¥ Ï†úÍ±∞Ìï¥ÎèÑ Ï¢ãÎã§.\r\n```shell::Í∏∞Ï°¥Î≤ÑÏ†Ñ ÌôïÏù∏ Î∞è ÏÇ≠Ï†ú\r\n# 1.25.0Ïù¥Ïô∏ Î≤ÑÏ†ÑÏùÑ ÏÇ¨Ïö©ÌïòÎäîÏßÄ ÌôïÏù∏\r\n> istioctl proxy-status\r\nNAME                                                  CLUSTER        CDS                LDS                EDS                RDS                ECDS        ISTIOD                             VERSION\r\n...\r\nfoo-pod-6566b68d8f-8l7c6.some-qa                      Kubernetes     SYNCED (4m5s)      SYNCED (4m5s)      SYNCED (2m15s)     SYNCED (4m5s)      IGNORED     istiod-1-25-0-85c49d99c6-x8cv5     1.25.0\r\nfoo-pod-b649ff85-rz68n.some-staging                   Kubernetes     SYNCED (4m5s)      SYNCED (4m5s)      SYNCED (2m15s)     SYNCED (4m5s)      IGNORED     istiod-1-25-0-85c49d99c6-x8cv5     1.25.0\r\n\r\n# ÏÇ≠Ï†ú\r\n> istioctl uninstall --revision 1-22-1\r\nNo resources will be pruned from the cluster. Please double check the input configs\r\n\r\n‚úî Uninstall complete\r\n```\r\n\r\n## TL;DR::too-long-did-not-read\r\n\r\n1. ÏÑ§ÏπòÏ†Ñ ÌÅ¥Îü¨Ïä§ÌÑ∞ ÌôïÏù∏\r\n   * `> istioctl x precheck`\r\n2. istio ÏÑ§Ïπò (istiod Depoloyment, ConfigMap, Service ÏÉùÏÑ±)\r\n   * `> istioctl install --set revision=1-25-0`\r\n3. ÏÑ§Ïπò ÌôïÏù∏\r\n   * `kubectl get svc -n istio-system`\r\n   * `kubectl get pods -n istio-sytem`\r\n   * `kubectl get configmap -n istiosystem`\r\n4. ÌïÑÏöîÌïú ConfigMap Î∞±ÏóÖ (ÏÑ†ÌÉù)\r\n   * `kubectl get configmap -n istio-system istio-sidecar-1-25-0 -o yaml > istio-sidecar-injector-1.25.0.yaml`\r\n5. ÌÉúÍ∑∏ ÏÑ§Ï†ï Î∞è Î†àÏù¥Î∏î Ï†ÅÏö© (ÌÉúÍ∑∏ ÌôïÏù∏: `istioctl tag show`)\r\n   1. `istioctl tag set canary --revision 1-25-0 --overwrite`\r\n   2. canary(ÌÖåÏä§Ìä∏Ïö©): `kubectl label namepsace ÎÑ§ÏûÑÏä§ÌéòÏù¥Ïä§Î™Ö istio.io/rev=canary`\r\n      * canaryÎäî Î∞∞Ìè¨ ÌÖåÏä§Ìä∏Î•º ÏúÑÌï¥ Ï†ÅÏö©ÌïòÎäî ÏûÑÏãúÏ†ÅÏù∏ Î†àÏù¥Î∏î\r\n   3. stable(ÏÑúÎπÑÏä§Ïö©): `kubectl lable namespace ÎÑ§ÏûÑÏä§ÌéòÏù¥Ïä§Î™Ö istio.io/rev=stable`\r\n6. ÏÑúÎπÑÏä§ Î∞∞Ìè¨ (Î∞∞Ìè¨ Ï†Ñ Î†àÏù¥Î∏î ÌôïÏù∏: `kubectl get ns --show-labels`)\r\n   * `kubectl rollout restart deploy -n ÎÑ§ÏûÑÏä§ÌéòÏù¥Ïä§Î™Ö ÌååÎìúÎ™Ö`\r\n   * ÏÑúÎπÑÏä§ Î∞∞Ìè¨ÌõÑ Ï†ïÏÉÅÏ†ÅÏúºÎ°ú ÎèôÏûëÌïúÎã§Î©¥, 5-3 ÏßÑÌñâ\r\n7. ÌîÑÎ°ùÏãú ÏÉÅÌÉú ÌôïÏù∏ Î∞è ÏÇ≠Ï†ú\r\n   * `istioctl proxy-status`\r\n   * ÏÇ≠Ï†ú: `istioctl uninstall --revision 1-22-1`"
  },
  {
    "path": "/docs/back-end/spring/spring-security",
    "header": {
      "layout": "post",
      "title": "Ïä§ÌîÑÎßÅ ÏãúÌÅêÎ¶¨Ìã∞ ÌîÑÎ°úÏ†ùÌä∏ Íµ¨ÏÑ±",
      "tags": [
        "Spring",
        "Spring Boot",
        "Spring Security"
      ],
      "date": 1742961480000,
      "thumbnail": "/post/back-end/spring/spring-security.svg",
      "current-company": "NEOWIZ",
      "current-position": "Software Engineer",
      "summary": "Ìä∏ÎûúÏû≠ÏÖò Í¥ÄÎ¶¨Ïûê",
      "excerpt_separator": "<!--more-->",
      "hide": true,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÏÑúÎ≤Ñ/Î∞±ÏóîÎìú",
        "Ïä§ÌîÑÎßÅ"
      ],
      "images": [],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "ÏûÑÏãú ÎπÑÎ∞ÄÎ≤àÌò∏::temporary-password",
            "title": "ÏûÑÏãú ÎπÑÎ∞ÄÎ≤àÌò∏",
            "fragment": "temporary-password",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Î≥¥Ïïà ÏÑ§Ï†ï::configure-security",
            "title": "Î≥¥Ïïà ÏÑ§Ï†ï",
            "fragment": "configure-security",
            "children": [
              {
                "rank": 3,
                "origin": "Ìèº Î°úÍ∑∏Ïù∏::form-login",
                "title": "Ìèº Î°úÍ∑∏Ïù∏",
                "fragment": "form-login",
                "children": []
              },
              {
                "rank": 3,
                "origin": "HTTP Í∏∞Î≥∏Ïù∏Ï¶ù::http-basic-authentication-scheme",
                "title": "HTTP Í∏∞Î≥∏Ïù∏Ï¶ù",
                "fragment": "http-basic-authentication-scheme",
                "children": []
              }
            ]
          }
        ]
      }
    },
    "description": "Ïä§ÌîÑÎßÅ ÏãúÌÅêÎ¶¨Ìã∞ ÌîÑÎ°úÏ†ùÌä∏ Íµ¨ÏÑ±Ïãú, ÌïÑÏöîÌïú Í∏∞Îä•ÏùÑ Ï†ïÎ¶¨ÌïúÎã§.",
    "content": "\r\n\r\n## ÏûÑÏãú ÎπÑÎ∞ÄÎ≤àÌò∏::temporary-password\r\n\r\n```\r\nUsing generated security password: c76d7851-5e89-4ef3-bc5d-cb04d5d5e365\r\n```\r\n\r\nÏä§ÌîÑÎßÅ ÏãúÌÅêÎ¶¨Ìã∞ ÏùòÏ°¥ÏÑ±Ïù¥ ÏûàÎäî ÌîÑÎ°úÏ†ùÌä∏Î•º Ïã§ÌñâÌïòÎ©¥ ÏúÑÏôÄ Í∞ôÏù¥ UUIDÏôÄ Í∞ôÏùÄ ÏûÑÏãú ÎπÑÎ∞ÄÎ≤àÌò∏Î•º Î∂ÄÏó¨ Î∞õÎäîÎã§.\r\nÏä§ÌîÑÎßÅ ÏãúÌÅêÎ¶¨Ìã∞Îäî Í∏∞Î≥∏Ï†ÅÏúºÎ°ú Î™®Îì† ÏóîÎìú Ìè¨Ïù∏Ìä∏Î•º Î≥¥Ìò∏ÌïúÎã§. Ïù¥ÎßêÏùÄ Ï¶â, ÏÑ§Ï†ïÏúºÎ°ú ÌäπÏ†ï APIÏùò ÏûêÍ≤©Ï¶ùÎ™ÖÏùÑ ÏöîÍµ¨ÌïòÎèÑÎ°ù ÌïòÏßÄÏïäÎäî Ìïú Î™®Îì† ÏóîÎìúÌè¨Ïù∏Ìä∏Îäî ÏûêÍ≤©Ï¶ùÎ™ÖÏùÑ ÏöîÍµ¨ÌïúÎã§Îäî ÎßêÏù¥Îã§.\r\n\r\nÎî∞ÎùºÏÑú ÏûêÍ≤© Ï¶ùÎ™ÖÏùÑ Ï§ÄÎπÑÌï† Ïàò ÏóÜÎäê ÏÉÅÌô©Ïóê ÎåÄÎπÑÌïòÏó¨ ÏûÑÏãú ÎπÑÎ∞ÄÎ≤àÌò∏Î°ú ÏûêÍ≤©Ï¶ùÎ™ÖÏùÑ ÏÇ¨Ïö©ÌïòÍ≤å Ìï¥Ï£ºÎäî Í∏∞Îä•Ïù¥Îã§.\r\n\r\n> ÎãπÏó∞Ìûà ÏûêÍ≤© Ï¶ùÎ™ÖÏùÑ ÎåÄÏã†ÌïòÎØÄÎ°ú, Í∞úÎ∞úÌôòÍ≤Ω(ÎòêÎäî Î°úÏª¨)ÏóêÏÑú Îßå ÏÇ¨Ïö©ÌïòÎäîÍ≤ÉÏùÑ Í∂åÏû•ÌïúÎã§. Ïù¥ Í∞íÏùÄ ÏÑúÎ≤ÑÎ•º Îã§Ïãú ÏãúÏûëÌïòÎ©¥ ÏÉàÎ°ú Î∞úÍ∏âÎêúÎã§.\r\n:{ \"type\": \"caution\", \"icon\": \"info\" }\r\n\r\n## Î≥¥Ïïà ÏÑ§Ï†ï::configure-security\r\n\r\n```java\r\n@Configuration\r\n@EnableWebSecurity\r\npublic class SecurityConfiguration {\r\n    ...\r\n}\r\n```\r\n\r\n`Spring Security`Îäî Í∞ÑÎã®Ìïú ÏÑ§Ï†ïÏúºÎ°ú Í∞ïÎ†•Ìïú Î≥¥ÏïàÏùÑ ÏßÄÏõêÌïúÎã§.\r\nÏúÑÏôÄ Í∞ôÏù¥ `@EnableWebSecurity` Ïñ¥ÎÖ∏ÌÖåÏù¥ÏÖò Ï∂îÍ∞ÄÏãú, ÎÇ¥Î∂ÄÏ†ÅÏúºÎ°ú Ïõπ Î≥¥ÏïàÍ≥º Í¥ÄÎ†®Îêú Ïó¨Îü¨ ÏÑ§Ï†ïÎì§ÏùÑ Í∞ÄÏ†∏Ïò®Îã§.\r\n\r\n```javascript\r\n@Import({\r\n    WebSecurityConfiguration.class, SpringWebMvcImportSelector.class, OAuth2ImportSelector.class,\r\n    HttpSecurityConfiguration.class, ObservationImportSelector.class\r\n})\r\n```\r\n\r\nÏñ¥Ï®ãÎì† Í∏∞Î≥∏ ÏÑ§Ï†ïÏùÑ ÏÇ¨Ïö©ÏûêÌôî ÌïòÎ†§Î©¥ `SecurityFilterChain`ÏùÑ BeanÏúºÎ°ú Îì±Î°ùÌï¥Ï£ºÎ©¥ ÎêúÎã§.\r\n\r\n```java\r\n@Bean\r\npublic SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {\r\n    return http.build();\r\n}\r\n```\r\n\r\nÍ∏∞Î≥∏Ï†ÅÏúºÎ°ú Îì±Î°ùÏùÑÌïòÍ≥†, HttpSecurity Í∞ùÏ≤¥Î°ú Î≥ÄÍ≤ΩÌï† Ïàò ÏûàÎã§.\r\n\r\n### Ìèº Î°úÍ∑∏Ïù∏::form-login\r\n\r\nÏûÑÏãú ÎπÑÎ∞ÄÎ≤àÌò∏Î°ú Î∞õÏùÄ ÏûÑÏùòÏùò Î¨∏ÏûêÏó¥ÏùÄ `/login` ÌéòÏù¥ÏßÄÏóêÏÑú ÏÇ¨Ïö©Í∞ÄÎä•ÌïòÎã§. ÌïÑÌÑ∞Ï≤¥Ïù∏ÏùÑ BeanÏúºÎ°ú Îì±Î°ùÌïòÏßÄÏïäÎäî Ïù¥ÏÉÅ Í∏∞Î≥∏Ï†ÅÏúºÎ°ú ÌèºÎ°úÍ∑∏Ïù∏ÏùÄ ÌôúÏÑ±Ìôî ÎêúÎã§.\r\n\r\nÎ®ºÏ†Ä Ìèº Î°úÍ∑∏Ïù∏ÏùÄ UsernameÏóê `user` Í∑∏Î¶¨Í≥† PasswordÏóê [ÏûÑÏãú ÎπÑÎ∞ÄÎ≤àÌò∏](#ÏûÑÏãú-ÎπÑÎ∞ÄÎ≤àÌò∏temporary-password)Î°ú Î°úÍ∑∏Ïù∏Ïù¥ Í∞ÄÎä•ÌïòÎã§.\r\nÌèº Î°úÍ∑∏Ïù∏ÏùÄ Îã§ÏùåÍ≥º Í∞ôÏù¥ Ï≤òÎ¶¨ÎêúÎã§.\r\n\r\n```java::ÎπÑÌôúÏÑ±Ìôî (Îã§Î•∏ Ïù∏Ï¶ùÎ∞©Î≤ïÏùÑ ÏÇ¨Ïö©Ìï¥ÏïºÌï®)\r\nhttp.formLogin(form -> form.disable());\r\n```\r\n\r\n```java::ÌôúÏÑ±Ìôî (ÌèºÎ°úÍ∑∏Ïù∏ÏúºÎ°ú ÏÇ¨Ïö©)\r\nhttp.formLogin(form -> form.permitAll());\r\n```\r\n\r\nÎßåÏïΩ @BeanÎßå Îì±Î°ùÌïòÍ≥† Ìèº Î°úÍ∑∏Ïù∏ÏóêÎåÄÌï¥ ÏÑ§Ï†ïÌïòÏßÄ ÏïäÎäîÎã§Î©¥ ÎπÑÌôúÏÑ±ÌôîÏù¥Îã§ (Bean ÏûêÏ≤¥Í∞Ä Îπà ÏÑ§Ï†ïÏúºÎ°ú Îì±Î°ùÎê®).\r\n\r\n### HTTP Í∏∞Î≥∏Ïù∏Ï¶ù::http-basic-authentication-scheme\r\n\r\nHTTP Í∏∞Î≥∏Ïù∏Ï¶ùÏùÄ [RFC 2617](https://datatracker.ietf.org/doc/html/rfc2617) ÏÇ¨ÏñëÏùò `HTTP Basic Authentication Scheme`Ïù¥Îã§.\r\n\r\n```java\r\nhttp.httpBasic(basic -> basic.disable());\r\n```\r\n\r\nHTTP Í∏∞Î≥∏ Ïù∏Ï¶ù Ïä§ÌÇ¥(`Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==`) ÎπÑÌôúÏÑ±ÌôîÎäî ÏúÑÏôÄ Í∞ôÏù¥ Ìï† ÏàòÏûàÎã§.\r\n\r\n"
  },
  {
    "path": "/docs/life/youth-of-ggomi",
    "header": {
      "layout": "post",
      "title": "Íº¨ÎØ∏Ïùò Ï†äÏùÄ ÏãúÏ†à",
      "description": "Ïù¥Îπ®Î°ú Î¨¥Îäî ÎÖ∏Î£®",
      "tags": [
        "Life"
      ],
      "date": 1734591600000,
      "thumbnail": "/post/life/tired-ggomi.png",
      "current-company": "NEOWIZ",
      "current-position": "Software Engineer",
      "summary": "ÎÇòÎûÄ Íº¨ÎØ∏",
      "excerpt-separator": "<!--more-->",
      "hide": true,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÏùºÏÉÅ"
      ],
      "images": [
        {
          "src": "/post/life/first-day-of-ggomi.jpg",
          "alt": "Íº¨ÎØ∏Í∞Ä Ï≤òÏùå Ïò® ÎÇ†"
        }
      ],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": []
      }
    },
    "description": "",
    "content": "\r\n\r\n![Íº¨ÎØ∏Í∞Ä Ï≤òÏùå Ïò® ÎÇ†](/post/life/first-day-of-ggomi.jpg)\r\n:{ \"align\": \"center\", \"description\": \"Íº¨ÎØ∏Í∞Ä Ï≤òÏùå Ïò®ÎÇ†\", \"max-width\": \"300px\"}\r\n\r\nÍº¨ÎØ∏Îäî ÏóÑÎßàÎ•º ÏûÉÍ≥†, Ï£ΩÏñ¥ Í∞ÄÎçò ÌòïÏ†úÎì§ ÏÇ¨Ïù¥ÏóêÏÑú Í∞ôÏù¥ ÏÉùÎ™ÖÏùÑ ÏûÉÏñ¥Í∞ÄÍ≥† ÏûàÏóàÎã§.  \r\nÍº¨ÎØ∏Îäî ÌÉúÏñ¥ÎÇ¨ÏùÑÎïå Îã§Î•∏ Í∞ïÏïÑÏßÄÎì§Î≥¥Îã§ ÎÑàÎ¨¥ ÏûëÏïÑÏÑú Ï™ºÍº¨ÎØ∏ÎùºÍ≥† ÏßÄÏóàÎã§. (ÏóÑÎßàÍ∞Ä Ï°∞Ïî®ÎùºÏÑú Ï°∞Íº¨ÎØ∏)  \r\n\r\nÏßëÏóê Îç∞Î†§Í∞ÄÎçò Ï∞®ÏïàÏóêÏÑú ÌÜ†Î•º ÌñàÎäîÎç∞, Î™á Î∞±ÎßàÎ¶¨Ïùò Í∏∞ÏÉùÏ∂©Ïù¥ ÎÇòÏôîÎã§.\r\n"
  },
  {
    "path": "/docs/database/mysql-explain",
    "header": {
      "layout": "post",
      "title": "MySQLÏùò EXPLAINÏùÑ ÏïåÏïÑÎ≥¥Ïûê",
      "tags": [
        "Database",
        "MySQL",
        "EXPLAIN"
      ],
      "date": 1724390820000,
      "thumbnail": "/post/database/mysql/mysql-explain-thumbnail.webp",
      "current-company": "NEOWIZ",
      "current-position": "Software Engineer",
      "summary": "MySQL Ïã§ÌñâÍ≥ÑÌöç",
      "excerpt-separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§"
      ],
      "images": [],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "EXPLAIN Ï∂úÎ†• Ïª¨Îüº::explain-output-columns",
            "title": "EXPLAIN Ï∂úÎ†• Ïª¨Îüº",
            "fragment": "explain-output-columns",
            "children": [
              {
                "rank": 3,
                "origin": "id (SELECT ÏàúÏÑú)::id",
                "title": "id (SELECT ÏàúÏÑú)",
                "fragment": "id",
                "children": []
              },
              {
                "rank": 3,
                "origin": "select_type (SELECT ÌÉÄÏûÖ)::select-type",
                "title": "select_type (SELECT ÌÉÄÏûÖ)",
                "fragment": "select-type",
                "children": []
              },
              {
                "rank": 3,
                "origin": "table (Ï∞∏Ï°∞ ÌÖåÏù¥Î∏î)::table",
                "title": "table (Ï∞∏Ï°∞ ÌÖåÏù¥Î∏î)",
                "fragment": "table",
                "children": []
              },
              {
                "rank": 3,
                "origin": "partition (ÌååÌã∞ÏÖò)::partition",
                "title": "partition (ÌååÌã∞ÏÖò)",
                "fragment": "partition",
                "children": []
              },
              {
                "rank": 3,
                "origin": "type (Ï°∞Ïù∏ÌÉÄÏûÖ)::type",
                "title": "type (Ï°∞Ïù∏ÌÉÄÏûÖ)",
                "fragment": "type",
                "children": []
              },
              {
                "rank": 3,
                "origin": "possible_keys (ÏÇ¨Ïö©Í∞ÄÎä•Ìïú Ïù∏Îç±Ïä§)::possible-keys",
                "title": "possible_keys (ÏÇ¨Ïö©Í∞ÄÎä•Ìïú Ïù∏Îç±Ïä§)",
                "fragment": "possible-keys",
                "children": []
              },
              {
                "rank": 3,
                "origin": "key (ÏÇ¨Ïö©Ìï† Ïù∏Îç±Ïä§)::key",
                "title": "key (ÏÇ¨Ïö©Ìï† Ïù∏Îç±Ïä§)",
                "fragment": "key",
                "children": []
              },
              {
                "rank": 3,
                "origin": "key_len (ÌÇ§Ïùò Í∏∏Ïù¥)::key-len",
                "title": "key_len (ÌÇ§Ïùò Í∏∏Ïù¥)",
                "fragment": "key-len",
                "children": []
              },
              {
                "rank": 3,
                "origin": "ref (Ï∞∏Ï°∞ Í∞í)::ref",
                "title": "ref (Ï∞∏Ï°∞ Í∞í)",
                "fragment": "ref",
                "children": []
              },
              {
                "rank": 3,
                "origin": "rows (Í≤ÄÏÇ¨ Ìñâ Í∞úÏàò)::rows",
                "title": "rows (Í≤ÄÏÇ¨ Ìñâ Í∞úÏàò)",
                "fragment": "rows",
                "children": []
              },
              {
                "rank": 3,
                "origin": "filtered (ÌïÑÌÑ∞Îêú ÏàòÏπò)::filtered",
                "title": "filtered (ÌïÑÌÑ∞Îêú ÏàòÏπò)",
                "fragment": "filtered",
                "children": []
              },
              {
                "rank": 3,
                "origin": "Extra (Ï∂îÍ∞ÄÏ†ÅÏù∏ ÎÇ¥Ïö©)::extra",
                "title": "Extra (Ï∂îÍ∞ÄÏ†ÅÏù∏ ÎÇ¥Ïö©)",
                "fragment": "extra",
                "children": []
              }
            ]
          }
        ]
      }
    },
    "description": "MySQLÏùò ÏøºÎ¶¨Ïã§ÌñâÍ≥ÑÌöçÏóê ÎåÄÌï¥ ÏïåÏïÑÎ≥¥Ïûê.",
    "content": "\r\n\r\nÌöåÏÇ¨ÏóêÏÑúÎäî Ïã†Í∑úÏú†ÏûÖÎêòÎäî ÏøºÎ¶¨Ïóê ÌïúÏóê Í≤ÄÏàòÌï† Ïàò ÏûàÎäî Ìà¥ÏùÑ ÎßåÎì§ÏóàÎã§.\r\n\r\nÎÇòÎäî Îã¥ÎãπÌïòÎäî ÏÑúÎπÑÏä§Ïóê ÎåÄÌï¥ Ïã†Í∑ú Ïú†ÏûÖ ÏøºÎ¶¨Î•º Í≤ÄÏàòÌï¥ÏïºÌïòÎ©∞, Îß§Ïö∞ ÎßéÏùÄ ÏøºÎ¶¨Î•º Î¥êÏïºÎßå ÌñàÎã§. \r\nÏù¥Îäî Î∞òÎ≥µÏ†ÅÏù∏ ÏóÖÎ¨¥(ÏøºÎ¶¨ Î≥µÏÇ¨, ÌÖåÏù¥Î∏î Î∞è Ïù∏Îç±Ïä§ÌôïÏù∏, Í≤ÄÏàò)Î°ú Ïù¥Ïñ¥Ï°åÏúºÎ©∞, Ïã§ÌñâÍ≥ÑÌöçÎßåÏúºÎ°ú Î∂ÑÏÑùÌï¥ÏïºÌïòÎäî ÎåÄÏÉÅÏù∏ÏßÄÎ•º 1Ï∞®Ï†ÅÏúºÎ°ú ÌåêÎã®Ìï† ÌïÑÏöîÍ∞ÄÏûàÏóàÎã§.\r\n\r\nÏøºÎ¶¨Îäî Ïó¨Îü¨ Ïú†ÏûÖ Î™©Î°ùÏ§ë ÌïòÎÇòÎ•º ÏÉÅÏÑ∏Î≥¥Í∏∞Î°ú Ï†ÑÏ≤¥ÏøºÎ¶¨Î•º Î≥¥ÏïÑ DB Client(Datagrip)Î°ú Í∞ÄÏ†∏ÏôÄÏÑú ÌïúÍ∞úÏî© ÌôïÏù∏ Ìï¥ÏïºÌñàÎã§. \r\nÌï¥Îãπ Î™©Î°ùÏóêÎäî ÏøºÎ¶¨ Ïã§ÌñâÍ≥ÑÌöçÎèÑ Ìè¨Ìï®Ïù¥ ÎêòÏñ¥ÏûàÍ∏∞ÎïåÎ¨∏Ïóê, ÏÉÅÏÑ∏Î≥¥Í∏∞Î•º Î≥¥ÏßÄÏïäÍ≥†, Î™©Î°ùÏóêÏÑú Ïã§ÌñâÍ≥ÑÌöçÎßå Î≥∏Îã§Î©¥ Î∞îÎ°ú ÌåêÎã®Ïù¥ Í∞ÄÎä•ÌïòÎã§Í≥† ÏÉùÍ∞ÅÎêòÏñ¥, Ïã§Ìñâ Í≥ÑÌöçÏùÑ Í≥µÎ∂ÄÌïòÍ∏∞Î°ú ÌñàÎã§.  \r\n\r\n---\r\n\r\n`EXPLAIN`ÏùÄ MySQLÏù¥ statementÎ•º Ïñ¥ÎñªÍ≤å Ïã§ÌñâÌïòÎäîÏßÄÏóê ÎåÄÌïú Ï†ïÎ≥¥Î•º Ï†úÍ≥µÌïúÎã§.\r\n`EXPLAIN`ÏùÄ `SELECT`ÏøºÎ¶¨ ÏóêÏÑú ÏÇ¨Ïö©ÎêòÎäî Í∞Å ÌÖåÏù¥Î∏îÏóê ÎåÄÌïú Ï†ïÎ≥¥Î•º Î∞òÌôòÌïòÎ©∞, Ïù¥Îäî [Mysql Query Optimizer]() Í∞Ä Î™ÖÎ†πÎ¨∏ÏùÑ Ï≤òÎ¶¨ÌïòÎ©¥ÏÑú ÏùΩÎäî ÏàúÏÑúÎåÄÎ°ú ÌÖåÏù¥Î∏îÏùÑ ÎÇòÏó¥ÌïúÎã§. \r\nÏù¥ ÎßêÏùÄ MySQLÏù¥ Ï≤´Î≤àÏß∏ ÌÖåÏù¥Î∏îÏóêÏÑú ÌñâÏùÑ ÏùΩÍ≥† ÎëêÎ≤àÏß∏ ÌÖåÏù¥Î∏îÏóêÏÑú Îß§ÏπòÎêòÎäî ÌñâÏùÑ Ï∞æÏùÄ Îã§Ïùå, ÏÑ∏Î≤àÏß∏ ÌÖåÏù¥Î∏îÏóêÏÑú, Í∑∏Î¶¨Í≥† Í≥ÑÏÜç Í∑∏Î†áÍ≤å ÏßÑÌñâÌïúÎã§Îäî ÏùòÎØ∏Ïù¥Îã§. \r\n\r\n\r\n\r\n## EXPLAIN Ï∂úÎ†• Ïª¨Îüº::explain-output-columns\r\n\r\n`EXPLAIN`Ïùò Í∞Å Ï∂úÎ†• ÌñâÏùÄ ÌïòÎÇòÏùò ÌÖåÏù¥Î∏îÏóê ÎåÄÌïú Ï†ïÎ≥¥Î•º Ï†úÍ≥µÌïúÎã§. Í∞Å ÌñâÏùÄ  ÏïÑÎûò `Ìëú 1.1 EXPLAIN Ï∂úÎ†• Ïª¨ÎüºÎì§` Ïóê ÏöîÏïΩÎêú Í∞íÏùÑ Ìè¨Ìï®ÌïúÎã§.\r\nÌÖåÏù¥Î∏îÏùò Ï≤´Î≤àÏß∏ Ïª¨ÎüºÏóêÎäî Ïª¨ÎüºÎ™Ö, ÎëêÎ≤àÏß∏Îäî `FORMAT=JSON`Ïù¥ ÏÇ¨Ïö©Îê†Îïå Ï∂úÎ†•ÏóêÏÑú Î≥¥Ïó¨ÏßÄÎäî ÌîÑÎ°úÌçºÌã∞Î™ÖÏùÑ Ï†úÍ≥µÌïúÎã§.\r\n\r\n\r\n\r\n*Ìëú 1.1 EXPLAIN Ï∂úÎ†• Ïª¨ÎüºÎì§*\r\n\r\n| Ïª¨Îüº          | JSON Ïù¥Î¶Ñ     | ÏùòÎØ∏                             |\r\n| ------------- | ------------- | -------------------------------- |\r\n| id            | select_id     | SELECT ÏãùÎ≥ÑÏûê                    |\r\n| select_type   | ÏóÜÏùå          | SELECT ÌÉÄÏûÖ                      |\r\n| table         | table_name    | Í≤∞Í≥º ÌñâÏóê ÎåÄÌïú ÌÖåÏù¥Î∏î            |\r\n| partitions    | partitions    | Îß§Ïπ≠ÎêòÎäî ÌååÌã∞ÏÖò                  |\r\n| type          | access_type   | JOIN ÌÉÄÏûÖ                        |\r\n| possible_keys | possible_keys | ÏÑ†ÌÉùÏóê ÏÇ¨Ïö©Í∞ÄÎä•Ìïú indexÎì§        |\r\n| key           | key_length    | ÏÑ†ÌÉùÎêú ÌÇ§Ïùò Í∏∏Ïù¥                 |\r\n| ref           | ref           | indexÏóê ÎπÑÍµêÎêòÎäî Ïª¨ÎüºÎì§          |\r\n| rows          | rows          | Ï°∞ÏÇ¨Îê† ÏòàÏÉÅÌñâ                    |\r\n| filtered      | filtered      | ÌÖåÏù¥Î∏î Ï°∞Í±¥ÏóêÏÑú Í±∏Îü¨ÏßÑ ÌñâÏùò ÎπÑÏú® |\r\n| extra         | ÏóÜÏùå          | Ï∂îÍ∞Ä Ï†ïÎ≥¥                        |\r\n\r\n\r\n\r\n### id (SELECT ÏàúÏÑú)::id\r\n(JSON: selected_id)  \r\nSELECT ÏãùÎ≥ÑÏûêÏù¥Îã§. ÏøºÎ¶¨ ÎÇ¥ÏóêÏÑú SELECTÏùò ÏàúÏÑúÍ∞Ä ÏûàÎäî Ïà´ÏûêÏù¥Î©∞,  Îã§Î•∏ ÌñâÏùò `UNION` Í≤∞Í≥ºÎ•º ÌñâÏù¥ Ï∞∏Ï°∞ÌïúÎã§Î©¥ Í∞íÏùÄ nullÏùº Ïàò ÏûàÎã§. \r\nÏù¥ Í≤ΩÏö∞ ÌÖåÏù¥Î∏î Ïª¨ÎüºÏùÄ id Í∞íÎì§Ïùò MÍ≥º NÏù∏ ÌñâÏùò `UNION`Ïóê ÌñâÏù¥ Ï∞∏Ï°∞ÌïòÎäî ÌñâÏùÑ ÎÇòÌÉÄÎÇ¥Í∏∞ ÏúÑÌï¥, <union**M**,**N**> Í∞ôÏùÄ Í∞íÏùÑ Î≥¥Ïó¨Ï§ÄÎã§.\r\n  \r\n\r\n### select_type (SELECT ÌÉÄÏûÖ)::select-type   \r\n(JSON: ÏóÜÏùå)  \r\nÏïÑÎûò Î≥¥Ïó¨ÏßÑ ÌÖåÏù¥Î∏îÏ§ë Ïñ¥Îñ§ `SELECT`Ïùò ÌÉÄÏûÖÏù¥Îã§. JSON-formatted EXPLAINÏùÄ  `SIMPLE`Ïù¥ÎÇò `PRIMARY`Í∞Ä ÏïÑÎãå Ìïú  `query_block`Ïùò ÌîÑÎ°úÌçºÌã∞Î°ú SELECT ÌÉÄÏûÖÏùÑ ÎÖ∏Ï∂úÌïúÎã§.\r\n\r\n| select_type **Í∞í**   | JSON Ïù¥Î¶Ñ                  | Meaning                                                      |\r\n| -------------------- | -------------------------- | ------------------------------------------------------------ |\r\n| SIMPLE               | ÏóÜÏùå                       | Í∞ÑÎã®Ìïú SELECT (UNION ÎòêÎäî ÏÑúÎ∏åÏøºÎ¶¨ ÏÇ¨Ïö© X)                   |\r\n| PRIMARY              | ÏóÜÏùå                       | Í∞ÄÏû• Î∞îÍπ•Ï™Ω SELECT                                           |\r\n| UNION                | ÏóÜÏùå                       | UNIONÏùò ÎëêÎ≤àÏß∏ Ïù¥ÏÉÅÏùò SELECT                                 |\r\n| DEPENDENT UNION      | dependent (true)           | Î∞îÍπ•Ï™Ω ÏøºÎ¶¨Ïóê ÏùòÏ°¥ÎêòÎäî UNIONÏóêÏÑú ÎëêÎ≤àÏß∏ Ïù¥ÏÉÅÏùò SELECT        |\r\n| UNION RESULT         | union_result               | UNIONÏùò Í≤∞Í≥º                                                 |\r\n| SUBQUERY             | ÏóÜÏùå                       | ÏÑúÎ∏åÏøºÎ¶¨Ïùò Ï≤´Î≤àÏß∏ SELECT                                     |\r\n| DEPENDENT SUBQUERY   | dependent (true)           | Î∞îÍπ•Ï™Ω ÏøºÎ¶¨Ïóê ÏùòÏ°¥ÎêòÎäî ÏÑúÎ∏åÏøºÎ¶¨Ïùò Ï≤´Î≤àÏß∏ SELECT              |\r\n| DERIVED              | ÏóÜÏùå                       | ÌååÏÉùÎêú ÌÖåÏù¥Î∏î (ÏÑúÎ∏åÏøºÎ¶¨Î°ú ÎßåÎì§Ïñ¥ÏßÑ ÏûÑÏãúÌÖåÏù¥Î∏î)               |\r\n| DEPENDENT DERIVED    | depentent (true)           | ÎòêÎã§Î•∏ ÌÖåÏù¥Î∏îÏùÑ ÏùòÏ°¥ÌïòÎäî ÌååÏÉùÎêú ÌÖåÏù¥Î∏î                       |\r\n| MATERIALIZED         | materialized_from_subquery | ÏÑúÎ∏åÏøºÎ¶¨Î°ú Î¨ºÏßàÌôî                                            |\r\n| UNCHAHEABLE SUBQUERY | cacheable (false)          | Î∞îÍπ•Ï™Ω ÏøºÎ¶¨Ïùò Í∞Å  ÌñâÏóêÎåÄÌï¥ Í≤∞Í≥ºÍ∞Ä Ï∫êÏãúÎê†Ïàò ÏóÜÍ≥† Ïû¨ ÌèâÍ∞Ä ÎêòÏñ¥ÏïÑÏïºÌïòÎäî ÏÑúÎ∏åÏøºÎ¶¨ |\r\n| UNCACHEABLE UNION    | cacheable (false)          | Ï∫êÏãúÎ•º Ìï† Ïàò ÏóÜÎäî ÏÑúÎ∏åÏøºÎ¶¨Ïóê ÏÜçÌï¥ÏûàÎäî UNION ÎÇ¥ ÎëêÎ≤àÏß∏ Ïù¥ÏÉÅ SELECT |\r\n\r\n> `DEPENDENT`Îäî ÏùºÎ∞òÏ†ÅÏúºÎ°ú [ÏÉÅÍ¥ÄÍ¥ÄÍ≥Ñ ÏÑúÎ∏åÏøºÎ¶¨](https://dev.mysql.com/doc/refman/8.4/en/correlated-subqueries.html) ÏÇ¨Ïö©ÏùÑ ÏùòÎØ∏ÌïúÎã§.\r\n:{ \"type\": \"note\", \"icon\": \"info\"}\r\n\r\n### table (Ï∞∏Ï°∞ ÌÖåÏù¥Î∏î)::table\r\n(JSON: table_name)    \r\nÏ∂úÎ†•ÌñâÏù¥ Ï∞∏Ï°∞ÌïòÎäî ÌÖåÏù¥Î∏îÎ™ÖÏù¥Î©∞, Îã§Ïùå Í∞íÏ§ë ÌïòÎÇòÍ∞Ä Îê† ÏàòÎèÑ ÏûàÎã§.\r\n* <union**M**, **N**>:  ÌñâÏùÄ **M** Í≥º **N**Ïùò id Í∞íÏùÑ Í∞ñÎäî ÌñâÏùò unionÏùÑ Ìï©ÏßëÌï©ÏùÑ Ï∞∏Ï°∞ÌïúÎã§.\r\n* <deribed**N**>: ÌñâÏùÄ **N**Ïùò Í∞íÏùÑ Í∞ñÎäî ÌñâÏóê ÎåÄÌïú ÌååÏÉùÎêú ÌÖåÏù¥Î∏îÏùò Í≤∞Í≥ºÎ•º Ï∞∏Ï°∞ÌïúÎã§.  ÌååÏÉùÎêú ÌÖåÏù¥Î∏îÏùÄ ÏòàÎ•ºÎì§Ïñ¥ `FROM`Ï†à ÎÇ¥ ÏÑúÎ∏åÏøºÎ¶¨ÏóêÏÑú ÏÉùÏÑ±Îê† ÏàòÎèÑ ÏûàÎã§.\r\n* <subquery**N**>: ÌñâÏùÄ **N**Ïùò idÍ∞íÏùÑ Í∞ñÎäî ÌñâÏóêÎåÄÌï¥ Íµ¨Ï≤¥ÌôîÎêú ÏÑúÎ∏åÏøºÎ¶¨(Materialized Subquery)Ïùò Í≤∞Í≥ºÎ•º Ï∞∏Ï°∞ÌïúÎã§.\r\n\r\n### partition (ÌååÌã∞ÏÖò)::partition\r\n(JSON: partitions)  \r\n  ÏøºÎ¶¨Î°úÎ∂ÄÌÑ∞ Îß§Ïπ≠Îê†Ïàò ÏûàÎäî Î†àÏΩîÎìúÏóêÏÑúÏùò ÌååÌã∞ÏÖòÏù¥Îã§. ÌååÌã∞ÏÖîÎãù ÎêòÏßÄÏïäÏùÄ ÌÖåÏù¥Î∏îÏóê ÎåÄÌï¥ÏÑúÎäî `NULL` Ïù¥Îã§.\r\n\r\n### type (Ï°∞Ïù∏ÌÉÄÏûÖ)::type\r\n(JSON: access_type)\r\nÏ°∞Ïù∏ ÌÉÄÏûÖÏù¥Î©∞, ÌÖåÏù¥Î∏îÎì§ÏùÑ Ïñ¥ÎñªÍ≤å Ï°∞Ïù∏ÌïòÎäîÏßÄ ÏÑ§Î™ÖÏùÑ Ï∂úÎ†•ÌïúÎã§. JSON-formatted Ï∂úÎ†•ÏóêÏÑúÎäî acess_typeÏùò ÏÜçÏÑ± Í∞íÏúºÎ°ú ÎÇòÏò®Îã§. Îã§ÏùåÏóê Î™©Î°ùÏùÄ Ï°∞Ïù∏ÌÉÄÏûÖÏùÑ Ï¢ãÏùÄ ÏºÄÏù¥Ïä§Î∂ÄÌÑ∞ ÏïàÏ¢ãÏùÄÏºÄÏù¥Ïä§ ÏàúÏúºÎ°ú ÏÑ§Î™ÖÌïúÎã§.\r\n* system  \r\n  ÌÖåÏù¥Î∏îÏù¥ ÌïúÍ∞úÏùò Î°úÏö∞(= ÏãúÏä§ÌÖú ÌÖåÏù¥Î∏î)Îßå Í∞ÄÏßÄÍ≥†ÏûàÎã§. `const` Ï°∞Ïù∏ÌÉÄÏûÖÏùò ÌäπÎ≥ÑÌïú ÏºÄÏù¥Ïä§Ïù¥Îã§.\r\n* const  \r\nÌÖåÏù¥Î∏îÏóê Îß§Ïπ≠ÎêòÎäî ÌñâÏù¥ ÏµúÎåÄ ÌïúÍ∞úÎßå ÏûàÏúºÎ©∞, Ïù¥Îäî ÏøºÎ¶¨Ïùò ÏãúÏûëÏãú ÏùΩÌûåÎã§. Ïò§ÏßÅ ÌïúÍ∞úÏùò ÌñâÎßå ÏûàÍ∏∞ ÎïåÎ¨∏Ïù∏Îç∞, Ïù¥ ÌñâÏùò Ïó¥Ïóê ÏûàÎäî Í∞íÏùÄ ÏòµÌã∞ÎßàÏù¥Ï†ÄÏùò ÎÇòÎ®∏ÏßÄ Î∂ÄÎ∂ÑÏóêÏÑú ÏÉÅÏàòÎ°ú Í∞ÑÏ£ºÎê† Ïàò ÏûàÎã§. `const` ÌÖåÏù¥Î∏îÏùÄ ÌïúÎ≤àÎßå ÏùΩÌûàÎØÄÎ°ú Îß§Ïö∞Îπ†Î•¥Îã§.\r\n`const` Îäî`UNIQUE` Ïù∏Îç±Ïä§ÎÇò `PRIMARY KEY` Ïùò Î™®Îì† Î∂ÄÎ∂ÑÏùÑ ÏÉÅÏàòÍ∞íÍ≥º ÎπÑÍµêÌï†Îïå ÏãúÏö©ÎêúÎã§.  Îã§Ïùå ÏøºÎ¶¨Îäî  *tbl_name*Ïù¥ ÏÉÅÏàò ÌÖåÏù¥Î∏îÎ°ú ÏÇ¨Ïö©Îê† Ïàò ÏûàÎã§.\r\n```sql\r\nSELECT * FROM tbl_name WHERE primary_key = 1;\r\n  \r\nSELECT * FROM tbl_name\r\n    WHERE primary_key_part1 = 1 AND primary_key_part2 = 2;\r\n```\r\n\r\n* eq_ref  \r\nÏù¥Ï†Ñ ÌÖåÏù¥Î∏îÏóêÏÑú Í∞Å Ìñâ Ï°∞Ìï©ÎßàÎã§ Ïù¥ ÌÖåÏù¥Î∏îÏóêÏÑú Ìïú ÌñâÏî© ÏùΩÎäîÎã§. `system`Í≥º `const` ÌÉÄÏûÖÏùÑ Ï†úÏô∏ÌïòÎ©¥ Ïù¥Í≤å Ï†úÏùº ÎÇòÏùÄ Ï°∞Ïù∏ÌÉÄÏûÖÏù¥Îã§.  Ï°∞Ïù∏ÏóêÏÑú Ïù∏Îç±Ïä§Ïùò Î™®Îì† Î∂ÄÎ∂ÑÏùÑ ÏÇ¨Ïö©ÌïòÍ≥†,  Ïù∏Îç±Ïä§Í∞Ä `PRIMARY` ÎòêÎäî `UNIQUE NOT NULL` Ïù∏Îç±Ïä§Ïù∏ Í≤ΩÏö∞Ïóê ÏÇ¨Ïö©ÎêúÎã§.\r\n`eq_ref`Îäî `=` Ïó∞ÏÇ∞ÏûêÎ•º ÏÇ¨Ïö©ÌïòÏó¨ ÎπÑÍµêÎêú Ïª¨Îüº  Ïù∏Îç±Ïä§Ïóê ÏÇ¨Ïö©Îê† ÏàòÏûàÎã§. ÎπÑÍµêÍ∞íÏùÄ ÏÉÅÏàòÍ∞Ä Îê†Ïàò ÏûàÍ≥†, Ïù¥ ÌÖåÏù¥Î∏îÎ≥¥Îã§ Î®ºÏ†Ä ÏùΩÏùÄ ÌÖåÏù¥Î∏îÏùò Ïó¥ÏùÑ ÏÇ¨Ïö©ÌïòÎäî ÌëúÌòÑÏãùÏù¥ Îê† ÏàòÎèÑ ÏûàÎã§. Îã§ÏùåÏùò ÏòàÏ†úÏóêÏÑú MySQL ÏùÄ *ref_table*Î•º Ï≤òÎ¶¨ÌïòÍ∏∞ÏúÑÌï¥ `eq_ref` Ï°∞Ïù∏ÏùÑ ÏÇ¨Ïö© Ìï† Ïàò ÏûàÎã§.\r\n```sql\r\nSELECT * FROM ref_table,other_table\r\n  WHERE ref_table.key_column = other_table.column; //ÌëúÌòÑÏãù ÎπÑÍµê\r\n  \r\nSELECT * FROM ref_table, other_table\r\n  WHERE ref_table.key_column_part1 = other_table.column\r\n  AND ref_table.key_column_part2 = 1; //ÏÉÅÏàòÎπÑÍµê\r\n```\r\n\r\n* ref  \r\nÏù¥Ï†Ñ ÌÖåÏù¥Î∏îÏùò ÌñâÏ°∞Ìï©ÎßàÎã§ ÏùºÏπòÌïòÎäî Ïù∏Îç±Ïä§ Í∞íÏù¥ ÏûàÎäî Î™®Îì†ÌñâÏù¥ Ïù¥ ÌÖåÏù¥Î∏îÏóêÏÑú ÏùΩÌòÄÏßÑÎã§. ÌÇ§Ïùò Í∞ÄÏû•ÏôºÏ™Ω Ï†ëÎëêÏñ¥Îßå Ï°∞Ïù∏Ïóê ÏÇ¨Ïö©ÎêòÍ±∞ÎÇò ÌÇ§Í∞Ä `PRIMARY KEY` ÎòêÎäî `UNIQUE`Ïù∏Îç±Ïä§(Ï¶â, ÌÇ§ Í∞íÏùÑ Í∏∞Ï§ÄÏúºÎ°ú Ï°∞Ïù∏Ïù¥ Îã®ÏùºÌñâÏùÑ ÏÑ†ÌÉùÌï† Ïàò ÏóÜÎäî Í≤ΩÏö∞)Í∞Ä ÏïÑÎãåÍ≤ΩÏö∞Ïóê `ref`Í∞Ä ÏÇ¨Ïö©ÎêúÎã§.\r\nÏÇ¨Ïö©Îêú ÌÇ§Í∞Ä Î™áÍ∞úÏùò ÌñâÏóêÎßå ÏùºÏπòÌïòÎäîÍ≤ΩÏö∞, Ï¢ãÏùÄ Ï°∞Ïù∏ ÌÉÄÏûÖÏù¥Îã§.\r\n`ref` Îäî `<=>`ÎòêÎäî `=` Ïó∞ÏÇ∞ÏûêÎ•º ÏÇ¨Ïö©ÌïòÏó¨ ÎπÑÍµêÎêú Ïù∏Îç±Ïä§Îì§Ïóê ÎåÄÌï¥ ÏÇ¨Ïö©Îê† Ïàò ÏûàÎã§. Îã§ÏùåÏùò ÏòàÏ†úÏóêÏÑú MySQLÏùÄ *ref_table* Ï≤òÎ¶¨Ïóê `ref` Ï°∞Ïù∏ÏùÑ ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎã§.  \r\n```sql\r\nSELECT * FROM ref_table WHERE key_column = expr; //Ïó¨Í∏∞ÏÑú exprÏùÄ Îã§Î•∏ ÌÖåÏù¥Î∏îÏóê ÎåÄÌïú Ï°∞Í±¥ ÌëúÌòÑÏãùÏùÑ ÏùòÎØ∏ÌïúÎã§.\r\n  \r\nSELECT * FROM ref_table, other_table\r\n  WHERE ref_table.key_column = other_table.column;\r\n  \r\nSELECT * FROM ref_table,other_table\r\n  WHERE ref_table.key_column_part1 = other_table.column\r\n  AND ref_table.key_column_part2 = 1;\r\n```\r\n* fulltext  \r\n`FULLTEXT` Ïù∏Îç±Ïä§Î•º ÏÇ¨Ïö©ÌïòÏó¨ ÏàòÌñâÎêú Ï°∞Ïù∏Ïù¥Îã§.\r\n\r\n* ref_or_null  \r\nÏù¥ Ï°∞Ïù∏ ÌÉÄÏûÖÏùÄ `ref` ÏôÄ Ïú†ÏÇ¨ÌïòÏßÄÎßå, MySQLÏù¥ `NULL` Í∞íÏùÑ Ìè¨Ìï®ÌïòÎäî ÌñâÎì§Ïóê ÎåÄÌï¥ Ï∂îÍ∞Ä Í≤ÄÏÉâ ÏàòÌñâÌïúÎã§Îäî Ï†êÏù¥ Îã§Î•¥Îã§. Ïù¥ Ï°∞Ïù∏ ÌÉÄÏûÖ ÏµúÏ†ÅÌôîÎäî ÏÑúÎ∏åÏøºÎ¶¨Î•º Ìï¥Í≤∞ÌïòÎäîÎç∞ Í∞ÄÏû• ÏûêÏ£º ÏÇ¨Ïö©ÎêúÎã§. Îã§ÏùåÏùò ÏòàÏ†úÏóêÏÑú MySQLÏùÄ *ref_table*ÏùÑ Ï≤òÎ¶¨Ïóê `ref_or_null` Ï°∞Ïù∏ÏùÑ ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎã§.\r\n```sql\r\nSELECT * FROM ref_table\r\n  WHERE key_column = expr OR key_column IS NULL;\r\n```\r\n* index_merge  \r\nÏù¥ Ï°∞Ïù∏ ÌÉÄÏûÖÏùÄ Ïù∏Îç±Ïä§ Î≥ëÌï© ÏµúÏ†ÅÌôîÍ∞Ä ÏÇ¨Ïö©ÎêòÏóàÎã§Îäî Í≤ÉÏùÑ ÎÇòÌÉÄ ÎÇ∏Îã§. Ïù¥ Í≤ΩÏö∞, Ï∂úÎ†•ÌñâÏùò `key` Ïª¨ÎüºÏùÄ ÏÇ¨Ïö©Îêú Ïù∏Îç±Ïä§Îì§Ïùò Î™©Î°ùÏùÑ Ìè¨Ìï®ÌïòÎ©∞  `key_len` ÏùÄ ÏÇ¨Ïö©Îêú Ïù∏Îç±Ïä§Ïóê ÎåÄÌïú Í∞ÄÏû•Í∏¥ ÌÇ§Î∂ÄÎ∂Ñ Î™©Î°ùÏùÑ Ìè¨Ìï®ÌïúÎã§.\r\n\r\n* unique_subquery  \r\nÏù¥ ÌÉÄÏûÖÏùÄ Îã§Ïùå ÌòïÏãùÏùò `IN` ÏÑúÎ∏åÏøºÎ¶¨Ïù¥ ÎåÄÌïú `eq_ref`Î•º ÎåÄÏ≤¥ÌïúÎã§.\r\n```sql\r\nvalue IN (SELECT primary_key FROM single_table WHERE some_expr)\r\n```\r\n`unique_subquery`Îäî ÏôÑÏ†ÑÌûà ÎçîÎÇòÏùÄ Ìö®Ïú®ÏÑ±ÏùÑ ÏúÑÌï¥ ÏÑúÎ∏åÏøºÎ¶¨Î•º ÏôÑÏ†ÑÌûà ÎåÄÏ≤¥ÌïòÎäî Ïù∏Îç±Ïä§ Ï°∞Ìöå Ìï®ÏàòÏùº ÎøêÏù¥Îã§.\r\n\r\n* index_subquery  \r\nÏù¥ Ï°∞Ïù∏ ÌÉÄÏûÖÏùÄ `unique_subquery`ÏôÄ ÎπÑÏä∑ÌïòÎã§. `IN` ÏÑúÎ∏åÏøºÎ¶¨Î•º ÎåÄÏ≤¥ÌïòÏßÄÎßå, Îã§ÏùåÏùò ÌòïÏãùÏùò ÏÑúÎ∏åÏøºÎ¶¨ÏóêÏÑú Ïú†ÎãàÌÅ¨Í∞Ä ÏïÑÎãå Ïù∏Îç±Ïä§Ïóê ÎåÄÌï¥ ÎèôÏûëÌïúÎã§.\r\n```sql\r\nvalue IN (SELECT key_column FROM single_table WHERE some_expr)\r\n```\r\n\r\n* range  \r\nÏ£ºÏñ¥ÏßÑ Î≤îÏúÑÏóê ÏûàÎäî ÌñâÎì§Îßå Ï°∞ÌöåÎêòÎ©∞, Ìñâ ÏÑ†ÌÉùÏóê Ïù∏Îç±Ïä§Î•º ÏÇ¨Ïö©ÌïúÎã§. Ï∂úÎ†• ÌñâÏùò `key` Ïª¨ÎüºÏùÄ Ìï¥Îãπ Ïù∏Îç±Ïä§Í∞Ä ÏÇ¨Ïö©Îê®ÏùÑ ÎÇòÌÉÄÎÇ∏Îã§. `key_len` Ïª¨ÎüºÏùÄ ÏÇ¨Ïö©Îêú Í∞ÄÏû•Í∏¥ ÌÇ§Î∂ÄÎ∂ÑÏùÑ Ìè¨Ìï®ÌïúÎã§. `ref`Ïª¨ÎüºÏùÄ Ïù¥ ÌÉÄÏûÖÏóêÎåÄÌï¥ `NULL` Ïù¥Îã§.\r\n`range`Îäî `key`Ïª¨ÎüºÏù¥  `=, <>, >, >=, <, <=, IS NULL, <=>, BETWEEN, LIKE` ÎòêÎäî  `IN()` Ïó∞ÏÇ∞ÏûêÎ•º ÏÇ¨Ïö©ÌïòÏó¨ ÎπÑÍµêÎêòÎäî ÏÉÅÏàòÏùº Îïå ÏÇ¨Ïö©ÎêúÎã§.\r\n\r\n```sql\r\nSELECT * FROM tbl_name\r\n  WHERE key_column = 10;\r\n  \r\nSELECT * FROM tbl_name\r\n  WHERE key_column BETWEEN 10 and 20;\r\n  \r\nSELECT * FROM tbl_name\r\n  WHERE key_column IN (10, 20, 30);\r\n  \r\nSELECT * FROM tbl_name\r\n  WHERE key_part1 = 10 AND key_part2 IN (10, 20, 30);\r\n```\r\n\r\n* index   \r\n`index` Ï°∞Ïù∏ ÌÉÄÏûÖÏùÄ Ïù∏Îç±Ïä§ Ìä∏Î¶¨ Ïä§Ï∫î ÎπºÍ≥† `ALL` ÌïòÍ≥† Í∞ôÏúºÎ©∞, ÎëêÍ∞ÄÏßÄ ÏÉÅÌô©ÏóêÏÑú Î∞úÏÉùÌïúÎã§.\r\n* Ïù∏Îç±Ïä§Í∞Ä ÏøºÎ¶¨Ïóê ÎåÄÌïú Ïª§Î≤ÑÎßÅ Ïù∏Îç±Ïä§ Ïù¥Í≥†,  ÌÖåÏù¥Î∏îÏóêÏÑú ÌïÑÏöîÌïú Î™®Îì† Îç∞Ïù¥ÌÑ∞Î•º Ï∂©Ï°±ÌïòÎäî Îç∞ ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎäî Í≤ΩÏö∞ Ïù∏Îç±Ïä§ Ìä∏Î¶¨Îßå Ïä§Ï∫îÎêúÎã§. Ïù¥ Í≤ΩÏö∞ `Extra` Ïª¨ÎüºÏùÄ `Using Index`ÎùºÍ≥† ÎÇòÏò®Îã§. Î≥¥ÌÜµ Ïù∏Îç±Ïä§ Ï†ÑÏö© Ïä§Ï∫îÏùÄ ÏùºÎ∞òÏ†ÅÏúºÎ°ú Ïù∏Îç±Ïä§ ÏÇ¨Ïù¥Ï¶àÍ∞Ä ÌÖåÏù¥Î∏î Îç∞Ïù¥ÌÑ∞Î≥¥Îã§ ÏûëÍ∏∞ÎñÑÎ¨∏Ïóê, `ALL`Î≥¥Îã§ Îπ†Î•¥Îã§.\r\n* ÌíÄ Ïä§Ï∫îÏùÄ Ïù∏Îç±Ïä§ÏóêÏÑú ÏùΩÏñ¥ÏÑú Ïù∏Îç±Ïä§ ÏàúÏÑúÎåÄÎ°ú Îç∞Ïù¥ÌÑ∞ ÌñâÏùÑ Ï°∞ÌöåÌïòÏó¨ ÏàòÌñâÎêúÎã§.  `Extra` Ïª¨ÎüºÏù¥ ÏóêÎäî Ïù∏Îç±Ïä§ ÏÇ¨Ïö©Ïù¥ ÎÇòÏò§ÏßÄ ÏïäÎäîÎã§.\r\nMySQLÏùÄ ÏøºÎ¶¨Í∞Ä Îã®ÏùºÏù∏Îç±Ïä§Ïùò ÏùºÎ∂ÄÏù∏ Ïª¨ÎüºÎßå ÏÇ¨Ïö©ÌïòÎäî Í≤ΩÏö∞, Ïù¥ Ï°∞Ïù∏ÌÉÄÏûÖÏùÑ ÏÇ¨Ïö©Ìï† ÏàòÏûàÎã§.\r\n\r\n* ALL  \r\nÌíÄÏä§Ï∫îÏùÄ Ïù¥Ï†Ñ ÌÖåÏù¥Î∏îÏùò Ìñâ Ï°∞Ìï© ÎßàÎã§ ÏàòÌñâÎêúÎã§. ÌÖåÏù¥Î∏îÏù¥ `const`Î°ú ÌëúÏãúÎêòÏßÄÏïäÏùÄ Ï≤´Î≤àÏß∏ ÌÖåÏù¥Î∏îÏù∏ Í≤ΩÏö∞ ÏùºÎ∞òÏ†ÅÏúºÎ°ú Ï¢ãÏßÄ ÏïäÏúºÎ©∞, Îã§Î•∏ Î™®Îì† Í≤ΩÏö∞ÏóêÎäî *Îß§Ïö∞* ÎÇòÏÅòÎã§. Î≥¥ÌÜµÏùÄ, Ïù¥Ï†ÑÌÖåÏù¥Î∏îÏùò ÏÉÅÏàòÍ∞í Ïù¥ÎÇò Ïª¨ÎüºÍ∞íÏùÑ Í∏∞Ï§ÄÏúºÎ°ú ÌÖåÏù¥Î∏îÏóêÏÑú ÌñâÏùÑ Í≤ÄÏÉâÌï† ÏàòÏûàÎäî Ïù∏Îç±Ïä§Î•º Ï∂îÍ∞ÄÌïòÎ©¥ `ALL` ÌÉÄÏûÖÏùÑ ÌîºÌï† Ïàò ÏûàÎã§.\r\n\r\n### possible_keys (ÏÇ¨Ïö©Í∞ÄÎä•Ìïú Ïù∏Îç±Ïä§)::possible-keys\r\n(JSON: possible_keys)    \r\n`possible_keys` Ïª¨ÎüºÏùÄ MySQLÏù¥ Ïù¥ ÌÖåÏù¥Î∏îÏóêÏÑú ÌñâÏùÑ Ï∞æÍ∏∞ÏúÑÌï¥ ÏÑ†ÌÉùÌï† Ïàò ÏûàÎäî Ïù∏Îç±Ïä§Îì§ÏùÑ ÎÇòÌÉÄÎÇ∏Îã§. Ï∞∏Í≥†Î°ú Ïù¥ Ïª¨ÎüºÏùÄ `EXPLAIN`Ïùò Ï∂úÎ†•Ïóê ÌëúÏãúÎêú ÌÖåÏù¥Î∏îÎì§Ïùò ÏàúÏÑúÏôÄ Î≥ÑÍ∞úÏûÖÎãàÎã§. Ïù¥ ÎßêÏùÄ ÌÖåÏù¥Î∏î ÏàúÏÑú ÏÉùÏÑ±Îêú Ïã§ÌñâÏóêÏÑú  `possible_keys`Ïóê Ïñ¥Îñ§ ÌÇ§Îì§ÏùÄ ÏÇ¨Ïö©Îê†Ïàò ÏóÜÏùÑ ÏàòÎèÑ ÏûàÎã§Îäî ÏùòÎØ∏Ïù¥Îã§.\r\nÏù¥ Ïª¨ÎüºÏù¥ `NULL`Ïù¥ÎùºÎ©¥, Ï†ÅÏ†àÌïú Ïù∏Îç±Ïä§Í∞Ä ÏóÜÎã§Îäî ÎúªÏù¥Îã§. Ïù¥ Í≤ΩÏö∞ Ïù∏Îç±Ïã±Ïóê Ï†ÅÌï©Ìïú Ïª¨ÎüºÏùÑ Ï∞∏Ï°∞ÌïòÎäîÏßÄ ÌôïÏù∏ÌïòÍ∏∞ÏúÑÌï¥ `WHERE` Ï†àÏùÑ Í≤ÄÏÇ¨ÏÇ¨Ïó¨ ÏøºÎ¶¨Ïùò ÏÑ±Îä•ÏùÑ Í∞úÏÑ†Ìï† Ïàò ÏûàÎã§. Ï†ÅÏ†àÌïú Ïù∏Îç±Ïä§Î•º ÏÉùÏÑ±ÌïòÍ≥† `EXPLAIN` ÏøºÎ¶¨Î•º ÌôïÏù∏Ìï¥Î≥¥Ïûê.\r\nSHOW INDEX FROM  *table_name* ÏúºÎ°ú ÌÖåÏù¥Î∏î Ïù∏Îç±Ïä§Î•º Î≥ºÏàò ÏûàÎã§.\r\n\r\n### key (ÏÇ¨Ïö©Ìï† Ïù∏Îç±Ïä§)::key\r\n(JSON: key)  \r\n`key`  Ïª¨ÎüºÏùÄ MySQLÏù¥ ÏÇ¨Ïö©ÌïòÍ∏∞Î°ú Ï†ïÌïú ÌÇ§(Ïù∏Îç±Ïä§)Î•º ÎÇòÌÉÄÎÉÖÎãàÎã§. MySQLÏù¥ ÌñâÏ°∞ÌöåÏóê `possible_keys` Ïù∏Îç±Ïä§Îì§Ï§ë Ï§ë ÌïúÍ∞úÎ•º ÏÇ¨Ïö©ÌïòÍ∏∞Î°ú Ï†ïÌñàÎã§Î©¥, Ïù∏Îç±Ïä§Îäî ÌÇ§Í∞íÏúºÎ°ú ÎÇòÏó¥ÎêúÎã§.\r\n`key` Îäî `possible_keys` Í∞íÏóê ÏóÜÎäî Ïù∏Îç±Ïä§Î•º ÏßÄÏ†ïÌï† ÏàòÎèÑ ÏûàÎã§.  Ïù¥Îäî `possible_keys` Ïù∏Îç±Ïä§Ï§ë Ïñ¥ÎäêÌñâÎèÑ Ï°∞ÌöåÎêòÎäîÎç∞ Ï†ÅÌï©ÌïòÏßÄ ÏïäÏßÄÎßå, ÏøºÎ¶¨Ïùò ÏÑ†ÌÉùÎêú Î™®Îì† Ïª¨ÎüºÏù¥ Îã§Î•∏ Ïù∏Îç±Ïä§Ïùò Ïª¨ÎüºÏù∏Í≤ΩÏö∞ Î∞úÏÉùÌï† Ïàò ÏûàÎã§. Ï¶â, ÏßÄÏ†ïÎêú Ïù∏Îç±Ïä§Í∞Ä ÏÑ†ÌÉùÎêú Ïª¨ÎüºÎì§ÏùÑ Ìè¨Ìï®ÌïòÍ≥† ÏûàÍ∏∞ÎïåÎ¨∏Ïóê, Ïñ¥ÎäêÌñâÏùÑ Í≤ÄÏÉâÌï†ÏßÄÎ•º Í≤∞Ï†ïÌïòÎäî Îç∞Îäî ÏÇ¨Ïö©ÎêòÏßÄ ÏïäÎçîÎùºÎèÑ Ïù∏Îç±Ïä§ Ïä§Ï∫îÏùÄ Îç∞Ïù¥ÌÑ∞ Ìñâ Ïä§Ï∫îÎ≥¥Îã§ Ìö®Ïú®Ï†ÅÏù¥Îã§. (*Ïù¥ ÎÇ¥Ïö©ÏùÄ \"Ïª§Î≤ÑÎßÅ Ïù∏Îç±Ïä§\"Ïùò Ìö®Ïú®ÏÑ±Ïóê ÎåÄÌïú ÎÇ¥Ïö©Ïù¥Îã§.*)\r\n`InnoDB`Ïùò Í≤ΩÏö∞ ÏøºÎ¶¨ÏóêÏÑú Í∏∞Î≥∏ÌÇ§Î•º ÏÑ†ÌÉùÌïòÎçîÎùºÎèÑ Î≥¥Ï°∞ Ïù∏Îç±Ïä§Í∞Ä ÏÑ†ÌÉùÌïú Ïó¥ÏùÑ Ìè¨Ìï®Ìï† Ïàò ÏûàÎã§. Ïù¥Îäî `InnoDB`Í∞Ä Í∞Å Î≥¥Ï°∞Ïù∏Îç±Ïä§Ïóê Í∏∞Î≥∏ ÌÇ§ Í∞íÏùÑ Ï†ÄÏû•ÌïòÍ∏∞ ÎïåÎ¨∏Ïù¥Îã§. `key`Ïª¨ÎüºÏù¥ `NULL`Ïù¥ÎùºÎ©¥, `MySQL`ÏùÄ ÏøºÎ¶¨Î•º Î≥¥Îã§ Ìö®Ïú®Ï†ÅÏúºÎ°ú Ïã§ÌñâÌïòÎäîÎç∞ ÏÇ¨Ïö©Ìï† Ïù∏Îç±Ïä§Î•º Ï∞æÏßÄ Î™ªÌïúÎã§.\r\n\r\n`MySQL`Ïù¥ `possible_keys` Ïª¨Îüº ÎÇ¥ ÏûàÎäî Ïù∏Îç±Ïä§Î•º Í∞ïÏ†úÎ°ú ÏÇ¨Ïö©ÌïòÍ±∞ÎÇò Î¨¥ÏãúÌïòÍ≤å ÌïòÎ†§Î©¥, ÏøºÎ¶¨ÏóêÏÑú `FORCE_INDEX`, `USE_INDEX` ÎòêÎäî `IGNORE_INDEX`Î•º ÏÇ¨Ïö©ÌïòÎ©¥ ÎêúÎã§.\r\n\r\n### key_len (ÌÇ§Ïùò Í∏∏Ïù¥)::key-len\r\n(JSON: key_length)    \r\n`key_len` Ïª¨ÎüºÏùÄ `MySQL`Ïù¥ ÏÇ¨Ïö©ÌïòÍ∏∞Î°ú Í≤∞Ï†ïÌïú ÌÇ§Ïùò Í∏∏Ïù¥Î•º ÎÇòÌÉÄÎÇ∏Îã§. `key_len`Ïùò Í∞íÏùÄ MySQLÏù¥ Ïã§Ï†úÎ°ú ÏÇ¨Ïö©ÌïòÎäî Î≥µÌï©ÌÇ§Ïùò ÏùºÎ∂ÄÍ∞Ä ÏñºÎßàÎÇò ÎêòÎäîÏßÄ ÌôïÏù∏ Ìï†Ïàò ÏûàÍ≤å Ìï¥Ï§ÄÎã§. \r\nÏã§Ï†ú ÌëúÏãúÎêòÎäî Í∞íÏùÄ ÏÇ¨Ïö©Îêú ÌÇ§Ïùò Î∞îÏù¥Ìä∏ Í∏∏Ïù¥Î•º ÎÇòÌÉÄÎÇ¥Ïó¨ ÏÇ¨Ïö©ÌïòÎäî Ïú†ÎãàÏΩîÎìúÎßàÎã§ Îã§Î•ºÏàò ÏûàÎã§. (*Ïã§Ï†úÎ°ú ÏÇ¨Ïö©ÌïòÎäî Î≥µÌï©ÌÇ§Ïùò ÏùºÎ∂ÄÏùò ÏùòÎØ∏Îäî ÏøºÎ¶¨Ïóê Îî∞Îùº Ï≤´Î≤àÏß∏ Ïª¨ÎüºÎßå ÏÇ¨Ïö©Ìï† ÏàòÎèÑ ÏûàÍ≥†, ÎëêÎ≤àÏß∏ Ïª¨ÎüºÍπåÏßÄ ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎã§Îäî ÏùòÎØ∏Ïù¥Îã§.*)\r\nÌÇ§ Ï†ÄÏû• Ìè¨Îß∑ÏúºÎ°ú Ïù∏Ìï¥, `NULL`Ïù¥ Îê†Ïàò ÏûàÎäî Ïª¨ÎüºÏùò ÌÇ§ Í∏∏Ïù¥Îäî `NOT NULL`Ïù∏ Ïª¨ÎüºÏùò Í∏∏Ïù¥Î≥¥Îã§ 1Ïù¥ ÌÅ¨Îã§. (*NULLÏùÑ Íµ¨Î∂ÑÌï† ÎπÑÌä∏Í∞Ä Ï∂îÍ∞ÄÎêòÍ∏∞ ÎïåÎ¨∏Ïóê*)\r\n\r\n### ref (Ï∞∏Ï°∞ Í∞í)::ref\r\n(JSON: ref)\r\n`ref`Ïª¨ÎüºÏùÄ ÌÖåÏù¥Î∏îÏóêÏÑú `key` Ïª¨Îüº ÎÇ¥ Ïñ¥Îñ§ Ïª¨ÎüºÏù¥ÎÇò Ï†úÏïΩÏù¥ ÏßÄÏ†ïÎêú Ïù∏Îç±Ïä§ÏôÄ ÎπÑÍµêÎêòÏóàÎäîÏßÄ Î≥¥Ïó¨Ï§çÎãàÎã§.\r\nÍ∞íÏù¥ `func`ÎùºÎ©¥, ÏÇ¨Ïö©Îêú Í∞íÏùÄ Ïñ¥Îñ§ Ìï®ÏàòÏùò Í≤∞Í≥ºÏûÖÎãàÎã§. Ïñ¥Îñ§ Ìï®ÏàòÏù∏ÏßÄ ÌôïÏù∏ÌïòÎ†§Î©¥, ÌôïÏû•Îêú `EXPLAIN`Í≤∞Í≥ºÎ•º Î≥¥Í∏∞ÏúÑÌï¥ `EXPLAIN`Îí§Ïóê `SHOW WARNINGS`Î•º ÏÇ¨Ïö©ÌïòÎ©¥ ÎêúÎã§. \r\nÌï®ÏàòÎäî Ïã§Ï†úÎ°ú ÏÇ∞Ïà† Ïó∞ÏÇ∞Ïûê Í∞ôÏùÄ Ïó∞ÏÇ∞Ïûê Ïùº Ïàò ÏûàÎã§.\r\n\r\n### rows (Í≤ÄÏÇ¨ Ìñâ Í∞úÏàò)::rows\r\n(JSON: rows)    \r\n`rows`  Ïª¨ÎüºÏùÄ `MySQL`Ïù¥ ÏøºÎ¶¨ Ïã§Ìñâ Í≤ÄÏÇ¨Î•º Ìï¥ÏïºÎßå ÌïúÎã§Í≥† Ïó¨Í∏∞Îäî ÌñâÎì§Ïùò Í∞úÏàòÎ•º ÎÇòÌÉÄÎÇ∏Îã§. `InnoDB` ÌÖåÏù¥Î∏îÏùò Í≤ΩÏö∞, Ïù¥ Í∞íÏùÄ ÏòàÏ∏°ÏπòÏù¥Î©∞, Ìï≠ÏÉÅ Ï†ïÌôïÌïòÏßÄ ÏïäÏùÑ ÏàòÎèÑ ÏûàÎã§.\r\n\r\n### filtered (ÌïÑÌÑ∞Îêú ÏàòÏπò)::filtered\r\n(JSON: filtered)\r\n`filtered` Ïª¨ÎüºÏùÄ ÌÖåÏù¥Î∏î Ï°∞Í±¥ÏúºÎ°ú ÌïÑÌÑ∞Îêú ÌÖåÏù¥Î∏î ÌñâÎì§Ïùò ÏòàÏÉÅ Î∞±Î∂ÑÎ•†ÏùÑ ÎÇòÌÉÄÎÇ∏Îã§. \r\nÏµúÎåÄ Í∞íÏùÄ 100Ïù¥Î©∞, Ïù¥Îäî ÌñâÏùò ÌïÑÌÑ∞ÎßÅÏù¥ Î∞úÏÉùÎêòÏßÄÏïäÏùåÏùÑ ÏùòÎØ∏ÌïúÎã§. 100ÏóêÏÑú Í∞êÏÜåÎêú Í∞íÏùÄ ÌïÑÌÑ∞ÎßÅ ÏñëÏù¥ Ï¶ùÍ∞ÄÌï®ÏùÑ ÎÇòÌÉÄÎÇ∏Îã§. \r\n`rows` Îäî Í≤ÄÎêú ÌñâÏùò ÏòàÏÉÅÏπòÎ•º Î≥¥Ïó¨Ï£ºÍ≥†`rows` √ó `filtered`Îäî Îã§Ïùå ÌÖåÏù¥Î∏îÎ°ú Ï°∞Ïù∏Îêú ÌñâÏùò Í∞ØÏàòÎ•º Î≥¥Ïó¨Ï§ÄÎã§. ÏòàÎ•ºÎì§Ïñ¥, `rows`Í∞Ä 1000Ïù¥Í≥† `filtered`Í∞Ä 50.00(50%)ÎùºÎ©¥, Îã§Ïùå ÌÖåÏù¥Î∏îÎ°ú Ï°∞Ïù∏Îêú ÌñâÏùò Í∞úÏàòÎäî 1000 √ó 50% = 500Ïù¥Îã§.\r\n\r\n### Extra (Ï∂îÍ∞ÄÏ†ÅÏù∏ ÎÇ¥Ïö©)::extra\r\n(JSON: ÏóÜÏùå)\r\nÏù¥Ïª¨ÎüºÏùÄ  `MySQL`Ïù¥ ÏøºÎ¶¨Î•º Ïñ¥ÎñªÍ≤å Ìï¥Í≤∞ÌïòÎäîÏßÄÏóê ÎåÄÌïú Ï∂îÍ∞ÄÏ†ÅÏù∏ Ï†ïÎ≥¥Î•º Ìè¨Ìï®ÌïúÎã§. Îã§Î•∏ Í∞íÏùò ÏÑ§Î™ÖÎì§ÏùÄ `EXPLAIN` [Extra Ï†ïÎ≥¥]()ÏùÑ Î≥¥Ïûê.\r\n\r\n`Extra`Ïª¨ÎüºÏóê Ìï¥ÎãπÌïòÎäî Îã®Ïùº JSON ÏÜçÏÑ± Í∞íÏùÄ Îî∞Î°ú ÏóÜÏßÄÎßå, Ïù¥ Ïª¨Îüº ÎÇ¥ÏóêÏÑú Î∞úÏÉùÎê†Ïàò ÏûàÎäî Í∞íÎì§ÏùÄ JSON ÏÜçÏÑ±Ïù¥ÎÇò `message` ÏÜçÏÑ±Ïùò ÌÖçÏä§Ìä∏Î°ú ÎÖ∏Ï∂úÎêúÎã§.\r\nÏøºÎ¶¨Î•º Îπ†Î•¥Í≤å ÎßåÎì§Í≥† Ïã∂Îã§Î©¥, `Using filesort`ÏôÄ `Using temporary`Ïùò `Extra` Ïª¨ÎüºÍ∞íÏùÑ Ï°∞Ïã¨ÌïòÏûê. JSON ÌòïÏãùÏóêÏÑúÎäî `using_filesort`ÏôÄ `using_temporary_table` Í∞íÏù¥ `true`ÏôÄ Í∞ôÎã§.\r\n\r\n* Zero limit  \r\nÏøºÎ¶¨Ïóê `LIMIT 0`Ï†àÏù¥ÏûàÍ≥† Ïñ¥Îñ§ ÌñâÎèÑ ÏÑ†ÌÉùÌï† Ïàò ÏóÜÎäî Í≤ΩÏö∞Ïù¥Îã§.\r\n\r\n* Using Where with pushed condition  \r\nÏù¥ Ìï≠Î™©ÏùÄ [NDB]() ÌÖåÏù¥Î∏îÎì§ÏóêÎßå Ï†ÅÏö©ÎêúÎã§.\r\n\r\n* Using Where  \r\n`WHERE`Ï†àÏùÄ Îã§Ïùå ÌÖåÏù¥Î∏îÍ≥º ÏùºÏπòÏãúÌÇ¨ ÌñâÏù¥ÎÇò ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Ïóê Î≥¥ÎÇ¥ÎÇº ÌñâÏùÑ Ï†úÌïúÌïòÎäîÎç∞ ÏÇ¨Ïö©ÎêúÎã§.  \r\nÌäπÎ≥ÑÌïòÍ≤å ÌÖåÏù¥Î∏îÏùò Î™®Îì†ÌñâÏùÑ Í∞ÄÏ†∏Ïò§Í∏∏ ÏùòÎèÑÌïòÍ±∞ÎÇò Í≤ÄÏÇ¨ÌïòÎ†§ ÌïòÏßÄ ÏïäÎäîÌïú, `Extra` Í∞íÏù¥ `Using Where`Ïù¥ ÏïÑÎãàÍ≥† ÌÖåÏù¥Î∏î Ï°∞Ïù∏ ÌÉÄÏûÖÏù¥ `ALL` ÎòêÎäî `index`ÎùºÎ©¥, ÏøºÎ¶¨Ïóê Î¨∏Ï†úÍ∞Ä ÏûàÏùÑÏàò ÏûàÎã§.  \r\n\r\n`Using Where`ÏùÄ ÏßÅÏ†ëÏ†ÅÏúºÎ°ú ÎåÄÏùëÎêòÎäî JSON ÏÜçÏÑ±Ïù¥ ÏóÜÍ≥† `attached_condition` ÏÜçÏÑ±ÏùÄ ÏÇ¨Ïö©ÎêòÎäî Î™®Îì† `WHERE` Ï°∞Í±¥ÏùÑ Ìè¨Ìï®ÌïúÎã§.\r\n\r\n* Using temporary  \r\nÏøºÎ¶¨Î•º Ìï¥Í≤∞ÌïòÍ∏∞ÏúÑÌï¥ `MySQL`ÏùÄ Í≤∞Í≥ºÎ•º Î≥¥Í¥ÄÌïòÍ∏∞ÏúÑÌï¥ ÏûÑÏãúÌÖåÏù¥Î∏îÏùÑ ÏÉùÏÑ±Ìï† ÌïÑÏöîÍ∞Ä ÏûàÎã§. Ïù¥Îäî ÏùºÎ∞òÏ†ÅÏúºÎ°ú ÏøºÎ¶¨Í∞Ä Ïª¨ÎüºÏùÑ Îã§Î•¥Í≤å ÎÇòÏó¥ÌïòÎäî `GROUP BY`ÏôÄ `ORDER BY`Ï†àÏùÑ Ìè¨Ìï®ÌïòÎ©¥ Î∞úÏÉùÌïúÎã§.  \r\n\r\n* Using sort_union(...), Using union(...), Using intersect(...)  \r\nÏù¥Îü∞Í≤ÉÎì§ÏùÄ `index_merge` Ï°∞Ïù∏ÌÉÄÏûÖÏóê ÎåÄÌïú Ïù∏Îç±Ïä§ Ïä§Ï∫îÏù¥ Ïñ¥ÎñªÍ≤å Î≥ëÌï©ÎêòÎäîÏßÄÎ•º Î≥¥Ïó¨Ï£ºÎäî ÌäπÎ≥ÑÌïú ÏïåÍ≥†Î¶¨Ï¶òÏùÑ ÎÇòÌÉÄÎÇ∏Îã§.\r\n\r\n* Using MRR  \r\nÌÖåÏù¥Î∏îÏùÄ Îã§Ï§ëÎ≤îÏúÑ ÏùΩÍ∏∞ ÏµúÏ†ÅÌôî Ï†ÑÎûµÏùÑ ÏÇ¨Ïö©ÌïòÏó¨ ÏùΩÌûåÎã§.  \r\n\r\n* Using join buffer (Block Nested Loop), Using join buffer (Batched Key Access), Using join buffer (hash join)  \r\nÏù¥Ï†Ñ Ï°∞Ïù∏Ïùò ÌÖåÏù¥Î∏îÏùÄ Ï°∞Ïù∏Î≤ÑÌçºÎ°ú Î∂ÄÎ∂ÑÏ†ÅÏúºÎ°ú ÏùΩÌûàÍ≥†, Í∑∏ ÌñâÎì§ÏùÄ Î≤ÑÌçºÏóêÏÑú ÌòÑÏû¨ ÌÖåÏù¥Î∏îÍ≥º Ï°∞Ïù∏ÏùÑ ÏàòÌñâÌïòÎäîÎç∞ ÏÇ¨Ïö©ÎêúÎã§. \r\n(Block Nested Loop)Îäî Block Nested-Loop ÏïåÍ≥†Î¶¨Ï¶ò ÏÇ¨Ïö©ÏùÑ ÎÇòÌÉÄÎÇ¥Í≥†,(Batched Key Access)Îäî Batched Key Access ÏïåÍ≥†Î¶¨Ï¶ò ÏÇ¨Ïö©ÏùÑ ÎÇòÌÉÄÎÇ¥Î©∞ (hash join)ÏùÄ Ìï¥ÏãúÏ°∞Ïù∏ ÏÇ¨Ïö©ÏùÑ ÎÇòÌÉÄÎÇ∏Îã§.\r\nÏ¶â `EXPLAIN` Ï∂úÎ†•Ïùò Ïù¥Ï†ÑÎùºÏù∏Ïóê ÏûàÎäî ÌÖåÏù¥Î∏îÏùò ÌÇ§Í∞Ä Î≤ÑÌçºÏóê Ï†ÄÏû•ÎêòÍ≥†, ÏùºÏπòÌïòÎäî ÌñâÏùÄ `Using join buffter`Í∞Ä ÎÇòÌÉÄÎÇòÎäî Ï§ÑÎ°ú Î≥¥Ïó¨ÏßÑ ÌÖåÏù¥Î∏îÏóêÏÑú ÏùºÍ¥ÑÏ†ÅÏúºÎ°ú Í∞ÄÏ†∏Ïò®Îã§.\r\n\r\n* Using index for skip scan  \r\nÏä§Ï∫î Ïä§ÌÇµÏóêÎåÄÌïú Ïù∏Îç±Ïä§Î•º ÎÇòÌÉÄÎÇ∏Îã§.\r\n\r\n* using index for group-by  \r\n`Using index` ÌÖåÏù¥Î∏î Ï†ëÍ∑º Î∞©Î≤ïÍ≥º Ïú†ÏÇ¨ÌïòÎ©∞, `Using index for group-by`sms `MySQL`Ïù¥ Ïã§Ï†úÌÖåÏù¥Î∏îÏóê Ï∂îÍ∞ÄÏ†ÅÏù∏ Ïñ¥Îñ§ ÎîîÏä§ÌÅ¨ Ï†ëÍ∑ºÎèÑ ÏóÜÏù¥ `GROUP BY` ÎòêÎäî `DISTINT` ÏøºÎ¶¨Ïùò Î™®Îì† Ïª¨ÎüºÏùÑ Í≤ÄÏÉâÌïòÎäîÎç∞ ÏÇ¨Ïö©Ìï†Ïàò ÏûàÎäî Ïù∏Îç±Ïä§Î•º Ï∞æÏïòÎã§Îäî Í≤ÉÏùÑ ÎÇòÌÉÄÎÇ∏Îã§.\r\nÍ≤åÎã§Í∞Ä, Í∞Å Í∑∏Î£πÏóêÎåÄÌï¥ Î™áÍ∞úÏùò Ïù∏Îç±Ïä§ Ìï≠Î™©Îßå ÏùΩÎèÑÎ°ùÌïòÎäî Í∞ÄÏû• Ìö®ÏúµÏ†ÅÏù∏ Î∞©ÏãùÏúºÎ°ú Ïù∏Îç±Ïä§Í∞Ä ÏÇ¨Ïö©ÎêúÎã§.\r\n\r\n* Using index condition  \r\nÌÖåÏù¥Î∏îÏùÄ Ïù∏Îç±Ïä§ ÌäúÎ∏îÏùÑ Ï†ëÍ∑ºÌïòÏó¨ ÏùΩÍ≥† Ï†ÑÏ≤¥ ÌÖåÏù¥Î∏î ÌñâÏùÑ ÏùΩÏùÑÍ≤ÉÏù∏ÏßÄ Í≤∞Ï†ïÌïòÍ∏∞ÏúÑÌï¥ Î®ºÏ†Ä ÌÖåÏä§Ìä∏ÌïúÎã§. Ïù¥ Î∞©Î≤ïÏùò Í≤ΩÏö∞, Ïù∏Îç±Ïä§ Ï†ïÎ≥¥Îäî ÌïÑÏàòÍ∞Ä ÏïÑÎãåÌïú Ï†ÑÏ≤¥ ÌÖåÏù¥Î∏î ÌñâÏùÑ ÏùΩÎäîÍ≤ÉÏùÑ Ïó∞Í∏∞(\"Ìë∏ÏãúÎã§Ïö¥\")ÌïòÎäî Îç∞ ÏÇ¨Ïö©ÎêúÎã§.\r\n\r\n* Using index  \r\nÏã§Ï†ú ÌñâÏùÑ ÏùΩÍ∏∞ÏúÑÌïú Ï∂îÍ∞ÄÏ†ÅÏù∏ ÌÉêÏÉâ ÏóÜÏù¥ Ïù∏Îç±Ïä§Ìä∏Î¶¨ÏóêÏÑú Ï†ïÎ≥¥ÎßåÏùÑ ÏÇ¨Ïö©ÌïòÏó¨ ÌÖåÏù¥Î∏îÏóêÏÑú Ïª¨Îüº Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏Ïò®Îã§. Ïù¥ Ï†ÑÎûµÏùÄ Îã®Ïùº Ïù∏Îç±Ïä§Ïùò Î∂ÄÎ∂ÑÏù∏ Ïª¨ÎüºÎßå ÏÇ¨Ïö©ÌïòÎäî ÏøºÎ¶¨ÏùºÎïå ÏÇ¨Ïö©Îê† Ïàò ÏûàÎã§.\r\nInnoDBÏóêÏÑú ÏÇ¨Ïö©ÏûêÏ†ïÏùò ÌÅ¥Îü¨Ïä§ÌÑ∞Îìú Ïù∏Îç±Ïä§(Í∏∞Î≥∏ÌÇ§)Î•º Í∞ÄÏßÑ ÌÖåÏù¥Î∏îÏù∏ Í≤ΩÏö∞, `Extra` Ïª¨ÎüºÏóê `Using index`Í∞Ä ÏóÜÎçîÎùºÎèÑ Ìï¥Îãπ Ïù∏Îç±Ïä§Í∞Ä ÏÇ¨Ïö©Îê† Ïàò ÏûàÎã§. Ïù¥Îäî `type`Ïù¥ Ïù∏Îç±Ïä§ÏôÄ `key`Í∞Ä `PRIMARY`Ïù∏ Í≤ΩÏö∞Ïóê Ìï¥ÎãπÌïúÎã§.\r\nÏÇ¨Ïö©Îêú Ïª§Î≤ÑÎßÅ Ïù∏Îç±Ïä§Ïóê ÎåÄÌïú Ï†ïÎ≥¥Îäî `EXPLAIN FORMAT=TRADITIONAL`Í≥º `EXPLAIN FORMAT=JSON`Ïóê ÎåÄÌï¥ Î≥¥Ïó¨ÏßÑÎã§.\r\n\r\n* Using filesort  \r\n`MySQL`ÏùÄ Ï†ïÎ†¨Îêú ÏàúÏÑúÎ°ú ÌñâÏùÑ Í≤ÄÏÉâÌïòÎäî Î∞©Î≤ïÏùÑ Ï∞æÍ∏∞ÏúÑÌï¥ ÌïúÎ≤à Îçî Îç∞Ïù¥ÌÑ∞Î•º ÌõëÏñ¥Ïïº ÌïúÎã§.\r\nÏ†ïÎ†¨ÏùÄ Ï°∞Ïù∏ÌÉÄÏûÖÏóê Îî∞Îùº Î™®Îì† ÌñâÏùÑ Í≤ÄÌÜ†ÌïòÎ©¥ÏÑú `WHERE`Ï†àÍ≥º ÏùºÏπòÌïòÎäî Î™®Îì† ÌñâÏóê ÎåÄÌï¥ ÌñâÏùÑ Í∞ÄÎ¶¨ÌÇ§Îäî Ìè¨Ïù∏ÌÑ∞ÏôÄ Ï†ïÎ†¨ÌÇ§Î•º Ï†ÄÏû•ÌïòÎäî Î∞©ÏãùÏúºÎ°ú ÏàòÌñâÎêú Îã§Ïùå ÌÇ§Îì§Ïù¥ Ï†ïÎ†¨ÎêòÍ≥† Ï†ïÎ†¨Îêú ÏàúÏÑúÎ°ú ÌñâÎì§ÏùÑ Í∞ÄÏ†∏Ïò®Îã§.\r\n"
  },
  {
    "path": "/docs/back-end/spring/transaction-manager",
    "header": {
      "layout": "post",
      "title": "Ïä§ÌîÑÎßÅÏùò Ìä∏ÎûúÏû≠ÏÖò Í¥ÄÎ¶¨Ïûê",
      "tags": [
        "Spring",
        "Spring Boot",
        "Transaction",
        "Transaction Manager"
      ],
      "date": 1717495080000,
      "thumbnail": "/post/back-end/spring/spring-transaction-manager.svg",
      "current-company": "NEOWIZ",
      "current-position": "Software Engineer",
      "summary": "Ìä∏ÎûúÏû≠ÏÖò Í¥ÄÎ¶¨Ïûê",
      "excerpt_separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÏÑúÎ≤Ñ/Î∞±ÏóîÎìú",
        "Ïä§ÌîÑÎßÅ"
      ],
      "images": [],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "Ìä∏ÎûúÏû≠ÏÖò Í¥ÄÎ¶¨Ïûê",
            "title": "Ìä∏ÎûúÏû≠ÏÖò Í¥ÄÎ¶¨Ïûê",
            "fragment": "root-0",
            "children": [
              {
                "rank": 3,
                "origin": "ÏÑ§Î™Ö",
                "title": "ÏÑ§Î™Ö",
                "fragment": "root-0-0",
                "children": []
              },
              {
                "rank": 3,
                "origin": "ÌïÑÎìú",
                "title": "ÌïÑÎìú",
                "fragment": "root-0-1",
                "children": []
              }
            ]
          },
          {
            "rank": 2,
            "origin": "ÏÑ§Ï†ïÍ∏∞Îä•",
            "title": "ÏÑ§Ï†ïÍ∏∞Îä•",
            "fragment": "root-1",
            "children": [
              {
                "rank": 3,
                "origin": "final setTransactionSynchronizationName(String constantName)",
                "title": "final setTransactionSynchronizationName(String constantName)",
                "fragment": "root-1-0",
                "children": []
              },
              {
                "rank": 3,
                "origin": "final setTransactionSynchronization( int transactionSynchronization)",
                "title": "final setTransactionSynchronization( int transactionSynchronization)",
                "fragment": "root-1-1",
                "children": []
              },
              {
                "rank": 3,
                "origin": "final setDefaultTimeout(int defaultTimeout)",
                "title": "final setDefaultTimeout(int defaultTimeout)",
                "fragment": "root-1-2",
                "children": []
              },
              {
                "rank": 3,
                "origin": "final setNestedTransactionAllowed(boolean nestedTransactionAllowed)",
                "title": "final setNestedTransactionAllowed(boolean nestedTransactionAllowed)",
                "fragment": "root-1-3",
                "children": []
              },
              {
                "rank": 3,
                "origin": "final setValidateExistingTransaction(boolean validateExistingTransaction)",
                "title": "final setValidateExistingTransaction(boolean validateExistingTransaction)",
                "fragment": "root-1-4",
                "children": []
              },
              {
                "rank": 3,
                "origin": "final setGlobalRollbackOnParticipationFailure(boolean gloabalRollbackOnParticipationFailure)",
                "title": "final setGlobalRollbackOnParticipationFailure(boolean gloabalRollbackOnParticipationFailure)",
                "fragment": "root-1-5",
                "children": []
              },
              {
                "rank": 3,
                "origin": "final setFailEarlyOnGlobalRollbackOnly(boolean failEarlyOnGlobalRollbackOnly)",
                "title": "final setFailEarlyOnGlobalRollbackOnly(boolean failEarlyOnGlobalRollbackOnly)",
                "fragment": "root-1-6",
                "children": []
              },
              {
                "rank": 3,
                "origin": "final setRollbackOnCommitFailure(boolean rollbackOnCommitFailure)",
                "title": "final setRollbackOnCommitFailure(boolean rollbackOnCommitFailure)",
                "fragment": "root-1-7",
                "children": []
              }
            ]
          },
          {
            "rank": 2,
            "origin": "PlatformTransactionManager Íµ¨ÌòÑÏ≤¥",
            "title": "PlatformTransactionManager Íµ¨ÌòÑÏ≤¥",
            "fragment": "root-2",
            "children": [
              {
                "rank": 3,
                "origin": "final getTransaction(TransactionDefinition definition)",
                "title": "final getTransaction(TransactionDefinition definition)",
                "fragment": "root-2-0",
                "children": []
              },
              {
                "rank": 3,
                "origin": "doGetTransaction",
                "title": "doGetTransaction",
                "fragment": "root-2-1",
                "children": []
              },
              {
                "rank": 3,
                "origin": "handleExistingTransaction",
                "title": "handleExistingTransaction",
                "fragment": "root-2-2",
                "children": []
              },
              {
                "rank": 3,
                "origin": "doBegin",
                "title": "doBegin",
                "fragment": "root-2-3",
                "children": []
              },
              {
                "rank": 3,
                "origin": "final commit(TransactionStatus status)",
                "title": "final commit(TransactionStatus status)",
                "fragment": "root-2-4",
                "children": []
              }
            ]
          }
        ]
      }
    },
    "description": "Ìä∏ÎûúÏû≠ÏÖò Í¥ÄÎ¶¨ÏûêÏùò Í≥µÌÜµ Ï≤òÎ¶¨ÏÇ¨Ìï≠ÏùÑ ÏïåÏïÑÎ≥¥Ïûê",
    "content": "\r\n\r\n## Ìä∏ÎûúÏû≠ÏÖò Í¥ÄÎ¶¨Ïûê\r\n\r\nÏä§ÌîÑÎßÅÏùÄ Ìä∏ÎûúÏû≠ÏÖò Í¥ÄÎ¶¨ÏûêÎ•º Ï∂îÏÉÅÌôîÌïòÏó¨, Îã§ÏñëÌïú Îç∞Ïù¥ÌÑ∞ Ìï∏Îì§ÎßÅ ÌîÑÎ†àÏûÑÏõåÌÅ¨Î•º Ïú†Ïó∞ÌïòÍ≤å ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎã§.\r\n`@Transactional` Ïñ¥ÎÖ∏ÌÖåÏù¥ÏÖòÏùÑ ÏÇ¨Ïö©ÌïòÎçîÎùºÎèÑ, Îç∞Ïù¥ÌÑ∞ Ìï∏Îì§ÎßÅ ÌîÑÎ†àÏûÑÏõåÌÅ¨ (JPA, JDBC, Hibernate Îì±)Ïóê Îî∞Îùº Îã§Î•¥Í≤å ÎèôÏûëÌïúÎã§.\r\n\r\nüî∑ Ìä∏ÎûúÏû≠ÏÖò Í¥ÄÎ¶¨ÏûêÏùò Íµ¨ÌòÑ Î™©Î°ù:\r\n\r\n- DataSourceTransactionManager\r\n- HibernateTransactionManager\r\n- JdbcTransactionManager\r\n- JpaTransactionManager\r\n- JtaTransactionManager\r\n- KafkaTransactionManager\r\n- ResourcelessTransactionManager\r\n\r\n### ÏÑ§Î™Ö\r\n`org.springframework.transaction.jta.JtaTransactionManager` Í∞ôÏù¥ Ïã§Ï†ú ÌîåÎû´Ìèº Ìä∏ÎûúÏû≠ÏÖòÎß§ÎãàÏ†ÄÏùò Í∏∞Î∞òÏúºÎ°ú ÏÇ¨Ïö©ÎêòÎäî SpringÏùò ÌëúÏ§Ä Ìä∏ÎûúÏû≠ÏÖò ÏûëÏóÖÌùêÎ¶Ñ Íµ¨ÌòÑÏ≤¥, Ï∂îÏÉÅ Í∏∞Î≥∏  ÌÅ¥ÎûòÏä§Ïù¥Îã§.\r\n\r\nÏù¥ Í∏∞Î≥∏ ÌÅ¥ÎûòÏä§Îäî Îã§ÏùåÏùò  ÏûëÏóÖÌùêÎ¶ÑÏùÑ Ï≤òÎ¶¨Î•º Ï†úÍ≥µÌïúÎã§.\r\n\r\n* Ìä∏ÎûúÏû≠ÏÖòÏù¥ ÏûàÎäîÏßÄ ÌåêÎã®\r\n* Ï†ÅÏ†àÌïú Ï†ÑÌåå ÎèôÏûëÏùÑ Ï†ÅÏö©\r\n* ÌïÑÏöîÌïòÎã§Î©¥ Ìä∏ÎûúÏû≠ÏÖòÏùÑ Ï§ëÎã®ÌïòÍ≥† Ïû¨Í∞ú\r\n* Ïª§Î∞ã Ïãú rollback-only ÌëúÏãúÎ•º ÌôïÏù∏\r\n* Î°§Î∞± Ïãú Ï†ÅÏ†àÌïú ÏàòÏ†ï ÏÇ¨Ìï≠ÏùÑ Ï†ÅÏö© (Ïã§Ï†ú Î°§Î∞± ÎòêÎäî  rollback-onlyÎ•º ÏÑ§Ï†ïÌï¥ÏÑú)\r\n* Îì±Î°ùÎêú ÎèôÍ∏∞Ìôî ÏΩúÎ∞±ÏùÑ Ìä∏Î¶¨Í±∞ (Ìä∏ÎûúÏû≠ÏÖò ÎèôÍ∏∞ÌôîÍ∞Ä ÌôúÏÑ±Ìôî Îêú Í≤ΩÏö∞)\r\n\r\nÌïòÏúÑÌÅ¥ÎûòÏä§Îäî Ìä∏ÎûúÏû≠ÏÖòÏùò ÌäπÏ†ï ÏÉÅÌÉúÏóêÎåÄÌïú ÌäπÏ†ï ÌÖúÌîåÎ¶ø Î©îÏÑúÎìúÎ•º Íµ¨ÌòÑÌï¥Ïïº Ìï® (Ïòà:  Ï§ëÎã®, Ïû¨Í∞ú, Ïª§Î∞ã, Î°§Î∞±Ï†Ñ). Í∞ÄÏû•Ï§ëÏöîÌïú Í±¥ Ï∂îÏÉÅÌôîÏôÄ Ïã§Ï†ú Íµ¨ÌòÑÏ≤¥Î°ú Ï†úÍ≥µÎêòÏñ¥ÏïºÎßå ÌïòÎäîÍ≤ÉÏù¥Í≥†, Í∑∏Ïô∏ÏóêÎäî Í∏∞Î≥∏Í∞íÏù¥ Ï†úÍ≥µÎêòÎØÄÎ°ú `overriding` ÏÑ†ÌÉùÏÇ¨Ìï≠.  \r\n\r\nÌä∏ÎûúÏû≠ÏÖò ÎèôÍ∏∞ÌôîÎäî Ìä∏ÎûúÏû≠ÏÖò ÏôÑÎ£åÏãúÍ∞ÑÏóê Ìò∏Ï∂úÎêòÎäî ÏΩúÎ∞±ÏùÑ Îì±Î°ùÌïòÍ∏∞ÏúÑÌïú ÏùºÎ∞òÏ†ÅÏù∏ Î©îÏª§ÎãàÏ¶ò. Ïù¥Í≤ÉÏùÄ JTA Ìä∏ÎûúÏû≠ÏÖò ÎÇ¥ÏóêÏÑú ÎèôÏûëÌï†Îïå JDBC, ÌïòÏù¥Î≤ÑÎÑ§Ïù¥Ìä∏, JPA Îì±Îì±Ïóê ÎåÄÌïú Îç∞Ïù¥ÌÑ∞ Ï†ëÍ∑ºÌÅ¥ÎûòÏä§Î°úÎ∂ÄÌÑ∞ ÎÇ¥Î∂ÄÏ†ÅÏúºÎ°ú ÏÇ¨Ïö©. (Ìä∏ÎûúÏû≠ÏÖò ÏôÑÎ£å ÏãúÍ∞ÑÏóê Îã´ÌûàÍ∏∞ ÏúÑÌï¥ Ìä∏ÎûúÏû≠ÏÖò ÎÇ¥ÏóêÏÑú Í∞úÎ∞©Îêú Î¶¨ÏÜåÏä§Î•º Îì±Î°ù. Ïòà : Ìä∏ÎûúÏû≠ÏÖò ÎÇ¥ ÎèôÏùºÌïú ÌïòÏù¥Î≤ÑÎÑ§Ïù¥Ìä∏ ÏÑ∏ÏÖòÏùò Ïû¨ÏÇ¨Ïö©ÏùÑ ÏúÑÌï¥ )  \r\n\r\nÏù¥ ÌÅ¥ÎûòÏä§Ïùò ÏÉÅÌÉúÎäî ÏßÅÎ†¨Ìôî Í∞ÄÎä•ÌïòÏó¨  Ìä∏ÎûúÏû≠ÏÖò Ïù∏ÌÑ∞ÏÖâÌÑ∞Î•º Ï†ÑÎã¨ÌïòÎäî ÌîÑÎ°ùÏãúÏôÄ ÎßàÏ∞¨Í∞ÄÏßÄÎ°ú Ìä∏ÎûúÏû≠ÏÖò Ï†ÑÎûµÎ•º ÏßÅÎ†¨Ìôî Í∞ÄÎä•. Ïù¥Í≤ÉÏùÄ ÌïòÏúÑÌÅ¥ÎûòÏä§Ïóê Îã¨Î†§ÏûàÎäîÎç∞, ÏÉÅÌÉúÎ•º ÏßÅÎ†¨Ìôî ÎêòÍ≤å ÎßåÎì§Í≥† Ïã∂Îã§Î©¥ ÏßÑÌñâ. Ïù¥ Í≤ΩÏö∞Ïóê ÌïòÏúÑÌÅ¥ÎûòÏä§Îäî ÎßàÏª§ Ïù∏ÌÑ∞ÌéòÏù¥Ïä§Ïù∏ `java.io.Seializable` Î•º Íµ¨ÌòÑÌï¥ÏïºÌïòÎ©∞ ÏùºÏãúÏ†ÅÏù∏ ÏÉÅÌÉúÎ•º Î≥µÏõêÌï¥ÏïºÌïòÎäîÍ≤ΩÏö∞ Ïû†Ïû¨Ï†ÅÏúºÎ°ú `private` readObject()  Î©îÏÜåÎìú (ÏûêÎ∞î ÏßÅÎ†¨Ìôî Í∑úÏπôÏóêÎî∞Îùº )Î•º Íµ¨ÌòÑÌï¥ÏïºÌï®.  \r\n\r\n\r\n### ÌïÑÎìú\r\n\r\n* SYNCHRONIZATION_ALWAYS = 0;\r\n    * Ìä∏ÎûúÏû≠ÏÖò ÎèôÍ∏∞ÌôîÎ•º Ìï≠ÏÉÅ ÌôúÏÑ±ÌôîÎ©∞ Í∏∞Ï°¥ Î∞±ÏóîÎìú Ìä∏ÎûúÏû≠ÏÖòÏù¥ ÏóÜÎäî PROPAGATION_SUPPORTSÏù∏ \"ÎπÑÏñ¥ÏûàÎäî\" Ìä∏ÎûúÏû≠ÏÖò ÍπåÏßÄÎèÑ Ï†ÅÏö©.\r\n\r\n* SYNCHRONIZATION_ON_ACTUAL_TRANSACTION = 1;\r\n    * Ïã§Ï†ú Ìä∏ÎûúÏû≠ÏÖòÏùÑ ÏúÑÌï¥ÏÑúÎßå Ìä∏ÎûúÏû≠ÏÖò ÎèôÍ∏∞ÌôîÎ•º ÌôúÏÑ±Ìôî ÌïòÎ©∞, Í∏∞Ï°¥ Î∞±ÏóîÎìú Ìä∏ÎûúÏû≠ÏÖòÏù¥ ÏóÜÎäî  PROPAGATION_SUPPORTS Ïù∏ ÎπÑÏñ¥ÏûàÎäî Ìä∏ÎûúÏû≠ÏÖòÏóêÎäî Ï†ÅÏö©ÎêòÏßÄ ÏïäÏùå.\r\n\r\n* SYNCHRONIZATION_NEVER = 2;\r\n    * Ïã§Ï†ú Ìä∏ÎûúÏû≠ÏÖòÍπåÏßÄÎèÑ Ìä∏ÎûúÏû≠ÏÖòÎèôÍ∏∞ÌôîÎ•º ÌôúÏÑ±ÌôîÌïòÏßÄ ÏïäÏùå.\r\n\r\n## ÏÑ§Ï†ïÍ∏∞Îä•\r\n`AbstactPlatformTransactionManager`Îäî Ìä∏ÎûúÏû≠ÏÖò ÎèôÍ∏∞ÌôîÎ•º Îì±Î°ùÌïòÍ≥† Í¥ÄÎ¶¨Ìï† Ïàò ÏûàÏùå.\r\n\r\n### final setTransactionSynchronizationName(String constantName)\r\n\r\n* Ïù¥ ÌÅ¥ÎûòÏä§Ïùò Ìï¥Îãπ ÏÉÅÏàòÎ™ÖÏúºÎ°ú Ìä∏ÎûúÏû≠ÏÖò ÎèôÍ∏∞ÌôîÎ•º ÏÑ§Ï†ï.\r\n\r\n\r\n\r\n### final setTransactionSynchronization( int transactionSynchronization)\r\n\r\n* Ïù¥ Ìä∏ÎûúÏû≠ÏÖò Îß§ÎãàÏ†ÄÍ∞Ä Thread-bound Ìä∏ÎûúÏû≠ÏÖò ÎèôÍ∏∞Ìôî ÏßÄÏõêÏùÑ ÌôúÏÑ±Ìôî Ìï¥ÏïºÎßå Ìï†Îïå ÏÑ§Ï†ïÌï®. Í∏∞Î≥∏Í∞íÏùÄ `SYNCHRONIZATION_ALWAYS`.\r\n* Ï∞∏Í≥†Î°ú Ìä∏ÎûúÏû≠ÏÖò ÎèôÍ∏∞ÌôîÎäî Îã§Î•∏ Ìä∏ÎûúÏû≠ÏÖò Îß§ÎãàÏ†ÄÏóê ÏùòÌï¥ Îã§Ï§ë ÎèôÏãú Ìä∏ÎûúÏû≠ÏÖòÏùÑ ÏßÄÏõêÌïòÏßÄ ÏïäÏùå. ÌïúÍ∞úÏùò Ìä∏ÎûúÏû≠ÏÖò Îß§ÎãàÏ†ÄÎßåÏù¥ Ïù¥Í≤ÉÏùÑ Ïñ∏Ï†úÎì†ÏßÄ ÌóàÏö©Ìï† Ïàò ÏûàÏùå.\r\n\r\n\r\n### final setDefaultTimeout(int defaultTimeout)\r\n\r\n* Ìä∏ÎûúÏû≠ÏÖò Î†àÎ≤®Ïóê Ï¥àÎã®ÏúÑÎ°ú Î™ÖÏãúÎêú ÌÉÄÏûÑÏïÑÏõÉÏù¥ ÏóÜÎäîÍ≤ΩÏö∞ Ïù¥ Ìä∏ÎûúÏû≠ÏÖò Îß§ÎãàÏ†ÄÍ∞Ä Ï†ÅÏö©Ìï¥ÏïºÎßåÌïòÎäî Í∏∞Î≥∏ ÌÉÄÏûÑÏïÑÏõÉÏùÑ Î™ÖÏãú.\r\n* Í∏∞Î≥∏Í∞íÏùÄ Í∑ºÎ≥∏Ï†ÅÏù∏ Ìä∏ÎûúÏû≠ÏÖò Ïù∏ÌîÑÎùº Í∏∞Î≥∏ ÌÉÄÏûÑÏïÑÏõÉ(Ïòà: ÏùºÎ∞òÏ†ÅÏúºÎ°ú, JTA Provider Ïùò Í≤ΩÏö∞ 30Ï¥à)Ïù¥Î©∞, TransactionDefinition.TIMEOUT_DEFAULT Í∞íÏúºÎ°ú ÎÇòÌÉÄÎÇ®.\r\n\r\n\r\n\r\n### final setNestedTransactionAllowed(boolean nestedTransactionAllowed)\r\n\r\n* Í∏∞Î≥∏Í∞íÏùÄ \"false\"Ïù¥Î©∞, Ï§ëÎ≥µ Ìä∏ÎûúÏû≠ÏùÑ ÌóàÏö©Ìï†ÏßÄ ÏÑ§Ï†ï.\r\n* ÏùºÎ∞òÏ†ÅÏúºÎ°ú Íµ¨Ï≤¥Ï†ÅÏù∏ Ìä∏ÎûúÏû≠ÏÖò Îß§ÎãàÏ†Ä ÌïòÏúÑÌÅ¥ÎûòÏä§Ïóê ÏùòÌï¥ Ï†ÅÏ†àÌïú Í∏∞Î≥∏Í∞íÏúºÎ°ú Ï¥àÍ∏∞Ìôî Îê®.\r\n\r\n\r\n### final setValidateExistingTransaction(boolean validateExistingTransaction)\r\n\r\n* Í∏∞Ï°¥ Ìä∏ÎûúÏû≠ÏÖòÏóê Ï∞∏Ïó¨ÌïòÍ∏∞ Ï†ÑÏóê Í≤ÄÏ¶ùÎèºÏïº ÌïòÎäîÏßÄ ÏÑ§Ï†ï.\r\n* Í∏∞Ï°¥ Ìä∏ÎûúÏû≠ÏÖò(Ïòà: PROPAGATION_REQUIRED ÎòêÎäî PROPAGATION_SUPPORTÍ∞Ä Í∏∞Ï°¥ Ìä∏ÎûúÏû≠ÏÖòÏùÑ ÎßåÎÇòÎäî Í≤ΩÏö∞)Ïóê Ï∞∏Ïó¨Ìï†Îïå, Ïù¥ Ïô∏Î∂Ä Ìä∏ÎûúÏû≠ÏÖòÏùò ÌòïÏßàÏùÄ ÎÇ¥Î∂Ä Ìä∏ÎûúÏû≠ÏÖòÏòÅÏó≠Ïóê ÍπåÏßÄÎèÑ Ï†ÅÏö©.\r\n* Ïú†Ìö®ÏÑ± Í≤ÄÏÇ¨Îäî ÎÇ¥Î∂Ä Ìä∏ÎûúÏû≠ÏÖò Ï†ïÏùòÏóêÏÑú Ìò∏ÌôòÎêòÏßÄ ÏïäÎäî Í≥†Î¶ΩÎ†àÎ≤® Î∞è ÏùΩÍ∏∞Ï†ÑÏö© ÏÑ§Ï†ïÏùÑ Í∞êÏßÄÌïòÍ≥† Ìï¥Îãπ ÏòàÏô∏Î•º throwÌïòÏó¨ Ïù¥ÏóêÎî∞Îùº Ï∞∏Ïó¨Î•º Í±∞Î∂Ä.\r\n* Í∏∞Î≥∏Í∞íÏùÄ \"false\"Ïù¥Î©∞, ÎÇ¥Î∂Ä Ìä∏ÎûúÏû≠ÏÖò ÏÑ§Ï†ïÏùÑ ÎäêÏä®ÌïòÍ≤å Î¨¥ÏãúÌïòÏó¨, Ïô∏Î∂Ä Ìä∏ÎûúÏû≠ÏÖòÏùò ÌòïÏßàÎ°ú Í∞ÑÎã®Ìûà Ïû¨Ï†ïÏùò.\r\n* \"true\" ÌîåÎûòÍ∑∏Î°ú Î≥ÄÍ≤ΩÏùÄ ÏóÑÍ≤©Ìïú Ïú†Ìö®ÏÑ±Í≤ÄÏÇ¨Î•º Í∞ïÏ†úÌïòÎèÑÎ°ù Î™ÖÎ†π.\r\n\r\n\r\n### final setGlobalRollbackOnParticipationFailure(boolean gloabalRollbackOnParticipationFailure)\r\n\r\n* Ï∞∏Ïó¨ÌïòÎäî Ìä∏ÎûúÏû≠ÏÖòÏù¥ Ïã§Ìå®ÌïúÌõÑÏóê Í∏∞Ï°¥ Ìä∏ÎûúÏû≠ÏÖòÏùÑ `rollback-only`Î°ú Ï†ÑÏó≠Ï†ÅÏúºÎ°ú ÌëúÏãúÌï†ÏßÄ ÏÑ§Ï†ï.\r\n* Í∏∞Î≥∏Í∞íÏùÄ \"true\"Ïù¥Î©∞, Ï∞∏Ïó¨ÌïòÎäî Ìä∏ÎûúÏû≠ÏÖò(Ïòà: PROPAGATION_REQUIRED ÎòêÎäî PROPAGATION_SUPPORTÍ∞Ä Í∏∞Ï°¥ Ìä∏ÎûúÏû≠ÏÖòÏùÑ ÎßåÎÇòÎäî Í≤ΩÏö∞)Ïù¥ Ïã§Ìå®ÌïúÎã§Î©¥, Ìä∏ÎûúÏû≠ÏÖòÏùÄ `rollback-only`Î°ú Ï†ÑÏó≠Ï†ÅÏúºÎ°ú ÎßàÌÇπ. *Ïù¥Îü∞ Ìä∏ÎûúÏû≠ÏÖòÏóê Ïò§ÏßÅ Í∞ÄÎä•Ìïú Í≤∞Í≥ºÎäî Î°§Î∞±.*  \r\n* ‚Äúfalse‚ÄùÎ°ú Î≥ÄÍ≤ΩÏãú: Ìä∏ÎûúÏû≠ÏÖò Î∞úÏã†ÏûêÍ∞Ä Î°§Î∞± Í≤∞Ï†ïÏùÑ ÎÇ¥Î¶º. ÎßåÏïΩ Ï∞∏Ïó¨ÌïòÎäî Ìä∏ÎûúÏû≠ÏÖòÏù¥ ÏòàÏô∏Î°ú Ïã§Ìå®ÌïúÎã§Î©¥, Ìò∏Ï∂úÏûêÎäî Ìä∏ÎûúÏû≠ÏÖò ÎÇ¥ Îã§Î•∏Í≤ΩÎ°úÎ°ú Í≥ÑÏÜçÌïòÍ∏∞Î°ú Í≤∞Ï†ïÌï† Ïàò ÏûàÏùå. ÌïòÏßÄÎßå, Ïù¥Îäî Î™®Îì† Ï∞∏Ïó¨ ÏûêÏõêÏù¥ Îç∞Ïù¥ÌÑ∞ Ïï°ÏÑ∏Ïä§ Ïã§Ìå® ÌõÑÏóêÎèÑ Ìä∏ÎûúÏû≠ÏÖò Ïª§Î∞ãÏùÑ Ìñ•Ìï¥ Í≥ÑÏÜçÌï† Ïàò ÏûàÎäî Í≤ΩÏö∞ÏóêÎßå ÏûëÎèô. (ÏùºÎ∞òÏ†ÅÏúºÎ°ú Hibernate ÏÑ∏ÏÖòÏùÄ Ìï¥ÎãπÎêòÏßÄ ÏïäÎäî Í≤ΩÏö∞ÏûÑ. Ïòà: JDBC insert/update/delete ÎèôÏûëÎì§Ïùò sequence)  \r\n* **Ï∞∏Í≥†:** Ïù¥ ÌîåÎûòÍ∑∏Îäî ÏùºÎ∞òÏ†ÅÏúºÎ°ú Îç∞Ïù¥ÌÑ∞ Ï†ëÍ∑º ÏûëÏóÖ(TransactionInterceptorÍ∞Ä Î°§Î∞±Î£∞Ïóê Îî∞Îùº PlatformTransactionManager.rollback() Ìò∏Ï∂úÏùÑ Ìä∏Î¶¨Í±∞ÌïòÎäî Í≤ΩÏö∞)ÏúºÎ°ú Ïù∏Ìï¥ throw Îêú ÏòàÏô∏Í∞Ä Î∞úÏÉùÌïú ÌïòÏúÑ Ìä∏ÎûúÏû≠ÏÖòÏóê ÎåÄÌïú Î™ÖÏãúÏ†Å Î°§Î∞±ÏãúÎèÑÏóêÎßå Ï†ÅÏö©. ÌîåÎûòÍ∑∏Í∞Ä ÎπÑÌôúÏÑ±ÌôîÎùºÎ©¥ Ìò∏Ï∂úÏûêÎäî ÌïòÏúÑ Ìä∏ÎûúÏû≠ÏÖòÏùò Î°§Î∞±Î£∞Í≥º Í¥ÄÍ≥ÑÏóÜÏù¥ ÏòàÏô∏Î•º Ï≤òÎ¶¨ÌïòÍ≥† Î°§Î∞±ÏùÑ Í≤∞Ï†ïÌï† Ïàò ÏûàÏùå. Í∑∏Îü¨ÎÇò Ïù¥ ÌîåÎûòÍ∑∏Îäî ÌïòÏúÑÌä∏ÎûúÏû≠ÏÖòÏóê Î™ÖÏãúÏ†Å `setRollbackOnly` Ìò∏Ï∂úÏùÑ Ï†ÅÏö©ÌïòÏßÄ ÏïäÏúºÎØÄÎ°ú,Ïù¥Îäî  Ìï≠ÏÉÅ ÏµúÏ¢ÖÏ†ÅÏù∏ Í∏ÄÎ°úÎ≤å Î°§Î∞±(`rollback-only` Ìò∏Ï∂úÌõÑ ÏòàÏô∏Í∞Ä Î∞úÏÉùÌïòÏßÄ ÏïäÏùÑ Ïàò ÏûàÍ∏∞ ÎïåÎ¨∏Ïóê )ÏùÑ Ïú†Î∞ú.\r\n* ÌïòÏúÑÌä∏ÎûúÏû≠ÏÖòÏùò Ïã§Ìå®Ï≤òÎ¶¨Ïóê ÎåÄÌïú Ï∂îÏ≤úÎìúÎ¶¨Îäî Î∞©Î≤ïÏùÄ Í∏ÄÎ°úÎ≤å Ìä∏ÎûúÏû≠ÏÖòÏù¥ ÌïòÏúÑÌä∏ÎûúÏû≠ÏÖòÏùò ÏãúÏûëÏãú Í∞ÄÏ†∏Ïò® ÏÑ∏Ïù¥Î∏åÌè¨Ïù∏Ìä∏Î°ú Î°§Î∞±Îê† Ïàò ÏûàÎèÑÎ°ù ÌïòÎäî ‚ÄúÏ§ëÎ≥µ Ìä∏ÎûúÏû≠ÏÖò‚Äù ÏûÑ. `PROPAGATION_NESTED`Îäî Ï†ïÌôïÌûà Ïù¥Îü¨Ìïú ÏùòÎØ∏Î•º Ï†úÍ≥µÌï®. Í∑∏Îü¨ÎÇò, Ï§ëÎ≥µ Ìä∏ÎûúÏû≠ÏÖò ÏßÄÏõêÏù¥ Í∞ÄÎä•Ìï† ÎïåÎßå ÎèôÏûëÌï®. `DataSource TransactionManager` Í≤ΩÏö∞ÏßÄÎßå, `JtaTransactionManager`Ïùò Í≤ΩÏö∞Îäî ÏïÑÎãò.\r\n\r\n\r\n### final setFailEarlyOnGlobalRollbackOnly(boolean failEarlyOnGlobalRollbackOnly)\r\n* Ìä∏ÎûúÏû≠ÏÖòÏù¥ `rollback-only`Î°ú Ï†ÑÏó≠Ï†ÅÏúºÎ°ú ÌëúÏãúÎêú Í≤ΩÏö∞Ïóê Ï°∞Í∏∞ Ïã§Ìå®Ìï† Í≤É Ïù∏ÏßÄ ÏÑ§Ï†ï.\r\n* Í∏∞Î≥∏Í∞íÏùÄ ‚Äúfalse‚Äù Ïù¥Î©∞, Í∞ÄÏû• Î∞îÍπ•Ï™ΩÏùò Ìä∏ÎûúÏû≠ÏÖò Î∞îÏö¥ÎçîÎ¶¨ÏóêÏÑúÎßå `UnexpectedRollbackExcetpion`ÏùÑ Î∞úÏÉùÏãúÌÇ¥. ÎÇ¥Î∂Ä Ìä∏ÎûúÏû≠ÏÖò Î∞îÏö¥ÎçîÎ¶¨ ÎÇ¥ÏóêÏÑú Ï†ÑÏó≠ rollback-only ÎßàÏª§Í∞Ä Ï≤òÏùå Í∞êÏßÄÌïòÏó¨ Ï¶âÏãú `UnexpectedRollbackException`ÏùÑ Î∞úÏÉùÏãúÌÇ§Î†§Î©¥ Ïù¥ Í∞íÏùÑ Î≥ÄÍ≤ΩÌï¥ÏïºÌï®.\r\n* Ï∞∏Í≥†Î°ú Ïä§ÌîÑÎßÅ 2.0Î∂ÄÌÑ∞ Ï†ÑÏó≠  rollback-only ÌëúÏãúÏûêÏóê ÎåÄÌïú Ï°∞Í∏∞Ïã§Ìå® ÎèôÏûëÏù¥ ÌÜµÌï© Îê®. (Î™®Îì† Ìä∏ÎûúÏû≠ÏÖò Îß§ÎãàÏ†∏Îäî Í∏∞Î≥∏Ï†ÅÏúºÎ°ú Í∞ÄÏû• Î∞îÍπ•Ï™ΩÏùò Ìä∏ÎûúÏû≠ÏÖò Î∞îÏö¥ÎçîÎ¶¨ÏóêÏÑúÎßå `UnexpectedRollbackException`ÏùÑ Î∞úÏÉùÏãúÌÇ¥.) Ïù¥ ÌóàÏö© ÏòàÎ•ºÎì§Ïñ¥ ÎèôÏûëÏù¥ Ïã§Ìå®ÌïòÍ≥† Ìä∏ÎûúÏû≠ÏÖòÏù¥ ÏôÑÎ£åÎêòÏßÄ ÏïäÏùÄ ÌõÑÏóêÎèÑ Ïú†Îãõ ÌÖåÏä§Ìä∏Î•º Í≥ÑÏÜçÌï† Ïàò ÏûàÏùå. Î™®Îì† Ìä∏ÎûúÏû≠ÏÖò Îß§ÎãàÏ†ÄÎäî Ïù¥ ÌîåÎûòÍ∑∏Í∞Ä Î™ÖÏãúÏ†ÅÏúºÎ°ú \"true\"Î°ú ÏÑ§Ï†ïÎêêÏùÑ ÎïåÎßå Ï°∞Í∏∞Ïã§Ìå® ÏãúÌÇ¥.\r\n\r\n### final setRollbackOnCommitFailure(boolean rollbackOnCommitFailure)\r\n*  `doCommit`Î©îÏÜåÎìú Ìò∏Ï∂úÏùò Ïã§Ìå®Ïóê `doRollback`Ïù¥ ÏàòÌñâ Ìï¥ÏïºÎßåÌïòÎäîÏßÄ ÏÑ§Ï†ïÌï®. ÏùºÎ∞òÏ†ÅÏúºÎ°ú ÌïÑÏöîÌïòÏßÄ ÏïäÍ≥† ÌõÑÏÜç Î°§Î∞± ÏòàÏô∏Î°ú Ïª§Î∞ã ÏòàÏô∏Î•º Î¨¥ÏãúÌï† Í∞ÄÎä•ÏÑ±Ïù¥ ÏûàÏúºÎ©∞, Îî∞ÎùºÏÑú ÌîºÌï¥ÏïºÌï®.\r\n\r\n## PlatformTransactionManager Íµ¨ÌòÑÏ≤¥\r\n\r\n\r\n### final getTransaction(TransactionDefinition definition)\r\n\r\n```java\r\n@Override\r\n\tpublic final TransactionStatus getTransaction(@Nullable TransactionDefinition definition)\r\n\t\t\tthrows TransactionException {\r\n\r\n\t\t// Use defaults if no transaction definition given.\r\n\t\tTransactionDefinition def = (definition != null ? definition : TransactionDefinition.withDefaults());\r\n\r\n\t\tObject transaction = doGetTransaction();\r\n\t\tboolean debugEnabled = logger.isDebugEnabled();\r\n\r\n\t\tif (isExistingTransaction(transaction)) {\r\n\t\t\t// Existing transaction found -> check propagation behavior to find out how to behave.\r\n\t\t\treturn handleExistingTransaction(def, transaction, debugEnabled);\r\n\t\t}\r\n\r\n\t\t// Check definition settings for new transaction.\r\n\t\tif (def.getTimeout() < TransactionDefinition.TIMEOUT_DEFAULT) {\r\n\t\t\tthrow new InvalidTimeoutException(\"Invalid transaction timeout\", def.getTimeout());\r\n\t\t}\r\n\r\n\t\t// No existing transaction found -> check propagation behavior to find out how to proceed.\r\n\t\tif (def.getPropagationBehavior() == TransactionDefinition.PROPAGATION_MANDATORY) {\r\n\t\t\tthrow new IllegalTransactionStateException(\r\n\t\t\t\t\t\"No existing transaction found for transaction marked with propagation 'mandatory'\");\r\n\t\t}\r\n\t\telse if (def.getPropagationBehavior() == TransactionDefinition.PROPAGATION_REQUIRED ||\r\n\t\t\t\tdef.getPropagationBehavior() == TransactionDefinition.PROPAGATION_REQUIRES_NEW ||\r\n\t\t\t\tdef.getPropagationBehavior() == TransactionDefinition.PROPAGATION_NESTED) {\r\n\t\t\tSuspendedResourcesHolder suspendedResources = suspend(null);\r\n\t\t\tif (debugEnabled) {\r\n\t\t\t\tlogger.debug(\"Creating new transaction with name [\" + def.getName() + \"]: \" + def);\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\treturn startTransaction(def, transaction, debugEnabled, suspendedResources);\r\n\t\t\t}\r\n\t\t\tcatch (RuntimeException | Error ex) {\r\n\t\t\t\tresume(null, suspendedResources);\r\n\t\t\t\tthrow ex;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Create \"empty\" transaction: no actual transaction, but potentially synchronization.\r\n\t\t\tif (def.getIsolationLevel() != TransactionDefinition.ISOLATION_DEFAULT && logger.isWarnEnabled()) {\r\n\t\t\t\tlogger.warn(\"Custom isolation level specified but no actual transaction initiated; \" +\r\n\t\t\t\t\t\t\"isolation level will effectively be ignored: \" + def);\r\n\t\t\t}\r\n\t\t\tboolean newSynchronization = (getTransactionSynchronization() == SYNCHRONIZATION_ALWAYS);\r\n\t\t\treturn prepareTransactionStatus(def, null, true, newSynchronization, debugEnabled, null);\r\n\t\t}\r\n\t}\r\n```\r\n\r\nÏù¥ Íµ¨ÌòÑÏ≤¥Îäî Ï†ÑÌååÎèôÏûëÏùÑ Ï≤òÎ¶¨Ìï®. doGetTransaction, isExistingTransaction Î∞è doBegin Î©îÏÑúÎìúÎ•º ÏúÑÏûÑÌï®.\r\nÏÑ§Ï†ïÎêú Í∞íÏùÑ Î®ºÏ†ÄÌôïÏù∏ÌïòÍ≥† ÏóÜÎã§Î©¥ Í∏∞Î≥∏Í∞íÏúºÎ°ú ÏÑ∏ÌåÖÌïò  Ìä∏ÎûúÏû≠ÏÖòÏùÑ Í∞ÄÏ†∏Ïò¥. Ï†úÏùºÎ®ºÏ†Ä `TransactionDefinition` Í∏∞Î≥∏Í∞í ÏÑ∏ÌåÖ ÌõÑ `doGetTransaction`ÏúºÎ°ú Ìä∏ÎûúÏû≠ÏÖòÏùÑ Î∂àÎü¨Ïò¥.\r\nÏù¥ Î©îÏÑúÎìúÏóêÏÑúÎäî Î®ºÏ†Ä ÏÇ¥Ìé¥Î¥êÏïºÌï† Î©îÏÑúÎìúÍ∞Ä 3Í∞ÄÏßÄÏ†ïÎèÑÎ°ú ÎÇòÎàåÏàò ÏûàÏùå. `doGetTransaction`, `handleExistingTransaction`, `doBegin`ÏùÑ Î≥¥Î©∞ Ïú†Ï∂îÌï®.\r\n\r\n\r\n### doGetTransaction\r\n\r\n* ÌòÑÏû¨ Ìä∏ÎûúÏû≠ÏÖò ÏÉÅÌÉúÏóêÎåÄÌïú Ìä∏ÎûúÏû≠ÏÖò Í∞ùÏ≤¥Î•º Î¶¨ÌÑ¥ÌïòÎäî Î©îÏÑúÎìúÏûÑ.\r\n* Î∞òÌôòÎêú Í∞ùÏ≤¥Îäî ÏùºÎ∞òÏ†ÅÏúºÎ°ú Î≥ÄÍ≤ΩÌï†Ïàò ÏûàÎäî Î∞©ÏãùÏóê Ìï¥ÎãπÌïòÎäî Ìä∏ÎûúÏû≠ÏÖòÏùÑ Ï†ÑÎã¨ÌïòÏó¨ Íµ¨Ï≤¥Ï†ÅÏù∏ Ìä∏ÎûúÏû≠ÏÖò Îß§ÎãàÏ†Ä Íµ¨ÌòÑÏ≤¥Ïóê Î™ÖÏãúÎê®.\r\n\r\n\r\nÏù¥ Î©îÏÑúÎìúÎäî Ï∂îÏÉÅÌôîÎêòÏñ¥ÏûàÍ≥† Í∞Å Íµ¨ÌòÑÏ≤¥Ïù∏ Transaction ManagerÎì§Ïóê ÏùòÌïòÏó¨ Íµ¨ÌòÑÎêòÏûàÏùå. ÏùºÎ∞òÏ†ÅÏúºÎ°ú `JDBC`Î•º ÏÇ¨Ïö©ÌïòÎäî `DataSourceTransactionManager`Î•º Ïòà:\r\n\r\n```java\r\n@Override\r\nprotected Object doGetTransaction() {\r\n  DataSourceTransactionObject txObject = new DataSourceTransactionObject();\r\n  txObject.setSavepointAllowed(isNestedTransactionAllowed());\r\n  ConnectionHolder conHolder =\r\n      (ConnectionHolder) TransactionSynchronizationManager.getResource(obtainDataSource());\r\n  txObject.setConnectionHolder(conHolder, false);\r\n  return txObject;\r\n}\r\n```\r\n`line 4`ÏóêÏÑú ÏÑ∏Ïù¥Î∏åÌè¨Ïù∏Ìä∏Î•º Ïù¥ Ìä∏ÎûúÏû≠ÏÖòÎÇ¥ÏóêÏÑú ÌóàÏö©Îê† Í≤ÉÏù∏ÏßÄÎ•º Ï†ïÌïòÍ≥† Îß§Í∞úÎ≥ÄÏàòÎ°ú Ï§ëÏ≤©Ìä∏ÎûúÏû≠ÏÖòÏùò ÌóàÏö© Ïó¨Î∂ÄÏùÑ Î≥¥ÎÉÑ. `line 5`Ïóê `ConnnectionHolder`Í∞Ä Ïª®ÎÑ•ÏÖò Î∞è ÏÑ∏Ïù¥Î∏å Ìè¨Ïù∏Ìä∏Î•º ÏÉùÏÑ±Ìï®. ÏïÑÎûò ÏΩîÎìúÎ•º Î≥¥ÏãúÎ©¥ ÏÑ∏Ïù¥Î∏åÌè¨Ïù∏Ìä∏Ïùò ÎÑ§Ïù¥Î∞çÏùÑ ÌôïÏù∏Ìï† Ïàò ÏûàÏùå.\r\n\r\n```java\r\npublic Savepoint createSavepoint() throws SQLException {\r\n\t\tthis.savepointCounter++;\r\n\t\treturn getConnection().setSavepoint(SAVEPOINT_NAME_PREFIX + this.savepointCounter);\r\n\t}\r\n```\r\nÌä∏ÎûúÏû≠ÏÖò ÎÇ¥ÏóêÏÑú `SAVEPOINT_0`, `SAVEPOINT_1` .. Ïù¥Îü∞ÏãùÏúºÎ°ú ÏÉùÏÑ±ÎêòÎ©¥ÏÑú Í∞ØÏàòÎ•º Ï≤¥ÌÅ¨Ìï®. `ConnectionHolder`Îäî ÌòÑÏû¨ ÏÑ§Ï†ïÎêú DataSourceÎ°ú `Connnection`ÏùÑ ÏÉùÏÑ±ÌïòÏó¨ Ìï†Îãπ. Í≤∞Í≥ºÏ†ÅÏúºÎ°ú ÏÑ∏Ïù¥Î∏åÌè¨Ïù∏Ìä∏ ÏÇ¨Ïö© Ïó¨Î∂ÄÏôÄ Ïª®ÎÑ•ÏÖòÏùÑ Í∞ÄÏßÄÍ≥† Ìä∏ÎûúÏû≠ÏÖò Í∞ùÏ≤¥Î•º Î∞òÌôòÌï®.\r\n\r\n### handleExistingTransaction\r\nÌä∏ÎûúÏû≠ÏÖòÏù¥ Ï°¥Ïû¨ÌïòÎäîÏßÄ ÌôïÏù∏ÌïòÍ≥† Ï°¥Ïû¨ÌïúÎã§Î©¥ `handleExistingTransaction`ÏúºÎ°ú Î≥¥ÎÇ¥Î≤ÑÎ¶º.\r\n\r\n```java\r\nprivate TransactionStatus handleExistingTransaction(\r\n\t\t\tTransactionDefinition definition, Object transaction, boolean debugEnabled)\r\n\t\t\tthrows TransactionException {\r\n\r\n\t\tif (definition.getPropagationBehavior() == TransactionDefinition.PROPAGATION_NEVER) {\r\n\t\t\tthrow new IllegalTransactionStateException(\r\n\t\t\t\t\t\"Existing transaction found for transaction marked with propagation 'never'\");\r\n\t\t}\r\n\r\n\t\tif (definition.getPropagationBehavior() == TransactionDefinition.PROPAGATION_NOT_SUPPORTED) {\r\n\t\t\tif (debugEnabled) {\r\n\t\t\t\tlogger.debug(\"Suspending current transaction\");\r\n\t\t\t}\r\n\t\t\tObject suspendedResources = suspend(transaction);\r\n\t\t\tboolean newSynchronization = (getTransactionSynchronization() == SYNCHRONIZATION_ALWAYS);\r\n\t\t\treturn prepareTransactionStatus(\r\n\t\t\t\t\tdefinition, null, false, newSynchronization, debugEnabled, suspendedResources);\r\n\t\t}\r\n\r\n\t\tif (definition.getPropagationBehavior() == TransactionDefinition.PROPAGATION_REQUIRES_NEW) {\r\n\t\t\tif (debugEnabled) {\r\n\t\t\t\tlogger.debug(\"Suspending current transaction, creating new transaction with name [\" +\r\n\t\t\t\t\t\tdefinition.getName() + \"]\");\r\n\t\t\t}\r\n\t\t\tSuspendedResourcesHolder suspendedResources = suspend(transaction);\r\n\t\t\ttry {\r\n\t\t\t\treturn startTransaction(definition, transaction, debugEnabled, suspendedResources);\r\n\t\t\t}\r\n\t\t\tcatch (RuntimeException | Error beginEx) {\r\n\t\t\t\tresumeAfterBeginException(transaction, suspendedResources, beginEx);\r\n\t\t\t\tthrow beginEx;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (definition.getPropagationBehavior() == TransactionDefinition.PROPAGATION_NESTED) {\r\n\t\t\tif (!isNestedTransactionAllowed()) {\r\n\t\t\t\tthrow new NestedTransactionNotSupportedException(\r\n\t\t\t\t\t\t\"Transaction manager does not allow nested transactions by default - \" +\r\n\t\t\t\t\t\t\"specify 'nestedTransactionAllowed' property with value 'true'\");\r\n\t\t\t}\r\n\t\t\tif (debugEnabled) {\r\n\t\t\t\tlogger.debug(\"Creating nested transaction with name [\" + definition.getName() + \"]\");\r\n\t\t\t}\r\n\t\t\tif (useSavepointForNestedTransaction()) {\r\n\t\t\t\t// Create savepoint within existing Spring-managed transaction,\r\n\t\t\t\t// through the SavepointManager API implemented by TransactionStatus.\r\n\t\t\t\t// Usually uses JDBC 3.0 savepoints. Never activates Spring synchronization.\r\n\t\t\t\tDefaultTransactionStatus status =\r\n\t\t\t\t\t\tprepareTransactionStatus(definition, transaction, false, false, debugEnabled, null);\r\n\t\t\t\tstatus.createAndHoldSavepoint();\r\n\t\t\t\treturn status;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Nested transaction through nested begin and commit/rollback calls.\r\n\t\t\t\t// Usually only for JTA: Spring synchronization might get activated here\r\n\t\t\t\t// in case of a pre-existing JTA transaction.\r\n\t\t\t\treturn startTransaction(definition, transaction, debugEnabled, null);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Assumably PROPAGATION_SUPPORTS or PROPAGATION_REQUIRED.\r\n\t\tif (debugEnabled) {\r\n\t\t\tlogger.debug(\"Participating in existing transaction\");\r\n\t\t}\r\n\t\tif (isValidateExistingTransaction()) {\r\n\t\t\tif (definition.getIsolationLevel() != TransactionDefinition.ISOLATION_DEFAULT) {\r\n\t\t\t\tInteger currentIsolationLevel = TransactionSynchronizationManager.getCurrentTransactionIsolationLevel();\r\n\t\t\t\tif (currentIsolationLevel == null || currentIsolationLevel != definition.getIsolationLevel()) {\r\n\t\t\t\t\tConstants isoConstants = DefaultTransactionDefinition.constants;\r\n\t\t\t\t\tthrow new IllegalTransactionStateException(\"Participating transaction with definition [\" +\r\n\t\t\t\t\t\t\tdefinition + \"] specifies isolation level which is incompatible with existing transaction: \" +\r\n\t\t\t\t\t\t\t(currentIsolationLevel != null ?\r\n\t\t\t\t\t\t\t\t\tisoConstants.toCode(currentIsolationLevel, DefaultTransactionDefinition.PREFIX_ISOLATION) :\r\n\t\t\t\t\t\t\t\t\t\"(unknown)\"));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!definition.isReadOnly()) {\r\n\t\t\t\tif (TransactionSynchronizationManager.isCurrentTransactionReadOnly()) {\r\n\t\t\t\t\tthrow new IllegalTransactionStateException(\"Participating transaction with definition [\" +\r\n\t\t\t\t\t\t\tdefinition + \"] is not marked as read-only but existing transaction is\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tboolean newSynchronization = (getTransactionSynchronization() != SYNCHRONIZATION_NEVER);\r\n\t\treturn prepareTransactionStatus(definition, transaction, false, newSynchronization, debugEnabled, null);\r\n\t}\r\n```\r\n`PROPAGATION_NEVER`ÏùÄ ÌòÑÏû¨ Ìä∏ÎûúÏû≠ÏÖòÏù¥ Ï°¥Ïû¨ÌïúÎã§Î©¥ Î∞îÎ°ú ÏòàÏô∏Î•º throwing ÌïòÍ≥†,  `PROPAGATION_NOT_SUPPORTED`Îäî ÌòÑÏû¨ Ìä∏ÎûúÏû≠ÏÖòÏùÑ Ï§ëÏßÄÌï®.\r\n`PROPAGATION_REQUIRES_NEW`Îäî ÌòÑÏû¨ ÏßÑÌñâÏ§ëÏù∏ Ìä∏ÎûúÏû≠ÏÖòÏùÑ Ï§ëÎã®ÌïòÍ≥† ÏÉàÎ°úÏö¥ Ïª§ÎÑ•ÏÖòÏúºÎ°ú Ìä∏ÎûúÏû≠ÏÖòÏùÑ ÏãúÏûëÌïòÍ∏∞ ÎïåÎ¨∏Ïóê `startTransaction()`Î°ú Î≥¥ÎÉÑ.\r\nÏù¥Ï≤òÎüº Îã§Îäî ÏÑ§Î™ÖÌïòÏßÄ Î™ªÌïòÏßÄÎßå Í∞Å Ï†ÑÌååÏòµÏÖòÍ≥º ÌòÑÏû¨ ÏßÑÌñâÏ§ëÏù∏ Ìä∏ÎûúÏû≠ÏÖòÏùò Ïú†Î¨¥Î•º ÌåêÎã®ÌïòÏó¨ Ìä∏ÎûúÏû≠ÏÖò(ÏÉÅÌÉú)Î•º Î¶¨ÌÑ¥Ìï®.\r\n\r\n### doBegin\r\n\r\n```java\r\n@Override\r\nprotected void doBegin(Object transaction, TransactionDefinition definition) {\r\n  DataSourceTransactionObject txObject = (DataSourceTransactionObject) transaction;\r\n  Connection con = null;\r\n\r\n  try {\r\n    if (!txObject.hasConnectionHolder() ||\r\n        txObject.getConnectionHolder().isSynchronizedWithTransaction()) {\r\n      Connection newCon = obtainDataSource().getConnection();\r\n      if (logger.isDebugEnabled()) {\r\n        logger.debug(\"Acquired Connection [\" + newCon + \"] for JDBC transaction\");\r\n      }\r\n      txObject.setConnectionHolder(new ConnectionHolder(newCon), true);\r\n    }\r\n\r\n    txObject.getConnectionHolder().setSynchronizedWithTransaction(true);\r\n    con = txObject.getConnectionHolder().getConnection();\r\n\r\n    Integer previousIsolationLevel = DataSourceUtils.prepareConnectionForTransaction(con, definition);\r\n    txObject.setPreviousIsolationLevel(previousIsolationLevel);\r\n    txObject.setReadOnly(definition.isReadOnly());\r\n\r\n    // Switch to manual commit if necessary. This is very expensive in some JDBC drivers,\r\n    // so we don't want to do it unnecessarily (for example if we've explicitly\r\n    // configured the connection pool to set it already).\r\n    if (con.getAutoCommit()) {\r\n      txObject.setMustRestoreAutoCommit(true);\r\n      if (logger.isDebugEnabled()) {\r\n        logger.debug(\"Switching JDBC Connection [\" + con + \"] to manual commit\");\r\n      }\r\n      con.setAutoCommit(false);\r\n    }\r\n\r\n    prepareTransactionalConnection(con, definition);\r\n    txObject.getConnectionHolder().setTransactionActive(true);\r\n\r\n    int timeout = determineTimeout(definition);\r\n    if (timeout != TransactionDefinition.TIMEOUT_DEFAULT) {\r\n      txObject.getConnectionHolder().setTimeoutInSeconds(timeout);\r\n    }\r\n\r\n    // Bind the connection holder to the thread.\r\n    if (txObject.isNewConnectionHolder()) {\r\n      TransactionSynchronizationManager.bindResource(obtainDataSource(), txObject.getConnectionHolder());\r\n    }\r\n  }\r\n\r\n  catch (Throwable ex) {\r\n    if (txObject.isNewConnectionHolder()) {\r\n      DataSourceUtils.releaseConnection(con, obtainDataSource());\r\n      txObject.setConnectionHolder(null, false);\r\n    }\r\n    throw new CannotCreateTransactionException(\"Could not open JDBC Connection for transaction\", ex);\r\n  }\r\n}\r\n```\r\n\r\nÏù¥ Î©îÏÑúÎìúÎäî Ï£ºÏñ¥ÏßÑ Ìä∏ÎûúÏû≠ÏÖò Ï†ïÏùòÏóêÎî∞Îùº ÏùòÎØ∏Ìïò  ÏÉàÎ°úÏö¥ Ìä∏ÎûúÏû≠ÏÖòÏùÑ ÏãúÏûëÌï®. Ïù¥ Ï∂îÏÉÅ Ìä∏ÎûúÏû≠ÏÖò Îß§ÎãàÏ†ÄÏóêÏùòÌï¥ Ïù¥ÎØ∏ Ï≤òÎ¶¨ÎêòÍ∏∞ ÎïåÎ¨∏Ïóê Ï†ÑÌååÎèôÏûëÏùÑ Ï†ÅÏö©ÌïòÎäîÍ≤ÉÏóê ÎåÄÌï¥ Í±±Ï†ïÌï† ÌïÑÏöîÏóÜÏùå.   \r\nÏù¥ Î©îÏÜåÎìúÎäî Ìä∏ÎûúÏû≠ÏÖò Îß§ÎãàÏ†ÄÍ∞Ä Ïã§Ï†úÎ°ú ÏÉàÎ°úÏö¥ Ìä∏ÎûúÏû≠ÏÖòÏùÑ ÏãúÏûëÌïòÍ∏∞Î°ú Í≤∞Ï†ïÌï†Îïå Ìò∏Ï∂úÌï®. Ïù¥Ï†Ñ Ìä∏ÎûúÏû≠ÏÖòÏù¥ ÏóÜÍ±∞ÎÇò, Ïù¥Ï†ÑÌä∏ÎûúÏû≠ÏÖòÏù¥ Ï§ëÎã®ÎêêÍ±∞ÎÇò ÎëòÏ§ë ÌïòÎÇòÏûÑ.\r\n\r\nÌäπÎ≥ÑÌïú Í≤ΩÏö∞Îäî ÏÑ∏Ïù¥Î∏å Ìè¨Ïù∏Ìä∏ ÏóÜÏù¥ Ï§ëÏ≤©Îêú Ìä∏ÎûúÏû≠ÏÖòÏûÑ. `useSavepointForNestedTransaction()`Ïù¥ \"false\"Î•º Î¶¨ÌÑ¥ ÌïúÎã§Î©¥, Ïù¥ Î©îÏÜåÎìúÎäî ÌïÑÏöîÌï†Îïå Ï§ëÏ≤©Îêú Ìä∏ÎûúÏû≠ÏÖòÏùÑ ÏãúÏûëÏùÑ Ìò∏Ï∂úÌï®. Í∑∏Îü∞ ÌùêÎ¶ÑÏóê, ÌôúÏÑ±Ìä∏ÎûúÏû≠ÏÖòÏù¥ ÏûàÏùå. (Ïù¥ Î©îÏÜåÎìúÏùò Íµ¨ÌòÑÏ≤¥Îäî Ïù¥Î•º Í∞êÏßÄÌïòÍ≥† Ï†ÅÏ†àÌïú Ï§ëÏ≤© Ìä∏ÎûúÏû≠ÏÖòÏùÑ ÏãúÏûëÌï¥ÏïºÌï®).\r\n\r\n### final commit(TransactionStatus status)\r\nÏù¥ Ïª§Î∞ã Íµ¨ÌòÑÏùÄ Í∏∞Ï°¥ Ìä∏ÎûúÏû≠ÏÖò Î∞è ÌîÑÎ°úÍ∑∏ÎûòÎ∞ç Î∞©Ïãù Î°§Î∞± ÏöîÏ≤≠Ïóê Ï∞∏Ïó¨ÌïòÎäî Í≤ÉÏùÑ Ï≤òÎ¶¨Ìï®. `isRollbackOnly`Î∞è `doCommit`Í∑∏Î¶¨Í≥† `rollback`Ïóê ÏúÑÏûÑÌï®.\r\n\r\n```java\r\n@Override\r\n\tpublic final void commit(TransactionStatus status) throws TransactionException {\r\n\t\tif (status.isCompleted()) {\r\n\t\t\tthrow new IllegalTransactionStateException(\r\n\t\t\t\t\t\"Transaction is already completed - do not call commit or rollback more than once per transaction\");\r\n\t\t}\r\n\r\n\t\tDefaultTransactionStatus defStatus = (DefaultTransactionStatus) status;\r\n\t\tif (defStatus.isLocalRollbackOnly()) {\r\n\t\t\tif (defStatus.isDebug()) {\r\n\t\t\t\tlogger.debug(\"Transactional code has requested rollback\");\r\n\t\t\t}\r\n\t\t\tprocessRollback(defStatus, false);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!shouldCommitOnGlobalRollbackOnly() && defStatus.isGlobalRollbackOnly()) {\r\n\t\t\tif (defStatus.isDebug()) {\r\n\t\t\t\tlogger.debug(\"Global transaction is marked as rollback-only but transactional code requested commit\");\r\n\t\t\t}\r\n\t\t\tprocessRollback(defStatus, true);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tprocessCommit(defStatus);\r\n\t}\r\n```\r\n"
  },
  {
    "path": "/docs/computer-science/computer-structure/hard-disk-1",
    "header": {
      "layout": "post",
      "title": "HDD(Hard Drive Disk)Îäî Ïñ¥ÎñªÍ≤å ÎèôÏûëÌïòÎäîÍ∞Ä",
      "tags": [
        "HDD",
        "Hard Drive Disk",
        "ÌïòÎìúÎîîÏä§ÌÅ¨",
        "Hardware",
        "ÌïòÎìúÏõ®Ïñ¥",
        "Ï†ÄÏû•Ïû•Ïπò",
        "Ïª¥Ìì®ÌÑ∞"
      ],
      "date": 1695125760000,
      "thumbnail": "/post/computer-science/hdd.png",
      "profile-image": "/post/profile/winkkom.png",
      "current-company": "NEOWIZ",
      "current-position": "Software Engineer",
      "summary": "ÌïòÎìúÎîîÏä§ÌÅ¨ÎûÄ Î¨¥ÏóáÏù¥Í≥†, Ïñ¥ÎñªÍ≤å ÎèôÏûëÌï†Íπå?",
      "excerpt-separator": "<!--more-->",
      "hide": true,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "Ïª¥Ìì®ÌÑ∞",
        "ÌïòÎìúÏõ®Ïñ¥"
      ],
      "images": [
        {
          "src": "/post/computer/hdd_consist_of.png",
          "alt": "ÌïòÎìúÎîîÏä§ÌÅ¨ Íµ¨ÏÑ±ÏöîÏÜåÏùò ÏÑ§Î™Ö"
        }
      ],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "ÌïòÎìúÎîîÏä§ÌÅ¨Ïùò Íµ¨ÏÑ±",
            "title": "ÌïòÎìúÎîîÏä§ÌÅ¨Ïùò Íµ¨ÏÑ±",
            "fragment": "root-0",
            "children": [
              {
                "rank": 3,
                "origin": "Head",
                "title": "Head",
                "fragment": "root-0-0",
                "children": []
              }
            ]
          }
        ]
      }
    },
    "description": "ÎåÄÌëúÏ†ÅÏù∏ Ï†ÄÏû•Ïû•Ïπò ÌïòÎìúÎîîÏä§ÌÅ¨Îäî Ïñ¥ÎñªÍ≤å ÎèôÏûëÌï†Íπå?\r\nÌïòÎìúÎîîÏä§ÌÅ¨Ïùò Íµ¨ÏÑ±Í≥º, ÎèôÏûëÏõêÎ¶¨Î•º ÌååÌï¥Ï≥êÎ≥¥Ïûê.",
    "content": "\r\n\r\n## ÌïòÎìúÎîîÏä§ÌÅ¨Ïùò Íµ¨ÏÑ±\r\n\r\n![ÌïòÎìúÎîîÏä§ÌÅ¨ Íµ¨ÏÑ±ÏöîÏÜåÏùò ÏÑ§Î™Ö](/post/computer/hdd_consist_of.png)\r\n\r\nÎ®ºÏ†Ä ÌïòÎìúÎîîÏä§ÌÅ¨Í∞Ä Ïñ¥Îñ§ Íµ¨ÏÑ±ÏúºÎ°ú Ïù¥Î£®Ïñ¥Ï†∏ÏûàÎäîÏßÄÎ•º ÏïåÍ∏∞Ï†ÑÏóê, ÎèôÏûëÍ≥ºÏ†ïÏùÑ Í∞ÑÎã®ÌïòÍ≤å ÏÇ¥Ìé¥Î≥¥Ïûê.\r\nÍ≥†Ï†ïÎêòÏñ¥ÏûàÎäî `Platter(ÌîåÎûòÌÑ∞)`Îäî `Spindle(Ïä§ÌïÄÎì§)`Ïóê ÏùòÌï¥ ÎèåÏïÑÍ∞ÄÎ©∞, Í∞ÄÍπùÍ≤å Î∂ôÏñ¥ÏûàÎäî `Head(Ìó§Îìú)`Í∞Ä `ÌîåÎûòÌÑ∞`Ïùò Ï†ÄÏû•Îêú Í∞íÏùÑ ÏùΩÎäîÎã§.\r\n\r\n### Head \r\n\r\n"
  },
  {
    "path": "/docs/electric/about-electron",
    "header": {
      "layout": "wiki",
      "title": "Ï†ÑÍ∏∞ÏóêÎÑàÏßÄÎ•º ÎßåÎìúÎäî Ï†ÑÏûê",
      "tags": [
        "ÏõêÏûê",
        "Ï†ÑÏûê",
        "ÏõêÏûêÌïµ",
        "Î†ôÌÜ§"
      ],
      "date": 1694348520000,
      "profile-image": "/post/profile/winkkom.png",
      "current-company": "NEOWIZ",
      "current-position": "Software Engineer",
      "summary": "Ï†ÑÏûêÎûÄ?",
      "excerpt-separator": "<!--more-->",
      "hide": true,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "electric"
      ],
      "images": [],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": []
      }
    },
    "description": "",
    "content": "\r\nÏ†ÑÏûêÎäî ÎåÄÎ∂ÄÎ∂ÑÏùò ÏõêÏûêÏóê Î™®Îëê Ï°¥Ïû¨ÌïúÎã§.\r\nÏõêÏûêÍ∞Ä Ï†ÑÍ∏∞Ï†ÅÏúºÎ°ú Ï§ëÏÑ±Ïù¥Î†§Î©¥, ÏùåÏ†ÑÌïòÎ•º ÎùÑÍ≥† ÏûàÎäî Ï†ÑÏûêÏôÄ, ÏñëÏ†ÑÌïòÎ•º ÎùÑÍ≥†ÏûàÎäî ÏñëÏÑ±ÏûêÏùò Í∞úÏàòÍ∞Ä ÎèôÏùºÌï¥Ïïº ÌïúÎã§.\r\nÎî∞ÎùºÏÑú, ÏûêÏó∞Ïóê Ï°¥Ïû¨ÌïòÎäî Î™®Îì† ÏõêÏÜåÎäî Ï†ÑÏûêÎ•º Í∞ñÍ≥†ÏûàÎã§Í≥† Î¥êÎèÑ ÎêúÎã§.\r\n\r\nÏ†ÑÏûêÎäî ÏñëÏ†ÑÌïòÏóêÏÑú ÏùåÏ†ÑÌïòÎ°ú Ïù¥ÎèôÌïòÍ≤å ÎêòÎäîÎç∞, Ïù¥Î•º Ïù¥Ïö©Ìï¥ Ï†ÑÍ∏∞ ÏóêÎÑàÏßÄÎ•º ÌùêÎ•¥Í≤å Ìï† Ïàò ÏûàÎã§.\r\n`(+)ÏñëÏ†ÑÌïò` ÏóêÏÑú `(-)ÏùåÏ†ÑÌïò`Ïùò Î∞©Ìñ•ÏúºÎ°ú Ï†ÑÏûêÍ∞Ä Ïù¥ÎèôÌïòÍ≤å ÎêòÎ©¥, Í∑∏ Î∞òÎåÄÎ∞©Ìñ•ÏúºÎ°ú Ï†ÑÍ∏∞Ïû•Ïù¥ ÎßåÎì§Ïñ¥ÏßÑÎã§.\r\nÏ†ÑÍ∏∞ÏóêÎÑàÏßÄÎäî Í∑∏ Ï†ÑÍ∏∞Ïû•ÏùÑ ÌÜµÏóê Ï†ÑÎã¨Ïù¥ ÎêúÎã§.  \r\n\r\n<!--more-->\r\n"
  },
  {
    "path": "/docs/electric/about-atom",
    "header": {
      "layout": "wiki",
      "title": "ÎßåÎ¨ºÏùÑ Ïù¥Î£®Îäî ÏõêÏûê",
      "tags": [
        "ÏõêÏûê",
        "Ï†ÑÏûê",
        "ÏõêÏûêÌïµ",
        "ÏñëÏÑ±Ïûê",
        "Ï§ëÏÑ±Ïûê",
        "Î∞òÎèÑÏ≤¥"
      ],
      "date": 1693486620000,
      "profile-image": "/post/profile/winkkom.png",
      "current-company": "NEOWIZ",
      "current-position": "Software Engineer",
      "summary": "ÏõêÏûêÎûÄ?",
      "excerpt-separator": "<!--more-->",
      "hide": true,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "electric"
      ],
      "images": [],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": []
      }
    },
    "description": "",
    "content": "\r\nÏõêÏûêÎäî Î™®Îì† Î¨ºÏßàÏùÑ Ïù¥Î£®Îäî Í∞ÄÏû• Í∏∞Î≥∏Ï†ÅÏù∏ ÏûÖÏûêÏù¥Îã§. \r\nÏõêÏûêÌïµÍ≥º Í∑∏ Ï£ºÎ≥ÄÏùÑ Ïù¥ÎèôÌïòÎäî Ï†ÑÏûêÎ°ú Íµ¨ÏÑ±ÎêòÏñ¥ÏûàÎã§. \r\nÏõêÏûêÌïµÏùÑ Íµ¨ÏÑ±ÌïòÎäî ÌïµÏûêÎäî ÏñëÏÑ±ÏûêÏôÄ Ï§ëÏÑ±ÏûêÍ∞Ä ÏûàÏúºÎ©∞, ÌôîÌïôÏ†Å ÎòêÎäî Î¨ºÎ¶¨Ï†Å Î∞©Î≤ïÏúºÎ°ú Î∂ÑÌï¥Ìï† Ïàò ÏóÜÎã§.\r\n\r\nÏùºÎ∞òÏ†ÅÏúºÎ°ú ÏõêÏûêÌïµÏùÑ ÏñëÏ†ÑÌïòÎ•º ÎùÑÍ≥†, Ï†ÑÏûêÎäî ÏùåÏ†ÑÌïòÎ•º ÎùàÎã§. \r\nÏõêÏûêÌïµÏóêÏÑú ÏñëÏÑ±ÏûêÍ∞Ä ÏñëÏ†ÑÌïòÎ•º ÎùÑÍ≤å ÎêòÎäîÎç∞,  Ìï¥Îãπ ÏñëÏ†ÑÌïòÏùò Í∞úÏàòÏôÄ Ï†ÑÏûêÏùò Í∞úÏàòÍ∞Ä Í∞ôÏùÑ Îïå Í∞ÄÏû• ÏïàÏ†ïÏ†ÅÏúºÎ°ú Ï†ÑÍ∏∞Ï†ÅÏù∏ Ï§ëÏÑ± ÏÉÅÌÉúÍ∞Ä ÎêúÎã§. \r\nÏ¶â, Ï†ÑÌïòÎ•º ÎùÑÏßÄ ÏïäÎäîÎã§. ÏñëÏÑ±ÏûêÎäî Î∞îÍøÄ Ïàò ÏóÜÏßÄÎßå, Ï†ÑÏûêÎäî Îã§Î•∏ ÏõêÏûêÎ°ú Ïù¥ÎèôÏãúÌÇ¨ Ïàò ÏûàÍ∏∞ ÎïåÎ¨∏Ïóê ÏñëÏ†ÑÌïòÏôÄ ÏùåÏ†ÑÌïòÏùò Í∞úÏàòÍ∞Ä Îã¨ÎùºÏßÄÍ≤å ÎêúÎã§.\r\n\r\nÏù¥Îïå, ÏñëÏ†ÑÌïòÏùò Í∞úÏàòÎ≥¥Îã§ ÏùåÏ†ÑÌïò(Ï†ÑÏûê)Ïùò Í∞úÏàòÍ∞Ä ÎßéÏúºÎ©¥ ÏùåÏù¥Ïò®, Ï†ÅÏúºÎ©¥ ÏñëÏù¥Ïò®Ïù¥ÎùºÍ≥† Ïπ≠ÌïòÍ∏∞ÎèÑ ÌïúÎã§. \r\nÏ†ÑÏûêÎäî ÏõêÏûêÌïµ Ï£ºÎ≥ÄÏùÑ ÎèåÍ≤å ÎêòÎäîÎç∞ Ïù¥Îïå Ïù¥Îèô ÏÜçÎèÑÎäî ÏïΩ 30Îßå km (ÏßÑÍ≥µ ÏÉÅÌÉúÏùò ÎπõÏùò ÏÜçÎèÑ)Ïù¥Îã§. \r\nÏ†ÑÏûêÍ∞Ä Ïù¥ÎèôÌïòÎäî Í∂§ÎèÑÎäî ÏñëÏûê Ïó≠ÌïôÏúºÎ°ú Ïù∏Ìï¥ ÏùºÏ†ïÌïòÏßÄ ÏïäÎã§Í≥† ÌïúÎã§. \r\nÏ†ÑÏûêÏùò Ïàò(ÎòêÎäî ÏñëÏÑ±ÏûêÏùò Ïàò)Ïóê Îî∞Îùº ÏõêÏûêÎ≤àÌò∏Í∞Ä Í≤∞Ï†ïÎêòÍ∏∞ ÎïåÎ¨∏Ïóê Ïö∞Î¶¨Í∞Ä Í≥ºÌïôÏ†ÅÏúºÎ°ú Ï†ïÏùòÌïòÎäî ÏõêÏÜåÍ∞Ä Í≥†Ïú†ÏÑ±ÏùÑ Í∞ÄÏßà Ïàò ÏûàÎäî Ïù¥Ïú†Ïù¥Í∏∞ÎèÑ ÌïòÎã§. \r\nÏñëÏÑ±ÏûêÎ•º ÎπÑÎ°ØÌïú ÌïµÏûêÏùò ÏàòÍ∞Ä Î∞îÎÄåÎäîÍ±¥ ÌïµÏúµÌï©Í≥º ÌïµÎ∂ÑÏó¥Ïù¥ ÎåÄÌëúÏ†ÅÏù¥Îã§.\r\n\r\nÏ†ÑÏûêÎäî ÏõêÏûêÌïµ Ï£ºÏúÑÎ•º ÎèåÎ©∞ , ÏõêÏûêÏùò Í∞ÄÏû• ÏïàÏ™Ω ÌïµÏûêÏùò Ï£ºÎ≥ÄÎ∂ÄÌÑ∞ ÏõêÏûêÏùò Î∞ñÏùò Î∞©Ìñ•ÏúºÎ°ú ÍªçÏßàÏ≤òÎüº Î∞∞ÏπòÎêú ÏúÑÏπòÏóêÏÑú Ïö¥ÎèôÌïúÎã§. \r\nÎòêÌïú ÏµúÎåÄÎ°ú Î∞∞ÏπòÎê† Ïàò ÏûàÎäî Ïù¥ Í∞úÏàòÎäî (ÏñëÏÑ±ÏûêÏùò Í∞úÏàòÏôÄ Í∞ôÏïÑÏïº ÌïòÍ∏∞ ÎïåÎ¨∏Ïóê) Ï†ïÌï¥Ï†∏ ÏûàÎã§.  \r\nÏ†ÑÏûêÎäî Ïô∏Î∂ÄÎ°úÎ∂ÄÌÑ∞ ÏóêÎÑàÏßÄÎ•º Í∞ÄÌïòÎ©¥, Í∞ÄÏû•ÏûêÎ¶¨Î∂ÄÌÑ∞ Îñ®Ïñ¥Ï†∏ ÎÇòÍ∞ÄÎ©∞, Î™®Îì† Ï†ÑÏûêÍ∞Ä Îñ®Ïñ¥Ï†∏ ÎÇòÍ∞Ä, ÏõêÏûêÌïµÎßå ÎÇ®ÏùÄ Í≤ΩÏö∞ ÌîåÎùºÏ¶àÎßàÎùºÍ≥† ÌïúÎã§.\r\n<!--more-->\r\n\r\n"
  },
  {
    "path": "/docs/tool/customize-markdown-it",
    "header": {
      "layout": "post",
      "title": "markdown-itÏùò Renderer Rule",
      "tags": [
        "markdown-it",
        "typescript"
      ],
      "date": 1689329820000,
      "thumbnail": "/post/tool/customize-markdown-it.webp",
      "current-company": "Herit Corporation",
      "current-position": "Backend Server Developer",
      "summary": "Markdown it Í∑úÏπô ÌååÌó§ÏπòÍ∏∞",
      "excerpt-separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÎùºÏù¥Î∏åÎü¨Î¶¨/ÎèÑÍµ¨"
      ],
      "images": [],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "Í∞úÏöî::overview",
            "title": "Í∞úÏöî",
            "fragment": "overview",
            "children": [
              {
                "rank": 3,
                "origin": "Ï†ÅÏö© Ï†Ñ::before-customize",
                "title": "Ï†ÅÏö© Ï†Ñ",
                "fragment": "before-customize",
                "children": []
              },
              {
                "rank": 3,
                "origin": "Ï†ÅÏö© ÌõÑ::after-customize",
                "title": "Ï†ÅÏö© ÌõÑ",
                "fragment": "after-customize",
                "children": []
              }
            ]
          },
          {
            "rank": 2,
            "origin": "Î∂ÑÏÑù::analysis",
            "title": "Î∂ÑÏÑù",
            "fragment": "analysis",
            "children": [
              {
                "rank": 3,
                "origin": "Render Rule (Í∑úÏπô)::renderer-rule",
                "title": "Render Rule (Í∑úÏπô)",
                "fragment": "renderer-rule",
                "children": []
              }
            ]
          },
          {
            "rank": 2,
            "origin": "ÌÖúÌîåÎ¶ø Í∑úÏπô Ï†ÅÏö©::apply-template-rule",
            "title": "ÌÖúÌîåÎ¶ø Í∑úÏπô Ï†ÅÏö©",
            "fragment": "apply-template-rule",
            "children": [
              {
                "rank": 3,
                "origin": "Í∑úÏπô ÏàòÏ†ï::modify-rule",
                "title": "Í∑úÏπô ÏàòÏ†ï",
                "fragment": "modify-rule",
                "children": []
              }
            ]
          }
        ]
      }
    },
    "description": "javascriptÏùò ÎßàÌÅ¨Îã§Ïö¥ ÌååÏÑúÏù∏ markdown-it ÎùºÏù¥Î∏åÎü¨Î¶¨Î•º Ïª§Ïä§ÌÖÄÌï¥ÏÑú ÏÇ¨Ïö©Ìï¥Î≥¥Ïûê.",
    "content": "\r\n\r\n## Í∞úÏöî::overview\r\n\r\n`markdown-it`ÏùÄ ÎåÄÏ§ëÏ†ÅÏúºÎ°ú ÎßéÏù¥ ÏïåÎ†§ÏßÑ javascript markdown parser libraryÏù¥Îã§.\r\n\r\nÏù¥Í∏ÄÏùÄ ÎßàÌÅ¨Îã§Ïö¥Ïù¥ Î¨¥Ïóá Ïù∏ÏßÄÏóê ÎåÄÌï¥ÏÑúÎäî ÏÑ§Î™ÖÌïòÏßÄ ÏïäÎäîÎã§. Í∑∏Ï†Ä Í∞úÏù∏ Î∏îÎ°úÍ∑∏Î•º ÏßÅÏ†ë ÎßåÎìúÎäî ÏûÖÏû•ÏóêÏÑú Í≥®ÏπòÎç©Ïù¥Ïù∏ ÎßàÌÅ¨Îã§Ïö¥ ÌååÏÑúÎ•º Ïñ¥ÎñªÍ≤åÌïòÎ©¥ Ï°∞Í∏àÎçî Ïú†Ïö©ÌïòÍ≤å Ïì∏Ïàò ÏûàÏùÑÍπå Í≥†ÎØºÌï¥Î≥¥Î©∞ ÎßåÎì§Î©¥ÏÑú ÏûëÏÑ±ÌïòÏòÄÎã§.\r\n\r\nÏòàÎ•º Îì§Ïñ¥ `> BlockQuote`Î•º ÏûëÏÑ±ÌïúÎã§Í≥† Í∞ÄÏ†ïÌñàÏùÑÎïå. Îã®ÏàúÌûà Î∏îÎü≠ÏúºÎ°ú Î¨∂Îäî Í≤ÉÎ≥¥Îã§ `> BlockQuote {{ \"type\": \"warning\" }}`Í≥º Í∞ôÏù¥ Ï∂îÍ∞ÄÏ†ÅÏù∏ ÌÖúÌîåÎ¶ø Íµ¨Î¨∏ÏùÑ Ï∂îÍ∞ÄÌïòÏó¨, Í≤ΩÍ≥† Ïä§ÌÉÄÏùºÏùò Î∏îÎü≠ÏúºÎ°ú Î≥¥Ïó¨ Ï§Ñ ÏàòÎèÑ ÏûàÏùÑ Í≤ÉÏù¥Îã§. Ïù¥Î•º ÌïòÍ∏∞ ÏúÑÌï¥ÏÑúÎäî Í∏∞Ï°¥ `markdown` Ìï¥ÏÑù ÌòïÏãùÏóêÏÑú Îçî ÎÇòÏïÑÍ∞Ä ÏÉàÎ°úÏö¥ ÌÖúÌîåÎ¶ø Ìï¥ÏÑù Î°úÏßÅÏùÑ Ï∂îÍ∞ÄÌï¥ÏïºÌïúÎã§. ÏïÑÎûò ÏΩîÎìúÎ•º Î≥¥Í≥† Ï¢Ä Îçî ÏâΩÍ≤å Ïù¥Ìï¥Ìï¥Î≥¥Ïûê.\r\n\r\n\r\n\r\n### Ï†ÅÏö© Ï†Ñ::before-customize\r\n\r\n*Markdown*\r\n\r\n```markdown\r\n> Ï§ÄÎπÑÏö¥ÎèôÏùÑ ÌïòÏßÄ ÏïäÍ≥† Î¨ºÏóê Îì§Ïñ¥Í∞ÑÎã§Î©¥, Îã§Î¶¨Ïóê Ï•êÍ∞Ä ÎÇ† Ïàò ÏûàÎã§.\r\n```\r\n\r\n*HTML*\r\n\r\n```html\r\n<blockquote>\r\n  Ï§ÄÎπÑÏö¥ÎèôÏùÑ ÌïòÏßÄ ÏïäÍ≥† Î¨ºÏóê Îì§Ïñ¥Í∞ÑÎã§Î©¥, Îã§Î¶¨Ïóê Ï•êÍ∞Ä ÎÇ† Ïàò ÏûàÎã§.\r\n</blockquote>\r\n```\r\n\r\n\r\n\r\n### Ï†ÅÏö© ÌõÑ::after-customize\r\n\r\n*Markdown*\r\n\r\n```markdown\r\n> Ï§ÄÎπÑÏö¥ÎèôÏùÑ ÌïòÏßÄ ÏïäÍ≥† Î¨ºÏóê Îì§Ïñ¥Í∞ÑÎã§Î©¥, Îã§Î¶¨Ïóê Ï•êÍ∞Ä ÎÇ† Ïàò ÏûàÎã§.\r\n:{ \"type\": \"warning\" }\r\n```\r\n\r\n*HTML*\r\n\r\n```html\r\n<blockquote class=\"warning\">\r\n  <p>Ï§ÄÎπÑÏö¥ÎèôÏùÑ ÌïòÏßÄ ÏïäÍ≥† Î¨ºÏóê Îì§Ïñ¥Í∞ÑÎã§Î©¥, Îã§Î¶¨Ïóê Ï•êÍ∞Ä ÎÇ† Ïàò ÏûàÎã§.</p>\r\n</blockquote>\r\n```\r\n\r\nÏù¥Îäî Îçî ÎßéÏùÄ Ï†ïÎ≥¥Î•º Îã¥ÏùÑÏàò ÏûàÏúºÎ©∞, ÎèôÏãúÏóê Ï∂îÍ∞ÄÏ†ÅÏù∏ Ïä§ÌÉÄÏùºÎ°ú ÏãúÍ∞ÅÏ†ÅÏù∏ Ìö®Í≥ºÎ•º Ï£ºÏñ¥, Îçî ÎÇòÏùÄ Í∞ÄÎèÖÏÑ±ÏùÑ ÎßåÎì§ Ïàò ÏûàÎã§.\r\n\r\nÎ¨ºÎ°† Ïù¥Î†áÍ≤å ÎßåÎìúÎ†§Î©¥ ÏÇ¨Ïö©ÌïòÎ†§Îäî markdown Íµ¨Î¨∏ÎßàÎã§ Î™®Îëê Í∑úÏπôÏùÑ ÎßåÎì§Ïñ¥ Ï§òÏïºÌïúÎã§.\r\n\r\n`Markdown-it` Í∞ôÏùÄ Í≤ΩÏö∞ ÎßéÏùÄ ÏÇ¨ÎûåÎì§Ïù¥ Î∏îÎ°úÍ∑∏ Ï†úÏûëÏãú ÏÇ¨Ïö©ÌïòÏßÄÎßå, Ïã§Ï†úÎ°ú Ïª§Ïä§ÌÖÄÌï† Ïàò ÏûàÎäî `Renderer Rule(ÎûúÎçîÎßÅÏùÑ ÌïòÍ∏∞ ÏúÑÌïú Í∑úÏπô)` Í∞ôÏùÄ Í∏∞Îä•ÏùÄ ÏÇ¨Ïö©ÌïòÏßÄ ÏïäÎäîÎã§. ÏÇ¨Ïã§ Ïûò ÏïåÎ†§Ï†∏ ÏûàÏßÄÎèÑ ÏïäÍ∏∞ ÎïåÎ¨∏Ïóê, ÎßéÏù¥ ÏÇ¨Ïö©ÌïòÏßÄ ÏïäÎäîÍ≤É Ïùº Ïàò ÏûàÎã§.  ÏûêÏã†Ïùò Î∏îÎ°úÍ∑∏Î•º ÎåÄÏ∂© Íæ∏ÎØ∏Í≥† Ïã∂ÏùÄ ÏÇ¨ÎûåÏùÄ ÏóÜÏùÑÌÖåÎãà Ïù¥Îü∞ Î∞©ÏãùÏùÑ ÏïåÎ†§ Ï°∞Í∏àÏù¥ÎùºÎèÑ ÏâΩÍ≤å Ïù¥Ìï¥Î•º ÎèïÍ≥†, ÎÇò ÎòêÌïú Ï†ïÎ¶¨Î•º ÌïòÎ©∞ Îã§ÏãúÌïúÎ≤à Ï†ïÎ¶ΩÌïòÍ≥† Ïã∂Îã§.\r\n\r\n\r\n\r\n## Î∂ÑÏÑù::analysis\r\n\r\n### Render Rule (Í∑úÏπô)::renderer-rule\r\n\r\n`Renderer Rule(Ïù¥Ìïò *Í∑úÏπô)` Í∞ôÏùÄ Í≤ΩÏö∞Îäî `Markdown-it`ÏóêÏÑú Ï†úÍ≥µÌïòÎäî ÎÇ¥Î∂ÄÏ†ÅÏù∏ Í∑úÏπôÏùò ÌùêÎ¶ÑÏù¥Îã§.\r\n\r\n```typescript\r\nimport MarkdownIt from 'mardown-it';\r\n\r\nconst markdown = new MarkdownIt();\r\nconsole.log('rules: ', Object.keys(markdown.renderer.rules));\r\n// Output\r\n// rules: ['code_inline', 'code_block', 'fence', 'image', 'hardbreak', 'softbreak', 'text', 'html_block', 'html_inline']\r\n```\r\n\r\nÏúÑÎäî Í∏∞Î≥∏Ï†ÅÏúºÎ°ú Ï†úÍ≥µÌïòÎäî Í∑úÏπôÏù¥Î©∞, ÎåÄÎûµÏ†ÅÏúºÎ°ú 9Í∞úÎ°ú Î≥º Ïàò ÏûàÎã§. Ïù¥ Î∞∞Ïó¥Ïóê Î™ÖÏãúÏ†ÅÏúºÎ°ú ÏûàÏßÄ ÏïäÏùÄ ÏöîÏÜåÎäî Í∏∞Î≥∏Í∑úÏπôÏù¥ Ï†ÅÏö© ÎêúÎã§. ÏòàÎ•º Îì§Ïñ¥ `bullet_list_opend` Í∑úÏπôÏù¥ Ï†ïÏùò ÎêòÏñ¥ ÏûàÏßÄ ÏïäÏïòÏúºÎØÄÎ°ú, `markdown-it`ÏùÄ `HTML`Î°ú Ìï¥ÏÑùÏùÑ ÏãúÎèÑÌï† Îïå, `Renderer.prototype.renderToken`Ïù¥ÎùºÎäî ÏùºÎ∞ò Î†åÎçîÎü¨Í∞Ä ÏÇ¨Ïö©ÎêúÎã§.\r\n\r\n\r\n\r\nÏÉàÎ°úÏö¥ ÎßàÌÅ¨Îã§Ïö¥ Î¨∏Î≤ïÏùÑ Ï∞ΩÏãúÌïòÏßÄ ÏïäÎäîÌïú, ÏïÑÎßà Í∏∞Ï°¥ Î¨∏Î≤ïÏóêÏÑú Ï°∞Í∏à ÏàòÏ†ïÌïòÎäî Ï†ïÎèÑ Ïùº Í≤ÉÏù¥Îã§.\r\n\r\nÎî∞ÎùºÏÑú ÎßåÏïΩ `blockquote_open`Ïù¥ÎùºÎäî Í∑úÏπôÏùÑ ÏàòÏ†ïÌïúÎã§Í≥†ÌïòÎ©¥ ÏïÑÎûòÏôÄ Í∞ôÏù¥ Ìï†Ïàò ÏûàÎã§.\r\n\r\n```typescript\r\nimport MarkdownIt from \"markdown-it\";\r\nimport Token from \"markdown-it/lib/token\";\r\nimport Renderer from \"markdown-it/lib/renderer\";\r\n\r\nconst md = new MarkdownIt();\r\nmd.renderer.rules.blockquote_open = (tokens: Array<Token>, index: number, options: MarkdownIt.Options, env: any, self: Renderer): string => {\r\n\r\n  return '';\r\n}\r\n```\r\n\r\nÏúÑÏóêÏÑú Î∞õÏïÑÏò§Îäî Í∑úÏπô Ìï®ÏàòÍ∞ôÏùÄ Í≤ΩÏö∞ ÏïÑÎûòÏôÄ Í∞ôÏù¥ ÌÉÄÏûÖÏúºÎ°ú Ï†ïÏùò ÎêòÏñ¥ÏûàÎã§.\r\n\r\n```typescript\r\ndeclare namespace Renderer {\r\n    type RenderRule = (tokens: Token[], idx: number, options: MarkdownIt.Options, env: any, self: Renderer) => string;\r\n\r\n    interface RenderRuleRecord {\r\n        [type: string]: RenderRule | undefined;\r\n        code_inline?: RenderRule | undefined;\r\n        code_block?: RenderRule | undefined;\r\n        fence?: RenderRule | undefined;\r\n        image?: RenderRule | undefined;\r\n        hardbreak?: RenderRule | undefined;\r\n        softbreak?: RenderRule | undefined;\r\n        text?: RenderRule | undefined;\r\n        html_block?: RenderRule | undefined;\r\n        html_inline?: RenderRule | undefined;\r\n    }\r\n}\r\n```\r\n\r\n| Ïù∏Ïûê      | ÏùòÎØ∏                                         |\r\n| --------- | -------------------------------------------- |\r\n| *tokens*  | Ìï¥ÏÑùÎêòÎäî Î™®Îì† ÌÜ†ÌÅ∞ Î™©Î°ù (Í∞Å ÌÉúÍ∑∏ÏóêÎåÄÌïú ÌÜ†ÌÅ∞) |\r\n| *index*   | ÌòÑÏû¨ ÌÜ†ÌÅ∞Ïùò ÌÇ§Ïóê Ìï¥ÎãπÌïòÎäî Ïù∏Îç±Ïä§             |\r\n| *options* | `markdown-it`Í∞ùÏ≤¥Í∞Ä ÏÉùÏÑ±Îê† Îïå, Ï†ïÏùòÎêú ÏòµÏÖò   |\r\n| *env*     | ???                                          |\r\n| *self*    | Î†åÎçîÎü¨ ÏûêÏ≤¥ÏóêÎåÄÌïú Ï∞∏Ï°∞                       |\r\n\r\nÍ∑úÏπôÏùÑ ÏàòÏ†ïÌï† Îïå, Ïã§Ìå®ÌïúÎã§Î©¥ Í∏∞Ï°¥ Í∑úÏπôÏúºÎ°ú `fallback` ÏãúÏºúÏ§ÑÏàò ÏûàÎäî Î°úÏßÅÎèÑ Ï∂îÍ∞ÄÌïúÎã§Î©¥ ÏïÑÎûòÏôÄ Í∞ôÎã§.\r\n\r\n```typescript\r\nimport MarkdownIt from \"markdown-it\";\r\nimport Token from \"markdown-it/lib/token\";\r\nimport Renderer from \"markdown-it/lib/renderer\";\r\n\r\nconst md = new MarkdownIt();\r\nconst proxy = (tokens: Array<Token>, index: number, options: MarkdownIt.Options, env: any, self: Renderer) => self.renderToken(tokens, index, options);\r\n//Í∏∞Î≥∏ fallback Í∑úÏπô\r\nconst defaultBlockquoteOpenRule = md.renderer.rules.blockquote_open || proxy;\r\n\r\nmd.renderer.rules.blockquote_open = (tokens: Array<Token>, index: number, options: MarkdownIt.Options, env: any, self: Renderer): string => {\r\n  return defaultBlockquoteOpenRule(tokens, index, options, env, self);\r\n}\r\n\r\nconst markdownText = 'Îú®Í±∞Ïö¥ ÌÉúÏñëÏïÑÎûò ÏãúÏõêÌïú Í≥ÑÍ≥°Î¨ºÏóê Ïû†Ïàò!\\n> Ï§ÄÎπÑÏö¥ÎèôÏùÑ ÌïòÏßÄ ÏïäÍ≥† Î¨ºÏóê Îì§Ïñ¥Í∞ÑÎã§Î©¥, Îã§Î¶¨Ïóê Ï•êÍ∞Ä ÎÇ† Ïàò ÏûàÎã§.';\r\n//HTML Î†åÎçîÎßÅ\r\nconst html = md.render(markdownText);\r\n/* html \r\n<p>Îú®Í±∞Ïö¥ ÌÉúÏñëÏïÑÎûò ÏãúÏõêÌïú Í≥ÑÍ≥°Î¨ºÏóê Ïû†Ïàò!</p>\r\n<blockquote>\r\n\t<p>Ï§ÄÎπÑÏö¥ÎèôÏùÑ ÌïòÏßÄ ÏïäÍ≥† Î¨ºÏóê Îì§Ïñ¥Í∞ÑÎã§Î©¥, Îã§Î¶¨Ïóê Ï•êÍ∞Ä ÎÇ† Ïàò ÏûàÎã§.</p>\r\n</blockquote>\r\n*/\r\n```\r\n\r\n*tokens*  Ïù∏ÏûêÎ•º Ï∂úÎ†•Ìï¥Î≥¥Î©¥ Îã§ÏùåÍ≥º Í∞ôÎã§.\r\n\r\n```\r\n[\r\n\t{ \"type\": \"paragraph_open\", \"tag\": \"p\" ...},\r\n\t{ \"type\": \"inline\" \"tag\": '' ...},\r\n\t{ \"type\": \"paragraph_close\", \"tag\": \"p\" ...},\r\n\t{ \"type\": \"blockquote_open\", \"tag\": \"blockquote\" ...},\r\n\t{ \"type\": \"paragraph_open\", \"tag\": \"p\" ...},\r\n\t{ \"type\": \"inline\", \"tag\": '' ...},\r\n\t{ \"type\": \"paragragh_close\", \"tag\": 'p' ...},\r\n\t{ \"type\": \"blockquote_close\", \"tag\": \"blockquote\" ...}\r\n]\r\n```\r\n\r\nÏñ¥Îñ§ Ìå®ÌÑ¥Ïù¥ Î≥¥Ïù∏Îã§. Í∑∏Î†áÎã§. `tokens`Îäî ÏúÑÏóêÏÑúÎ∂ÄÌÑ∞ ÏàúÏÑúÎåÄÎ°ú html ÏùÑ ÎûúÎçîÎßÅÌï† Ï†ïÎ≥¥Î•º Í∞ÄÏßÄÍ≥† ÏûàÎã§.\r\n\r\nÎûúÎçîÎßÅ Îêú `HTML`Í≥º ÎπÑÍµêÌïòÎ©¥ ÏßÅÍ¥ÄÏ†ÅÏúºÎ°ú Ïïå Ïàò ÏûàÎã§.\r\n\r\n```html\r\n<!-- paragraph_open, inline, paragraph_close -->\r\n<p>Îú®Í±∞Ïö¥ ÌÉúÏñëÏïÑÎûò ÏãúÏõêÌïú Í≥ÑÍ≥°Î¨ºÏóê Ïû†Ïàò!</p>\r\n<!-- blockquote_open, paragraph_open, inline, paragragh_close, blockquote_close -->\r\n<blockquote>\r\n\t<p>Ï§ÄÎπÑÏö¥ÎèôÏùÑ ÌïòÏßÄ ÏïäÍ≥† Î¨ºÏóê Îì§Ïñ¥Í∞ÑÎã§Î©¥, Îã§Î¶¨Ïóê Ï•êÍ∞Ä ÎÇ† Ïàò ÏûàÎã§.</p>\r\n</blockquote>\r\n```\r\n\r\n\r\n\r\nÏúÑÏôÄ Í∞ôÏù¥ Í∑úÏπôÏùÄ ÎûúÎçîÎßÅ ÎêòÏñ¥ÏïºÌï† ÏàúÏÑúÎåÄÎ°ú ÏÉùÏÑ±ÎêòÍ∏∞ ÎïåÎ¨∏Ïóê, Ïù¥ÎØ∏ ÎûúÎçîÎßÅ Îêú ÌÜ†ÌÅ∞ÏùÑ ÏàòÏ†ïÌï†Ïàò ÏóÜÎã§.\r\n\r\n```html\r\n<blockquote>\r\n\t<p>Ï§ÄÎπÑÏö¥ÎèôÏùÑ ÌïòÏßÄ ÏïäÍ≥† Î¨ºÏóê Îì§Ïñ¥Í∞ÑÎã§Î©¥, Îã§Î¶¨Ïóê Ï•êÍ∞Ä ÎÇ† Ïàò ÏûàÎã§.</p>\r\n</blockquote>\r\n```\r\n\r\nÏù¥Îü∞ ÏΩîÎìúÎ•º Î≥¥Î©¥ ÏàúÏÑúÎ°ú Î¥§ÏùÑ Îïå [`blockquote_open` ,`paragraph_open`, `inline`, `paragragh_close`, `blockquote_close`] Î°ú ÏßÑÌñâÎêúÎã§.\r\n\r\nÎßåÏïΩ ÎÇ¥Í∞Ä `blockquote` ÌÉúÍ∑∏Ïóê `class=\"waring\"` Ïù¥ÎùºÎäî ÏÜçÏÑ±ÏùÑ Ï∂îÍ∞Ä Ìï¥Ï£ºÍ≥† Ïã∂Îã§Î©¥. Ïù¥ Ï†ïÎ≥¥Î•º Ï†ÑÎã¨Ìï¥ÏïºÌïúÎã§.\r\n\r\n```markdown\r\n> Ï§ÄÎπÑÏö¥ÎèôÏùÑ ÌïòÏßÄ ÏïäÍ≥† Î¨ºÏóê Îì§Ïñ¥Í∞ÑÎã§Î©¥, Îã§Î¶¨Ïóê Ï•êÍ∞Ä ÎÇ† Ïàò ÏûàÎã§.\r\n> ÎòêÎäî Ïã¨Ïû•ÎßàÎπÑÍ∞Ä Ïò¨ÏàòÎèÑ ÏûàÎã§.\r\n:{ \"type\": \"warning\" }\r\n```\r\n\r\nÏù¥Îü∞ ÎßàÌÅ¨Îã§Ïö¥Ïù¥ ÏûàÏùÑÎïå Î≥ÑÎã§Î•∏ Ï≤òÎ¶¨Í∞Ä ÏóÜÎã§Î©¥ ÏïÑÎûòÏôÄ Í∞ôÏù¥ Ï†ÑÎã¨ÌïòÎäî ÏÜçÏÑ±Ï†ïÎ≥¥Í∞Ä Í∑∏ÎåÄÎ°ú Ï†ÑÎã¨ÎêòÏñ¥ Ï∂úÎ†•Îê† Í≤ÉÏù¥Îã§.\r\n\r\n```markdown\r\n<blockquote>\r\n\t<p>Ï§ÄÎπÑÏö¥ÎèôÏùÑ ÌïòÏßÄ ÏïäÍ≥† Î¨ºÏóê Îì§Ïñ¥Í∞ÑÎã§Î©¥, Îã§Î¶¨Ïóê Ï•êÍ∞Ä ÎÇ† Ïàò ÏûàÎã§. ÎòêÎäî Ïã¨Ïû•ÎßàÎπÑÍ∞Ä Ïò¨ÏàòÎèÑ ÏûàÎã§. :{ \"type\": \"warning\" }</p>\r\n</blockquote>\r\n```\r\n\r\nÎî∞ÎùºÏÑú `inline` ÌÜ†ÌÅ∞ÏóêÏÑú \"warning\" Í∞íÏùÑ Ï∂îÏ∂úÌï¥ÏÑú `blockquote` ÌÜ†ÌÅ∞Ïóê `class` ÏÜçÏÑ±ÏúºÎ°ú Ï∂îÍ∞ÄÌï¥Ï§òÏïºÌïúÎã§. ÎòêÌïú `inline` ÌÜ†ÌÅ∞ÏóêÎäî Ïã§Ï†ú ÎÖ∏Ï∂úÏù¥ ÌïÑÏöîÌïú Î¨∏ÏûêÏó¥Ïù∏ `Ï§ÄÎπÑÏö¥ÎèôÏùÑ ÌïòÏßÄ ÏïäÍ≥† Î¨ºÏóê Îì§Ïñ¥Í∞ÑÎã§Î©¥, Îã§Î¶¨Ïóê Ï•êÍ∞Ä ÎÇ† Ïàò ÏûàÎã§. ÎòêÎäî Ïã¨Ïû•ÎßàÎπÑÍ∞Ä Ïò¨ÏàòÎèÑ ÏûàÎã§.`Îßå ÏïÑÎûòÏôÄ Í∞ôÏù¥ ÎÇ®ÏïÑÏïºÌïúÎã§.\r\n\r\n```markdown\r\n<blockquote class=\"warning\">\r\n\t<p>Ï§ÄÎπÑÏö¥ÎèôÏùÑ ÌïòÏßÄ ÏïäÍ≥† Î¨ºÏóê Îì§Ïñ¥Í∞ÑÎã§Î©¥, Îã§Î¶¨Ïóê Ï•êÍ∞Ä ÎÇ† Ïàò ÏûàÎã§. ÎòêÎäî Ïã¨Ïû•ÎßàÎπÑÍ∞Ä Ïò¨ÏàòÎèÑ ÏûàÎã§.<p>\r\n</bloackquote>\r\n```\r\n\r\n\r\n\r\nÏúÑÏóêÏÑú Ïù¥ÎØ∏ ÎûúÎçîÎßÅÎêú ÌÜ†ÌÅ∞ÏùÄ ÏàòÏ†ïÌï† Ïàò ÏóÜÎã§Í≥† ÌñàÎã§. Í∑∏ ÎßêÏùÄ ÌòÑÏû¨ ÏÉÅÌô©ÏóêÏÑú Î≥¥Î©¥ [`blockquote_open` ,`paragraph_open`, `inline`, `paragragh_close`, `blockquote_close`]  ÏàúÏÑúÎ°ú ÏßÑÌñâÎê†Îïå `inline`ÌÜ†ÌÅ∞ÏóêÏÑú `blockquote_open` ÌÜ†ÌÅ∞Ïóê `class` ÏÜçÏÑ±ÏùÑ Ï£ºÏûÖÌï¥ÎèÑ Ïù¥ÎØ∏ ÎûúÎçîÎßÅÎêú `blockquote_open` ÌÜ†ÌÅ∞ÏóêÎäî Ï†ÅÏö©Ïù¥ ÏïàÎêúÎã§Îäî ÎßêÏù¥Îã§. Îî∞ÎùºÏÑú `blockquote_open` ÏóêÏÑú Îí§Ïóê ÎûúÎçîÎßÅÎê† `inline` ÌÜ†ÌÅ∞ÏùÑ ÏàòÏ†ïÌï¥Ïïº Ï†ïÏÉÅÏ†ÅÏúºÎ°ú ÎÖ∏Ï∂úÎê† Ïàò ÏûàÎã§.\r\n\r\n## ÌÖúÌîåÎ¶ø Í∑úÏπô Ï†ÅÏö©::apply-template-rule\r\n\r\n\r\n\r\n### Í∑úÏπô ÏàòÏ†ï::modify-rule\r\n\r\n```typescript\r\nimport MarkdownIt from \"markdown-it\";\r\nimport Token from \"markdown-it/lib/token\";\r\nimport Renderer from \"markdown-it/lib/renderer\";\r\n\r\nconst md = new MarkdownIt();\r\nconst proxy = (tokens: Array<Token>, index: number, options: MarkdownIt.Options, env: any, self: Renderer) => self.renderToken(tokens, index, options);\r\n//Í∏∞Î≥∏ fallback Í∑úÏπô\r\nconst defaultBlockquoteOpenRule = md.renderer.rules.blockquote_open || proxy;\r\n\r\nmd.renderer.rules.blockquote_open = (tokens: Array<Token>, index: number, options: MarkdownIt.Options, env: any, self: Renderer): string => {\r\n  try {\r\n    const templateRE = /^([\\s\\S]*?)\\s*:\\s*(\\{[\\s\\S]*\\})\\s*$/mg;\r\n    const inlineIndex = index +2;\r\n\r\n    if (inlineIndex >= tokens.length) throw new Error(`Index out of range from tokens: ${inlineIndex}`);\r\n    const inline = tokens[inlineIndex];\r\n    const content = inline.content;\r\n    const noneMatch = !templateRE.test(content);\r\n    templateRE.lastIndex = 0;\r\n    if (!inline.map || noneMatch) {\r\n      return defaultBlockquoteOpen(tokens, index, options, env, self);\r\n    }\r\n    /*\r\n    * Ï§ÄÎπÑÏö¥ÎèôÏùÑ ÌïòÏßÄ ÏïäÍ≥† Î¨ºÏóê Îì§Ïñ¥Í∞ÑÎã§Î©¥, Îã§Î¶¨Ïóê Ï•êÍ∞Ä ÎÇ† Ïàò ÏûàÎã§. ÎëêÎ≤àÏß∏ Ï§ÑÏù¥ÏßÄ! - executed[1]\r\n    * :{ \"type\": \"warning\" } - executed[2]\r\n    */\r\n    const executed = templateRE.exec(content);\r\n    const text = executed?.[1] ?? '';\r\n    const attributesStr = executed?.[2];\r\n    const attributes = JSON.parse(attributesStr ?? '{}');\r\n    //type = \"warning\"\r\n    const type = attributes['type'];\r\n\r\n\t\t//childrenÏùÄ inlineÎÇ¥Î∂ÄÏóêÏÑú ÎûúÎçîÎßÅÎê† ÏûêÏãù ÌÜ†ÌÅ∞Îì§Ïùò Î™©Î°ùÏù¥Îã§.\r\n    //Ïó¨Í∏∞ÏÑú sliceÎäî textÍ∞í Îí§Ïóê ÌÖúÌîåÎ¶øÏùÄ ÌïÑÏöîÏóÜÍ∏∞ ÎïåÎ¨∏Ïóê Ï†úÍ±∞Ìï¥Ï£ºÍ∏∞ ÏúÑÌï®Ïù¥Îã§.\r\n    const lfCount = countNewline(text);\r\n    const lineCount = lfCount +1;\r\n    inline.children = inline.children?.slice(0, lfCount + lineCount) ?? inline.children;\r\n    inline.content = text ?? inline.content;\r\n\r\n    //ÌòÑÏû¨ ÌÜ†ÌÅ∞Ïóê class ÏÜçÏÑ±ÏùÑ Î∂ÄÏó¨ÌïúÎã§.\r\n    const blockquoteOpen = tokens[index];\r\n    if (type) {\r\n      blockquoteOpen.attrJoin('class', type);\r\n    }\r\n\r\n    return defaultBlockquoteOpen(tokens, index, options, env, self);\r\n  } catch (e: Error) {\r\n    console.error(`Error occurred at parsing token: \"${e.message}\"`);\r\n    return '';\r\n  }\r\n}\r\n```\r\n\r\n---\r\n\r\n`:{ \"type\" : \"warning\" }` ÌÖúÌîåÎ¶øÏùÄ Î≠îÍ∞Ä Í∏âÏ°∞Ìï¥ÏÑú ÎßåÎì§Ïñ¥ÏÑú ÎßåÎì§ÏóàÍ∏∞ ÎïåÎ¨∏Ïóê ÏûêÏã†ÎßåÏùò ÌÖúÌîåÎ¶øÏùÑ ÎßåÎì§Ïñ¥ Îçî ÎÇòÏùÄ parserÎ•º Íµ¨ÌòÑÌï† Ïàò ÏûàÏùÑÎìØ ÌïòÎã§.\r\n\r\nÏÇ¨Ïã§ Í∏∞Ï°¥ÏóêÎèÑ `chirpy` Í∞ôÏùÄ Jekyll ÌÖåÎßà Í∞ôÏùÄ Í≤ΩÏö∞ÏóêÎäî Ïª§Ïä§ÌÖÄ ÌÖúÌîåÎ¶øÏùÑ ÎßåÎì§Ïñ¥ Í≥µÏú†ÎêòÍ≥† ÏûàÏóàÎã§.\r\n\r\n"
  },
  {
    "path": "/docs/language/typescript/typescript-getting-start",
    "header": {
      "layout": "post",
      "title": "ÌÉÄÏûÖÏä§ÌÅ¨Î¶ΩÌä∏ ÏãúÏûëÌïòÍ∏∞ 1 (ÏÜåÍ∞ú)",
      "tags": [
        "Typescript",
        "Javascript",
        "Type"
      ],
      "date": 1681552860000,
      "current-company": "NEOWIZ",
      "current-position": "Software Engineer",
      "profile-image": "/post/profile/profile1.jpg",
      "thumbnail": "/post/typescript/typescript_getting_start.png",
      "summary": "ÌÉÄÏûÖÏä§ÌÅ¨Î¶ΩÌä∏ ÏÜåÍ∞ú",
      "excerpt-separator": "<!--more-->",
      "hide": true,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "Ïñ∏Ïñ¥",
        "ÌÉÄÏûÖÏä§ÌÅ¨Î¶ΩÌä∏"
      ],
      "images": [],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "Ïö∞Î¶¨Í∞Ä ÏïÑÎäî ÏûêÎ∞îÏä§ÌÅ¨Î¶ΩÌä∏",
            "title": "Ïö∞Î¶¨Í∞Ä ÏïÑÎäî ÏûêÎ∞îÏä§ÌÅ¨Î¶ΩÌä∏",
            "fragment": "root-0",
            "children": []
          },
          {
            "rank": 2,
            "origin": "ÌÉÄÏûÖÏä§ÌÅ¨Î¶ΩÌä∏Îäî Î¨¥ÏóáÏù∏Í∞Ä?",
            "title": "ÌÉÄÏûÖÏä§ÌÅ¨Î¶ΩÌä∏Îäî Î¨¥ÏóáÏù∏Í∞Ä?",
            "fragment": "root-1",
            "children": []
          },
          {
            "rank": 2,
            "origin": "ÌÉÄÏûÖÏä§ÌÅ¨Î¶ΩÌä∏Î•º Î∞∞Ïö∞Í∏∞Ï†Ñ ES5 ÎòêÎäî ESNextÏùò Ï£ºÏöî Î¨∏Î≤ïÏùÑ ÏïåÏïÑÎ≥¥Ïûê",
            "title": "ÌÉÄÏûÖÏä§ÌÅ¨Î¶ΩÌä∏Î•º Î∞∞Ïö∞Í∏∞Ï†Ñ ES5 ÎòêÎäî ESNextÏùò Ï£ºÏöî Î¨∏Î≤ïÏùÑ ÏïåÏïÑÎ≥¥Ïûê",
            "fragment": "root-2",
            "children": [
              {
                "rank": 3,
                "origin": "ÎπÑÍµ¨Ï°∞Ìôî Ìï†Îãπ",
                "title": "ÎπÑÍµ¨Ï°∞Ìôî Ìï†Îãπ",
                "fragment": "root-2-0",
                "children": []
              },
              {
                "rank": 3,
                "origin": "ÌôîÏÇ¥Ìëú Ìï®Ïàò (arrow function)",
                "title": "ÌôîÏÇ¥Ìëú Ìï®Ïàò (arrow function)",
                "fragment": "root-2-1",
                "children": []
              },
              {
                "rank": 3,
                "origin": "ÌÅ¥ÎûòÏä§ (class)",
                "title": "ÌÅ¥ÎûòÏä§ (class)",
                "fragment": "root-2-2",
                "children": []
              }
            ]
          }
        ]
      }
    },
    "description": "ÌÉÄÏûÖÏä§ÌÅ¨Î¶ΩÌä∏ ÏãúÏûëÌïòÍ∏∞.\r\nÎèÑÎåÄÏ≤¥ Ïôú ÏÇ¨Ïö©ÌïòÎäîÍ±∞Í≥†, Î≠êÍ∞Ä Ï¢ãÏùÄÍ±∏Íπå?",
    "content": "\r\n\r\n## Ïö∞Î¶¨Í∞Ä ÏïÑÎäî ÏûêÎ∞îÏä§ÌÅ¨Î¶ΩÌä∏\r\n\r\nÏÇ¨Ïã§ ÎÇòÎèÑ ÌÉÄÏûÖÏä§ÌÅ¨Î¶ΩÌä∏Î•º Ï≤òÏùå Î∞∞Ïö∞Îäî Í±∞Í≥†, Ïûò ÏïåÏßÄ Î™ªÌïúÎã§. ÌïòÏßÄÎßå, ÏûêÎ∞îÏä§ÌÅ¨Î¶ΩÌä∏ÏôÄ Í∞ôÏù¥ **ÎèôÏ†ÅÌÉÄÏûÖ**Ïùò Ïñ∏Ïñ¥Îäî Í≤∞Íµ≠ ÎßéÏùÄ Î¨∏Ï†úÎ•º Ïú†Î∞ú ÏãúÌÇ¨Ïàò ÏûàÎäîÍ±∏ ÏïåÍ≥† ÏûàÎã§.\r\nÏùºÎ∞ò ÏûêÎ∞îÏä§ÌÅ¨Î¶ΩÌä∏ÏóêÎäî ÌÉÄÏûÖÏù¥ ÏóÜÍ∏∞ ÎïåÎ¨∏Ïóê ÏΩîÎìúÎåÄÎ°ú Í∑∏ÎÉ• Î≥ÄÏàòÎ°ú Î∞õÏïÑÏïºÌïúÎã§. Îî∞ÎùºÏÑú ÏïÑÎûòÏôÄ Í∞ôÏùÄ ÏùºÎ∞ò ÏûêÎ∞îÏä§ÌÅ¨Î¶ΩÌä∏ÏóêÏÑúÎäî Ìï¥Í¥¥Ìïú Ïó∞ÏÇ∞ÎèÑ Í∞ÄÎä•ÌïòÎã§.\r\n\r\n```javascript\r\n//ÏùºÎ∞ò ÏûêÎ∞îÏä§ÌÅ¨Î¶ΩÌä∏ Ìï®ÏàòÏùò ÏÑ†Ïñ∏\r\nfunction getNow() {\r\n    return new Date()\r\n}\r\n\r\nvar now = getNow();\r\nvar plus1Day = now + '1Day';\r\nconsole.log('plusDay:', plus1Day) \r\n//Ï∂úÎ†•Í≤∞Í≥º -> plusDay: Sat Apr 15 2023 19:12:32 GMT+0900 (ÌïúÍµ≠ ÌëúÏ§ÄÏãú)1Day\r\n```\r\n\r\n3Î≤àÎùºÏù∏ÏóêÏÑú Î≥¥Î©¥ `getNow()` Ìï®ÏàòÎäî `Date` ÌÉÄÏûÖÏùò ÌòÑÏû¨ÏãúÍ∞Ñ Í∞íÏùÑ Î¶¨ÌÑ¥ÌïúÎã§. Í∑ºÎç∞, 7Î≤àÎùºÏù∏ÏóêÏÑú Îã§ÏãúÎ≥¥Î©¥ `Date` ÌÉÄÏûÖÍ≥º `string` Ïó∞ÏÇ∞ÏùÑ ÌïúÎã§.\r\nÌïòÏßÄÎßå, Ïñ¥Îñ†Ìïú ÏóêÎü¨ÎèÑ Î∞úÏÉùÎêòÏßÄ ÏïäÎäîÎã§. Í≤∞Í≥ºÏ†ÅÏúºÎ°ú Ïó∞ÏÇ∞Îêú `plus1Day` Î≥ÄÏàòÏùò ÌÉÄÏûÖÏùÄ `string`Ïù¥Îã§.\r\n`Date` Ìï®ÏàòÏôÄ `string`Ïùò ÎçßÏÖàÏóê Í≤∞Í≥ºÌÉÄÏûÖÏù¥ `string`Ïù∏ ÎÇ¥Ïö©ÏùÄ, ÌÉÄÏûÖÏä§ÌÅ¨Î¶ΩÌä∏Î•º ÏïåÏïÑÎ≥¥Îäî Í≥ºÏ†ïÏóêÏÑú Î≥ÑÎ°ú Ï§ëÏöîÌïòÏßÄ ÏïäÍ∏∞Ïóê ÎÑòÏñ¥Í∞ÑÎã§.\r\n\r\nÏù¥ Ï≤òÎüº ÌÉÄÏûÖÏù¥ Ï°¥Ïû¨Îäî ÌïòÏßÄÎßå, Î≥ÄÏàòÍ∞Ä ÌÉÄÏûÖÏóê Ïó∞Ïó∞ÌïòÏßÄÏïäÏùÄ Ïñ∏Ïñ¥Î•º `ÎèôÏ†ÅÌÉÄÏûÖ Ïñ∏Ïñ¥`ÎùºÍ≥† ÌïúÎã§. \r\nÏö∞Î¶¨Í∞Ä ÏùºÎ∞òÏ†ÅÏúºÎ°ú ÏïåÍ≥†ÏûàÎäî Í∞ùÏ≤¥ÏßÄÌñ• Ïñ∏Ïñ¥Îäî Î™®Îëê Ï†ïÏ†ÅÌÉÄÏûÖ Ïñ∏Ïñ¥ Ïù¥Îã§. Í∞Å Î≥ÄÏàòÏùò ÌÉÄÏûÖÏù¥ Ï†ïÌï¥Ï†∏ÏûàÍ≥†, Ï†ïÌï¥ÏßÑÎåÄÎ°ú Ïó∞ÏÇ∞ÏùÑ ÌïòÍ∏∞ ÎïåÎ¨∏Ïù¥Îã§.\r\nÍ≤åÎã§Í∞Ä `javascript`Îäî ECMA Script(ES)ÎùºÎäî ÌëúÏ§Ä Ïä§ÌÅ¨Î¶ΩÌä∏ Î≤ÑÏ†ÑÏù¥ ÏûàÎäîÎç∞, ÌòÑÏû¨ Ïö∞Î¶¨Í∞Ä ÏÇ¨Ïö©Ï§ëÏù∏ Î∏åÎùºÏö∞Ï†ÄÎäî ES5 Î≤ÑÏ†ÑÎßå Ìï¥ÏÑùÌï† Ïàò ÏûàÎã§.\r\n\r\n`ES5`Î≤ÑÏ†ÑÏùÄ 2009ÎÖÑÏóê Í≥µÍ∞úÎêú Î≤ÑÏ†ÑÏù¥Î©∞, ÌòÑÏû¨ÍπåÏßÄ Î∏åÎùºÏö∞Ï†ÄÎäî Ìï¥Îãπ Î≤ÑÏ†ÑÏù¥ÏÉÅÏùò ÏûêÎ∞îÏä§ÌÅ¨Î¶ΩÌä∏Îäî Ìï¥ÏÑùÌï† Ïàò ÏóÜÎã§.\r\nÏù¥ Ïù¥ÏÉÅÏùò Î≤ÑÏ†ÑÏùÑ ÏÇ¨Ïö©ÌïòÎ†§Î©¥, Babel(Javascript Compiler)Í∞ôÏùÄ ÌäπÏ†ïÎèÑÍµ¨Î•º Ïù¥Ïö©Ìï¥ Î∏åÎùºÏö∞Ï†ÄÍ∞Ä Ìï¥ÏÑùÌï† Ïàò ÏûàÎäî ÏûêÎ∞îÏä§ÌÅ¨Î¶ΩÌä∏Ïùò Î≤ÑÏ†ÑÏúºÎ°ú Ïª¥ÌååÏùº Ìï¥Ï§òÏïº ÌïúÎã§.\r\nÏù¥ Ïô∏ÏóêÎèÑ `ES5`Ïù¥ÏÉÅÏóêÏÑú ÏßÄÏõêÎêòÎäî javascript Î≤ÑÏ†ÑÏóêÎäî Ïó¨Îü¨Í∞ÄÏßÄ Í∏∞Îä• Î∞è Î¨∏Î≤ïÎì§ÏùÑ ÏÇ¨Ïö©Ìï†Ïàò ÏûàÏóàÎã§.\r\n\r\n```javascript\r\n//ES6 Î¨∏Î≤ï const\r\nconst sum = (a, b) => {\r\n    return a + b\r\n}\r\n```\r\nÏúÑÏùò ÏÑ§Î™ÖÎåÄÎ°ú Î∏åÎùºÏö∞Ï†ÄÎäî `const`Î•º Ïïå Ïàò ÏóÜÎã§. ÌïòÏßÄÎßå Î∏åÎùºÏö∞Ï†Ä ÎÇ¥Î∂ÄÏóêÏûàÎäî js ÏóîÏßÑÏù¥ Ìï¥ÏÑùÌï† Ïàò ÏûàÍ∏∞Ïóê Ïö∞Î¶¨Îäî `ES`Î≤ÑÏ†ÑÏùÄ Îî±Ìûà Î™∞ÎùºÎèÑ ÏÉÅÍ¥ÄÏóÜÎã§.\r\nÌÉÄÏûÖÏä§ÌÅ¨Î¶ΩÌä∏Î•º Î∞∞Ïö∞Í∏∞ÏúÑÌï¥ÏÑ†, ÏúÑÏùò ÎÇ¥Ïö©Îì§ÏùÑ ÏïåÍ≥†ÏûàÏñ¥ÏïºÌïúÎã§. `ES5`Ïùò Î¨∏Î≤ïÏùÄ ÎãπÏó∞Ìûà `ESNext(6, 7..)`ÏóêÏÑú Ìè¨Ìï®ÌïòÍ≥† ÏûàÍ≥†, Ïù¥ÎòêÌïú `Typescript`ÏóêÏÑú Ìè¨Ìï®ÌïòÍ≥†ÏûàÎã§.\r\n`ÌÉÄÏûÖÏä§ÌÅ¨Î¶ΩÌä∏`ÎòêÌïú, `ESNext`ÏôÄ ÎèôÏùºÌïòÍ≤å ES5Î°ú `Transpile`ÏùÑ Ìï¥Ï§òÏïº ÌïòÎäîÍ±¥ ÏòàÏô∏ ÏóÜÎã§. \r\n\r\nÍ∑∏Îüº Ïö∞Î¶¨Í∞Ä ÏïÑÎäî ÏûêÎ∞îÏä§ÌÅ¨Î¶ΩÌä∏Î•º Í∑∏ÎÉ• ÏÇ¨Ïö©Ìï¥ÎèÑ ÎêòÎäîÎç∞, Ïôú Íµ≥Ïù¥ ÌÉÄÏûÖÏä§ÌÅ¨Î¶ΩÌä∏Î•º ÏÇ¨Ïö©ÌïòÎäî Í±∏Íπå?\r\n\r\n## ÌÉÄÏûÖÏä§ÌÅ¨Î¶ΩÌä∏Îäî Î¨¥ÏóáÏù∏Í∞Ä?\r\n\r\nÍ∞ÑÎã®ÌïòÍ≤å ÏÑ§Î™ÖÌïòÎ©¥, ÎèôÏ†ÅÌÉÄÏûÖÏùò Ïñ∏Ïñ¥ÏôÄ Í∞ôÏù¥ Î™®Îì† Í∞ùÏ≤¥Îäî ÌÉÄÏûÖÏùÑ Í∞ÄÏßÄÎ©∞, `Null-Sefe`Ìïú Ïó∞ÏÇ∞ÏùÑ Ìï† Ïàò ÏûàÎäî Îì± Ïó¨Îü¨ Ïû•Ï†êÏù¥ ÏûàÎã§.\r\nÏòàÎ•º Îì§Ïñ¥ Îã§ÏùåÍ≥º Í∞ôÏùÄ `Javascript` ÏΩîÎìúÏóêÏÑú Î¨∏Ï†úÍ∞Ä Î∞úÏÉù ÌñàÏùÑ Îïå, ÏâΩÍ≤å Î¨∏Ï†úÎ•º ÏïåÏàò ÏóÜÎã§.\r\n\r\n```javascript\r\nfunction makePerson(name, age) {\r\n    return {\r\n        name: name,\r\n        age: age\r\n    }\r\n}\r\n\r\nconst person = makePerson(30, 'Kim')\r\n```\r\n\r\nÌïòÏßÄÎßå, ÏúÑÏôÄ Í∞ôÏùÄ ÏΩîÎìúÏóê Í∞Å Î≥ÄÏàòÏóêÎåÄÌïú ÌÉÄÏûÖÏù¥ ÏÉùÍ∏¥Îã§Î©¥, ÏûëÏÑ±Ìï† ÎïåÎ∂ÄÌÑ∞ Î¨∏Ï†úÎ•º Ïïå Ïàò ÏûàÎã§.\r\nÎßåÏïΩ ÏúÑÏóê ÏΩîÎìúÏóêÏÑú ÌÉÄÏûÖÏù¥ Ï∂îÍ∞ÄÎêúÎã§Î©¥ Ïñ¥ÎñªÍ≤å Îã¨ÎùºÏßàÍπå?\r\n\r\n```typescript\r\nclass Person {\r\n    name: string\r\n    age: number\r\n\r\n    constructor(name: string, _age_: number) {\r\n        this.name = name\r\n        this.age = age\r\n    }\r\n}\r\n\r\nfunction makePerson(name: string, age: number): Person {\r\n    return new Person(name, age)\r\n}\r\n\r\nconst person: Person = makePerson('Kim', 4)\r\n```\r\n\r\nÏ¢Ä Îçî ÎßéÏùÄ ÏΩîÎìúÍ∞Ä ÏûëÏÑ±ÎêòÏóàÎã§. ÌïòÏßÄÎßå, Í∞Å Î≥ÄÏàòÎäî ÌÉÄÏûÖÏùÑ Í∞ÄÏßÄÎ©∞, Ï¢Ä Îçî Í≤¨Í≥†Ìïú Ïñ¥ÌîåÎ¶¨ÏºÄÏù¥ÏÖòÏùÑ ÎßåÎì§Ïàò ÏûàÎäî ÌÉÄÏûÖÏù¥ ÏÉùÍ≤ºÎã§.\r\nÌÅ¥ÎûòÏä§ ÏÉùÏÑ±ÏùÑ ÌÜµÌï¥, ÏùòÎèÑÌïú Í∞íÏùÑ Í∞ÄÏßÄÎäî ÌÉÄÏûÖÏùò Í∞ùÏ≤¥Í∞Ä ÏÉùÏÑ±ÎêòÏóàÎã§. Ïù¥Îäî Ï†ïÎßê Ï§ëÏöîÌïú ÎÇ¥Ïö©Ïù¥Îã§.\r\nÍ∏∞Ï°¥Ïóê ÏûêÎ∞îÏä§ÌÅ¨Î¶ΩÌä∏ÏóêÏÑú Ìï† Ïàò ÏóÜÏóàÎçò, Í∑∏Î¶¨Í≥† Í±±Ï†ïÌïòÏßÄ ÏïäÏïÑÎèÑ ÎêòÏóàÎçò, ÏΩîÎìúÎ•º ÏûëÏÑ±Ìï† Ïàò ÏûàÍ≤åÎêúÎã§.\r\n\r\n## ÌÉÄÏûÖÏä§ÌÅ¨Î¶ΩÌä∏Î•º Î∞∞Ïö∞Í∏∞Ï†Ñ ES5 ÎòêÎäî ESNextÏùò Ï£ºÏöî Î¨∏Î≤ïÏùÑ ÏïåÏïÑÎ≥¥Ïûê\r\n\r\nÏïûÏÑú ÎßêÌïúÍ≤ÉÏ≤òÎüº `Typescript`Îäî `ESNext`, `ES5`Î™®Îëê Ìè¨Í¥ÑÌïòÍ≥† ÏûàÎäî ÏÉÅÏúÑ ÏßëÌï©Ïù¥Í∏∞Ïóê, ÎëêÍ∞ÄÏßÄ Î¨∏Î≤ïÏùÑ Î™®Îëê ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎã§.\r\nÌÉÄÏûÖÏä§ÌÅ¨Î¶ΩÎ™áÍ∞ÄÏßÄ Í∞ÑÎã®Ìïú Î¨∏Î≤ïÏùÑ \r\n\r\n### ÎπÑÍµ¨Ï°∞Ìôî Ìï†Îãπ\r\n\r\n`ÎπÑÍµ¨Ï°∞Ìôî Ìï†Îãπ(destructuring assignment)`Îäî Í∞ùÏ≤¥ÏôÄ Î∞∞Ïó¥Ïóê Ï†ÅÏö©Ìï† Ïàò ÏûàÏúºÎ©∞, ÎßêÍ∑∏ÎåÄÎ°ú Íµ¨Ï°∞Ìôî ÌïòÏßÄÏïäÏùÄ Ï±Ñ Í∞íÏùÑ ÌäπÏ†ï Î≥ÄÏàòÎ°ú Ìï†Îãπ ÌïòÎäî Í≤É Ïù¥Îã§.\r\nÏù¥Îäî `ESNext`ÏóêÏÑú Ï†úÍ≥µÎêòÎ©∞,  \r\n\r\n```javascript{6}\r\nlet person = {\r\n    first_name: 'John',\r\n    age: 30\r\n}\r\n\r\nlet { first_name, age } = person\r\n\r\nconsole.log(typeof age) // \"number\"\r\nconsole.log(age)        // 30\r\nconsole.log(first_name) // \"John\"\r\n```\r\n\r\npersonÏùÑ Ïù¥Ïö©ÌïòÏó¨, ÎπÑÍµ¨Ï°∞Ìôî Ìï†ÎãπÏùÑ ÌÜµÌï¥ `first_name` fieldÏôÄ `age`ÌïÑÎìúÎ•º Ìï†Îãπ Ìï† Ïàò ÏûàÎã§.\r\nÍ∑∏Îüº Ïù¥ Ìï†ÎãπÏùÑ ÌÜµÌï¥, `let { first_name, age }`Ïùò Í∞í Ï§ë `first_name`Ïùò Í∞íÏùÑ Î∞îÍæ∏Î©¥ Ïñ¥ÎñªÍ≤å Îê†Íπå?\r\n\r\n```javascript\r\nlet person = {\r\n    first_name: 'John',\r\n    age: 30\r\n}\r\n\r\nlet { first_name, age } = person\r\n\r\nfirst_name = 'Micheal'\r\nconsole.log('person:', person)\r\n/*\r\n    person: {\r\n        \"first_name\": \"John\",\r\n        \"age\": 30\r\n    }\r\n */\r\nperson.first_name = 'Smith'\r\nconsole.log('first_name:', first_name)\r\n/*\r\n    first_name: Micheal\r\n */\r\n```\r\n\r\nÏ≤´Î≤àÏß∏Î°ú Ìï†ÎãπÎêú `first_name`Ïùò Í∞íÏùÑ Î≥ÄÍ≤ΩÌñàÏßÄÎßå, Î≥ÄÍ≤Ω ÎêòÏßÄ ÏïäÏïòÎã§.\r\nÎòêÌïú, Î∞òÎåÄÎ°ú `person.first_name`Ïùò Í∞íÏùÑ Î≥ÄÍ≤Ω ÌñàÏßÄÎßå, Ïó≠ÏãúÎÇò `first_name`Ïùò Í∞íÏù¥ Î≥ÄÍ≤Ω ÎêòÏßÄ ÏïäÏïòÎã§.\r\nÏó¨Í∏∞ÏÑú `ÎπÑÍµ¨Ï°∞Ìôî Ìï†Îãπ`ÏùÄ ÏñïÏùÄÎ≥µÏÇ¨Î•º ÌïòÎäîÍ±∏ Ïïå Ïàò ÏûàÎã§.\r\nÎ∞∞Ïó¥Ïùò ÎπÑÍµ¨Ï°∞Ìôî Ìï† ÎãπÏùÄ Ïñ¥ÎñªÍ≤å ÏÇ¨Ïö©Ìï† Ïàò ÏûàÏùÑÍπå?\r\n\r\n```javascript{2}\r\nlet array = [1, 7, 54, 66, 90]\r\nlet [first, ...mod] = array\r\n\r\nconsole.log(array) // [1, 7, 54, 66, 90]\r\nconsole.log(first) // 1\r\nconsole.log(mod)   // [7, 54, 66, 90]\r\n```\r\n\r\n>2Î≤à ÎùºÏù∏Ïùò `...mod`Îäî `Ïä§ÌîÑÎ†àÎìú Ïó∞ÏÇ∞Ïûê`Ïù¥Î©∞, ÎÇ¥Î∂Ä ÏöîÏÜåÎ•º ÌïúÎ≤àÏóê Í∞ÄÏ†∏Ïò®Îã§.\r\n> Ïä§ÌîÑÎ†àÎìú Ïó∞ÏÇ∞ÏûêÎäî Ïù∏ÏûêÏùò ÎßàÏßÄÎßâÏóêÎßå ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎã§.\r\n:{ \"type\": \"note\", \"icon\": \"info\" }\r\n\r\n`first`ÏôÄ `mod`Î°ú ÎÇòÎàÑÏñ¥ Ìï†Îãπ ÌñàÍ≥† Ï∂úÎ†• Í≤∞Í≥ºÎäî ÏúÑ Ï≤òÎüº Î∞∞Ïó¥Ïùò ÏàúÏÑúÏóê ÎßûÎäî Í∞íÎì§Î°ú ÎÇòÎâòÏñ¥Ï°åÎã§.\r\n`Í∞ùÏ≤¥`ÎòêÎäî `Î∞∞Ïó¥`Ïùò Íµ¨Ï°∞Î•º Î∂ÑÌï¥Ìï¥ÏÑú Ìï†ÎãπÌïòÍ∏∞ ÎïåÎ¨∏Ïóê `Íµ¨Ï°∞Î∂ÑÌï¥ Ìï†Îãπ`(`ÎòêÎäî \"ÎπÑÍµ¨Ï°∞Ìôî Ìï†Îãπ\"`)Ïù¥ÎùºÍ≥† Ïπ≠ÌïúÎã§.\r\n\r\n\r\n### ÌôîÏÇ¥Ìëú Ìï®Ïàò (arrow function)\r\n\r\n```javascript\r\n// ÏùºÎ∞ò Ìï®ÏàòÌòï\r\nfunction toUpperCase(str) {\r\n    return str.toUpperCase()\r\n}\r\n\r\n// ÌôîÏÇ¥Ìëú Ìï®ÏàòÌòï\r\nconst toUpperCase = () => str.toUpperCase()\r\n```\r\n\r\nÏûêÎ∞îÏä§ÌÅ¨Î¶ΩÌä∏ÏóêÏÑúÎäî Ìï®ÏàòÎòêÌïú Í∞ùÏ≤¥Î°ú Ï∑®Í∏âÎêòÎ©∞, ÏúÑÏôÄ Í∞ôÏùÄ ÌëúÌòÑÏãùÏúºÎ°ú ÏÑ†Ïñ∏Ìï† Ïàò ÏûàÎã§.\r\nÏù¥ ÌôîÏÇ¥Ìëú Ìï®Ïàò(`arrow function`)ÏùÄ ÎÇ¥Î∂ÄÎ°úÏßÅÏù¥ ÌïúÏ§ÑÎ°ú ÌëúÌòÑÏù¥ ÎêúÎã§Î©¥, `{}`Í¥ÑÌò∏ÏôÄ `return`ÏùÑ ÏÉùÎûµÌï† ÏàòÏûàÎã§.\r\nÏ§ëÏöîÌïú Î∂ÄÎ∂ÑÏùÄ `=`Îã§ÏùåÏúºÎ°ú Ïò§Îäî `() => {}`Íµ¨Î¨∏Ïù¥Îã§. `()`ÏóêÎäî ÏùºÎ∞òÌï®ÏàòÏ≤òÎüº Îß§Í∞úÎ≥ÄÏàòÎ•º Î∞õÏùÑ Ïàò ÏûàÍ≥†, `{}` ÎÇ¥Î∂Ä ÎòêÌïú Ìï®ÏàòÏôÄ ÎèôÏùºÌïòÍ≤å ÏûëÏÑ±Ìï† Ïàò ÏûàÎã§.\r\n*Ï£ºÏùòÌï† Ï†ê*ÏùÄ `ÌôîÏÇ¥Ìëú Ìï®Ïàò` ÎÇ¥ÏóêÏÑú `this` ÌÇ§ÏõåÎìúÎäî Ìï®Ïàò `ÏûêÏã†`ÏùÑ ÏùòÎØ∏ÌïúÎã§Îäî Ï†êÏùÑ ÏïåÍ≥† ÏûàÏñ¥Ïïº ÌïúÎã§. \r\nÏù¥Îäî `javascript`Í∞ùÏ≤¥ÏôÄ Í¥ÄÎ†®Îêú Î∂ÄÎ∂ÑÏù∏Îç∞, `javascript`ÏóêÏÑú `this`Îäî Í∞ùÏ≤¥Ïùò Ï∞∏Ï°∞Î•º ÏùòÎØ∏ÌïúÎã§. \r\n`class` ÎòêÎäî Î™®ÎìàÏóêÏÑú ÏÇ¨Ïö©ÌïúÎã§Î©¥, ÌòÑÏû¨ ÏÜçÌï¥ÏûàÎäî Í∞ùÏ≤¥(`Î∏åÎùºÏö∞Ï†Ä`ÏùºÎ∞òÏ†ÅÏúºÎ°ú `window: DOM tree`Î°ú Î∞îÏù∏Îî©) ÏóêÎåÄÌï¥ Î∞îÏù∏Îî© ÌïòÍ∏∞ÎïåÎ¨∏Ïóê, \r\nÍ∞ùÏ≤¥ ÏûêÏ≤¥Ïù∏ `arrow`Ìï®ÏàòÎäî `this`Ïóê ÎåÄÌï¥ ÏûêÍ∏∞ ÏûêÏã†Ïù¥ Î∞îÏù∏Îìú ÎêòÎäî Í≤ÉÏù¥Îã§.\r\n\r\n### ÌÅ¥ÎûòÏä§ (class)\r\n\r\nÏùºÎ∞òÏ†ÅÏúºÎ°ú Í∞ùÏ≤¥ÏßÄÌñ• Ïñ∏Ïñ¥ÏóêÏÑú ÏßÄÏõê ÌïòÎäî `class`Ïùò Í∞úÎÖêÏùÄ Ïñ¥Îñ§ Í∞ùÏ≤¥Ïóê ÎåÄÌï¥ Ï†ïÏ†ÅÏù∏ Í¥ÄÏ†êÏóêÏÑú ÏÑúÏà† Ìï† Îïå ÏÇ¨Ïö© ÎêúÎã§.\r\nÏïÑÎûòÏùò ÏòàÏ†úÎ•º ÌÜµÌï¥ `ÏïåÎûåÏãúÍ≥Ñ`Í∞Ä Í∞ñÍ≥†ÏûàÎäî Ï†ïÏ†ÅÏù∏ Í¥ÄÏ†êÏùò ÏÉÅÌÉúÏôÄ Ï±ÖÏûÑÏóê ÎåÄÌï¥ Ï¢ÄÎçî Í∞ùÏ≤¥ÏßÄÌñ•Ï†ÅÏúºÎ°ú Ïù¥Ìï¥ÌïòÍ∏∞ ÏúÑÌï¥ `typescript`Î•º ÌÜµÌï¥ ÏïåÏïÑÎ≥¥Ïûê.\r\n\r\n```typescript\r\n\r\nclass Speaker {\r\n    ringing() {\r\n        //Ï†ÄÏû•Îêú ÏùåÏïÖÏúºÎ°ú, Ïä§ÌîºÏª§ ÎèôÏûë Î°úÏßÅ    \r\n    }\r\n}\r\n\r\ninterface Alarm {\r\n    alert(message: string): never\r\n}\r\n\r\nclass Clock implements Alarm {\r\n\r\n    private readonly _speaker: Speaker\r\n\r\n    constructor(speaker: Speaker) {\r\n        this._speaker = speaker\r\n    }\r\n    \r\n    setTimeOfRinging(milis: number, message: string): never {\r\n        setTimeout(() => {\r\n            this._speaker.ringing()\r\n            alert()\r\n        }, milis)\r\n    }\r\n    \r\n    alert(message: string): never {\r\n        console.log(message)\r\n    }\r\n}\r\n\r\nconst clock: Clock = new Clock(new Speaker())\r\nclock.setTimeOfRinging(1000, '1Ï¥àÍ∞Ä ÏßÄÎÇ¨ÏäµÎãàÎã§.')\r\n```\r\n\r\nÍ∏∞Ï°¥Ïóê `javascript`ÏóêÏÑúÎäî Ìï† Ïàò ÏóÜÎçò, Í∞ùÏ≤¥Ïùò ÏÉÅÏÜç, Ï∂îÏÉÅÌôîÍ∞Ä Í∞ÄÎä• ÌïòÎØÄÎ°úÏÑú, Í∞ÑÎã®Ìïú ÏïåÎûåÏãúÍ≥Ñ ÌÅ¥ÎûòÏä§ÏßÄÎßå,Í∞Å Í∞ùÏ≤¥Îì§Ïùò `Ï±ÖÏûÑ`ÏùÑ Î∂ÄÏó¨ÌïòÎØÄÎ°úÏç®,\r\nÏ¢Ä Îçî Í≤¨Í≥†Ìïú `Ïñ¥ÌîåÎ¶¨ÏºÄÏù¥ÏÖò`ÏùÑ ÎßåÎì§ Ïàò ÏûàÎã§.\r\n"
  },
  {
    "path": "/docs/tool/asdf",
    "header": {
      "layout": "post",
      "title": "Îã§Ï§ëÎ™®Îìà Í¥ÄÎ¶¨Ìà¥ asdf",
      "tags": [
        "Module",
        "Multi Module"
      ],
      "date": 1676380440000,
      "thumbnail": "/post/tool/asdf.png",
      "current-company": "Herit Corporation",
      "current-position": "Backend Server Developer",
      "summary": "asdf",
      "excerpt-separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÎùºÏù¥Î∏åÎü¨Î¶¨/ÎèÑÍµ¨"
      ],
      "images": [],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "ÏÑ§Ïπò",
            "title": "ÏÑ§Ïπò",
            "fragment": "root-0",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Î™ÖÎ†πÏñ¥",
            "title": "Î™ÖÎ†πÏñ¥",
            "fragment": "root-1",
            "children": [
              {
                "rank": 3,
                "origin": "ÌîåÎü¨Í∑∏Ïù∏",
                "title": "ÌîåÎü¨Í∑∏Ïù∏",
                "fragment": "root-1-0",
                "children": []
              },
              {
                "rank": 3,
                "origin": "Î™®Îìà",
                "title": "Î™®Îìà",
                "fragment": "root-1-1",
                "children": []
              }
            ]
          },
          {
            "rank": 2,
            "origin": "ÏÑ§Ïπò ÏàúÏÑú",
            "title": "ÏÑ§Ïπò ÏàúÏÑú",
            "fragment": "root-2",
            "children": []
          }
        ]
      }
    },
    "description": "Îã§ÏñëÌïú Î™®ÎìàÏùò Î≤ÑÏ†ÑÏùÑ ÌïúÎ≤àÏóê Í¥ÄÎ¶¨Ìï† Ïàò ÏûàÎäî asdf",
    "content": "\r\n\r\nasdf Îäî Îã§Ï§ë Î™®Îìà Î≤ÑÏ†Ñ Í¥ÄÎ¶¨ ÎèÑÍµ¨Ïù¥Îã§.\r\n`nvm`Ïù¥ nodeÏóê ÎåÄÌïú Î≤ÑÏ†ÑÏùÑ Í¥ÄÎ¶¨Ìï† Ïàò ÏûàÎìØÏù¥, `asdf`Îäî java, node, go Îì± Îã§ÏñëÌïú Î™®ÎìàÏùò Î≤ÑÏ†ÑÏùÑ Í¥ÄÎ¶¨Ìï† Ïàò ÏûàÎã§.\r\nÎ®ºÏ†Ä Î™®Îìà Î≤ÑÏ†Ñ Í¥ÄÎ¶¨Î•º ÌïòÎ†§Î©¥ ÏÇ¨Ïö©Ìï† Î™®ÎìàÏùò ÌîåÎü¨Í∑∏Ïù∏ÏùÑ ÏÑ§ÏπòÌï¥Ïïº ÌïúÎã§. ÏÑ§ÏπòÌï† Ïàò ÏûàÎäî ÌîåÎü¨Í∑∏Ïù∏Ïù¥ Î≠êÍ∞Ä ÏûàÎäîÏßÄ ÌôïÏù∏ÌïòÍ≥†, ÌîåÎü¨Í∑∏Ïù∏ÏùÑ ÏÑ§ÏπòÌï¥ÏÑú Î≤ÑÏ†Ñ Í¥ÄÎ¶¨Î•º ÌïòÎ©¥ ÎêòÎäî Íµ¨Ï°∞Îã§.\r\n\r\n## ÏÑ§Ïπò\r\n\r\n1. `git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.15.0`\r\n2. [OS Î≥Ñ Ï∞∏Ï°∞](https://asdf-vm.com/guide/getting-started.html#_3-install-asdf)\r\n\r\n\r\n## Î™ÖÎ†πÏñ¥\r\n\r\n### ÌîåÎü¨Í∑∏Ïù∏\r\n\r\n```shell\r\n$ asdf plugin list all # Ï†ÑÏ≤¥ ÌîåÎü¨Í∑∏Ïù∏ Ï°∞Ìöå\r\n$ asdf plugin list all | grep <plugin-name> # Í≤ÄÏÉâ (ÏúàÎèÑÏö∞Îäî findStr)\r\n$ asdf plugin add <plugin-name> # ÌîåÎü¨Í∑∏Ïù∏ ÏÑ§Ïπò \r\n```\r\n\r\n### Î™®Îìà\r\n\r\n```shell\r\n$ asdf list-all <plugin-name> #ÌîåÎü¨Í∑∏Ïù∏ Î™®Îìà Ï°∞Ìöå\r\n$ asdf list-all <plugin-name> | grep <module-name> # Í≤ÄÏÉâ (ÏúàÎèÑÏö∞Îäî findStr)\r\n$ asdf latest <plugin-name> <version> #ÏµúÏã† Î≤ÑÏ†Ñ ÌôïÏù∏\r\n$ asdf install <module-name> <version> #Î™®Îìà ÏÑ§Ïπò\r\n$ asdf local <module-name> <version> #ÌòÑÏû¨ ÎîîÎ†âÌÜ†Î¶¨ÏóêÏÑú Ï∞∏Ï°∞Ìï† Î™®Îìà Î≤ÑÏ†Ñ ÏßÄÏ†ï(ÏÑ†Ìñâ ÏÑ§Ïπò ÌïÑÏöî)\r\n$ asdf global <module-name <version> #Ï†ÑÏ≤¥ ÎîîÎ†âÌÜ†Î¶¨ÏóêÏÑú Ï∞∏Ï°∞Ìï† Î™®Îìà Î≤ÑÏ†Ñ ÏßÄÏ†ï (ÏÑ†Ìñâ ÏÑ§Ïπò ÌïÑÏöî)\r\n```\r\n\r\n[Îã§Î•∏ Î™ÖÎ†πÏñ¥](https://asdf-vm.com/manage/commands.html);\r\n\r\n\r\n## ÏÑ§Ïπò ÏàúÏÑú\r\n\r\n1. ÌîåÎü¨Í∑∏Ïù∏\r\n2. Î™®Îìà-Î≤ÑÏ†Ñ\r\n"
  },
  {
    "path": "/docs/network/https",
    "header": {
      "layout": "post",
      "title": "HTTPS (HyperText Transfer Protocol Secure)",
      "tags": [
        "Network",
        "TCP/IP",
        "HTTP"
      ],
      "date": 1660237380000,
      "thumbnail": "/post/network/https/hilarious-process-from-making-premaster-secret.png",
      "profile-image": "/post/profile/winkkom.png",
      "current-company": "NEOWIZ",
      "current-position": "Software Engineer",
      "summary": "HTTPS",
      "excerpt-separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÎÑ§Ìä∏ÏõåÌÅ¨"
      ],
      "images": [
        {
          "src": "/post/network/https/http-without-encrypt.png",
          "alt": "ÏïîÌò∏Ìôî ÎêòÏßÄ ÏïäÏùÄ Ï†ïÎ≥¥ Ï†ÑÏÜ°"
        },
        {
          "src": "/post/network/https/http-with-encrypt.png",
          "alt": "ÏïîÌò∏Ìôî Îêú Ï†ïÎ≥¥ Ï†ÑÏÜ°"
        },
        {
          "src": "/post/network/https/tls-layer-structure.png",
          "alt": "TLS Í≥ÑÏ∏µ Íµ¨Ï°∞"
        },
        {
          "src": "/post/network/https/client-hello.png",
          "alt": "Client Hello"
        },
        {
          "src": "/post/network/https/captured-client-hello.png",
          "alt": "WireSharkÎ°ú Ï∫°Ï≥êÎêú Client Hello"
        },
        {
          "src": "/post/network/https/specification-of-cipher-suite.png",
          "alt": "Cipher Suite Ïä§Ìéô"
        },
        {
          "src": "/post/network/https/server-hello.png",
          "alt": "Server Hello"
        },
        {
          "src": "/post/network/https/certificate-in-tls-1.2.png",
          "alt": "TLS 1.2Ïùò Certificate"
        },
        {
          "src": "/post/network/https/hilarious-certificate.png",
          "alt": "Ïù∏Ï¶ùÏÑúÏùò Í≥µÍ∞úÌÇ§ Í≤ÄÏ¶ù"
        },
        {
          "src": "/post/network/https/hilarious-verification.png",
          "alt": "Î∏åÎùºÏö∞Ï†ÄÏùò Ïù∏Ï¶ùÏÑú Í≤ÄÏ¶ù"
        },
        {
          "src": "/post/network/https/server-key-exchange.png",
          "alt": "Server Key Exchange"
        },
        {
          "src": "/post/network/https/captured-server-key-exchange.png",
          "alt": "WireSharkÎ°ú Ï∫°Ï≥êÎêú Server Key Exchange"
        },
        {
          "src": "/post/network/https/client-key-exchange.png",
          "alt": "Client Key Exchange"
        },
        {
          "src": "/post/network/https/hilarious-process-from-making-premaster-secret.png",
          "alt": "ÏÑúÎ≤ÑÏôÄ ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Ïùò Í≥µÍ∞úÌÇ§Î°ú Premaster SecretÏùÑ ÎßåÎì†Îã§."
        },
        {
          "src": "/post/network/https/change-cipher-spec-and-finished.png",
          "alt": "Change Cipher SpecÍ≥º and Finished"
        }
      ],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "HTTPSÎûÄ?::what-is-https",
            "title": "HTTPSÎûÄ?",
            "fragment": "what-is-https",
            "children": []
          },
          {
            "rank": 2,
            "origin": "HTTPS ÎèôÏûë Î∞©Ïãù::how-https-work",
            "title": "HTTPS ÎèôÏûë Î∞©Ïãù",
            "fragment": "how-https-work",
            "children": []
          },
          {
            "rank": 2,
            "origin": "TLS 1.2 ÎèôÏûë Í≥ºÏ†ï::how-tls-1.2-works-in",
            "title": "TLS 1.2 ÎèôÏûë Í≥ºÏ†ï",
            "fragment": "how-tls-1.2-works-in",
            "children": [
              {
                "rank": 3,
                "origin": "1. Client Hello::client-hello",
                "title": "1. Client Hello",
                "fragment": "client-hello",
                "children": []
              },
              {
                "rank": 3,
                "origin": "2. Server Hello::server-hello",
                "title": "2. Server Hello",
                "fragment": "server-hello",
                "children": []
              },
              {
                "rank": 3,
                "origin": "3. Certificate::certificate",
                "title": "3. Certificate",
                "fragment": "certificate",
                "children": []
              },
              {
                "rank": 3,
                "origin": "3-5. Server Key Exchange::server-key-exchange",
                "title": "3-5. Server Key Exchange",
                "fragment": "server-key-exchange",
                "children": []
              },
              {
                "rank": 3,
                "origin": "4. Client Key Exchange::client-key-exchange",
                "title": "4. Client Key Exchange",
                "fragment": "client-key-exchange",
                "children": []
              },
              {
                "rank": 3,
                "origin": "5. Change Cipher Spec and Finished::change-cipher-spec-and-finished",
                "title": "5. Change Cipher Spec and Finished",
                "fragment": "change-cipher-spec-and-finished",
                "children": []
              }
            ]
          }
        ]
      }
    },
    "description": "HTTPS(HyperText Transfer Protocol Secure)Îäî Ï†ÑÏÜ° Í≥ÑÏ∏µÏóêÏÑú Îç∞Ïù¥ÌÑ∞Î•º ÏïîÌò∏ÌôîÌïòÏó¨ Î≥¥ÏïàÏùÑ Í∞ïÌôîÌïú ÌîÑÎ°úÌÜ†ÏΩúÏù¥Îã§.\r\nÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ÏôÄ ÏÑúÎ≤ÑÍ∞Ä Ïã†Î¢∞Ìï† Ïàò ÏûàÎäî ÌÜµÏã†Ïù¥ Ïñ¥ÎñªÍ≤å Ïù¥Î£®Ïñ¥ÏßÄÎäîÏßÄ ÏïåÏïÑÎ≥¥Ïûê.",
    "content": "\r\n## HTTPSÎûÄ?::what-is-https\r\n\r\n**HTTPS**(HyperText Transfer Protocol Secure)Îäî HTTPÏùò Î≥¥Ïïà Î≤ÑÏ†ÑÏúºÎ°ú, Ï†ÑÏÜ° Í≥ÑÏ∏µÏóêÏÑú Îç∞Ïù¥ÌÑ∞Î•º ÏïîÌò∏ÌôîÌïòÏó¨ Î≥¥ÏïàÏùÑ Í∞ïÌôîÌïú ÌîÑÎ°úÌÜ†ÏΩúÏù¥Îã§.\r\nÍ∏∞Î≥∏ HTTP ÌîÑÎ°úÌÜ†ÏΩúÏùÄ ÏïîÌò∏ÌôîÎêòÏßÄ ÏïäÏùÄ ÌÖçÏä§Ìä∏Î°ú ÌÜµÏã†ÌïòÍ∏∞ ÎïåÎ¨∏Ïóê, Ï§ëÏöîÌïú Ï†ïÎ≥¥Î•º Ï£ºÍ≥† Î∞õÏùÑ Îïå Î≥¥ÏïàÏóê Ï∑®ÏïΩÌïòÎã§.\r\n\r\n![ÏïîÌò∏Ìôî ÎêòÏßÄ ÏïäÏùÄ Ï†ïÎ≥¥ Ï†ÑÏÜ°](/post/network/https/http-without-encrypt.png)\r\n:{ \"align\": \"center\", \"max-width\": \"400px\", \"description\": \"ÏïîÌò∏Ìôî ÎêòÏßÄ ÏïäÏùÄ Ï†ïÎ≥¥ Ï†ÑÏÜ°\" }\r\n\r\nÏòàÎ•º Îì§Ïñ¥ Ïñ¥Îñ§ ÏÇ¨Ïù¥Ìä∏Ïóê Í∞ÄÏûÖÌïòÎ†§Í≥† Ìï† Îïå, Í≥ÑÏ†ï Ï†ïÎ≥¥Î•º ÏïîÌò∏Ìôî ÏóÜÏù¥ Ï†ÑÏÜ°ÌïòÍ≤å ÎêúÎã§Î©¥, Ï§ëÍ∞ÑÏóê ÎàÑÍµ∞Í∞ÄÍ∞Ä Ï†ïÎ≥¥Î•º Í∞ÄÎ°úÏ±ÑÏñ¥ ÏïÖÏö©Ìï† Ïàò ÏûàÎã§.\r\nÏù∏Ï¶ùÏÑúÎäî ÎèÑÎ©îÏù∏ÏùÑ Í∏∞Î∞òÏúºÎ°ú Î∞úÍ∏âÎêòÍ∏∞ ÎïåÎ¨∏Ïóê `http://...`ÏúºÎ°ú Ï†ëÏÜçÌïú Í≤ΩÏö∞ Îã§Î•∏ ÏÇ¨Ïù¥Ìä∏Î°ú Î¶¨Îã§Ïù¥Î†âÌä∏ÎêòÏñ¥ ÏïÖÏö©Îê† Ïàò ÏûàÎã§. \r\n\r\n![ÏïîÌò∏Ìôî Îêú Ï†ïÎ≥¥ Ï†ÑÏÜ°](/post/network/https/http-with-encrypt.png)\r\n:{ \"align\": \"center\", \"max-width\": \"400px\", \"description\": \"ÏïîÌò∏Ìôî Îêú Ï†ïÎ≥¥ Ï†ÑÏÜ°\" }\r\n\r\nÎ∞òÎåÄÎ°ú ÏïîÌò∏ÌôîÎêú HTTPS ÌîÑÎ°úÌÜ†ÏΩúÏùÑ ÏÇ¨Ïö©ÌïòÍ≤å ÎêòÎ©¥, Ï§ëÍ∞ÑÏóê ÎàÑÍµ∞Í∞ÄÍ∞Ä Ï†ïÎ≥¥Î•º Í∞ÄÎ°úÏ±ÑÎèÑ ÏïîÌò∏ÌôîÎêú Ï†ïÎ≥¥Î•º Ìï¥ÎèÖÌïòÍ∏∞ Ïñ¥Î†µÍ∏∞ ÎïåÎ¨∏Ïóê ÏïàÏ†ÑÌïòÎã§.\r\nÎòêÌïú Ïù¥ ÏïîÌò∏ÌôîÏùò Í∞ÑÍ≤©Ïù¥ ÏßßÏïÑÏÑú, ÏïîÌò∏ÌôîÎêú Ï†ïÎ≥¥Î•º Ìï¥ÎèÖÌïòÎäîÎç∞ ÎßéÏùÄ ÏãúÍ∞ÑÏù¥ ÏÜåÏöîÎêòÏñ¥ Î≥¥ÏïàÏÑ±Ïù¥ ÎÜíÎã§.\r\n\r\n## HTTPS ÎèôÏûë Î∞©Ïãù::how-https-work\r\n\r\nHTTPSÎäî [Ï†ÑÏÜ° Í≥ÑÏ∏µ](/docs/network/tcp-ip/transport-layer)Í≥º **ÏùëÏö©Í≥ÑÏ∏µ** ÏÇ¨Ïù¥ÏóêÏÑú ÎèôÏûë ÌïòÍ∏∞ ÎïåÎ¨∏Ïóê, ÏùëÏö© Í≥ÑÏ∏µÏùò Íµ¨ÌòÑÍ≥º ÏÉÅÍ¥ÄÏóÜÏù¥ ÏÇ¨Ïö©Ïù¥ Í∞ÄÎä•ÌïòÎã§.\r\n\r\nÌùîÌûà **SSL**(Secure Socket Layer) ÎòêÎäî **TLS**(Transport Layer Security)Ïù¥ÎùºÍ≥† Î∂àÎ¶¨Ïö∞Îäî ÌîÑÎ°úÌÜ†ÏΩúÏùÑ ÏÇ¨Ïö©ÌïòÏó¨ Îç∞Ïù¥ÌÑ∞Î•º ÏïîÌò∏ÌôîÌïúÎã§.\r\nÎëê Í∞ÄÏßÄÎã§ Í∞ôÏùÄ ÎÇ¥Ïö©Ïù¥ÏßÄÎßå, ÏïÑÎûòÏôÄ Í∞ôÏù¥ Íµ¨Î∂ÑÎêúÎã§:\r\n\r\n* **SSL**\r\n  * ÎÑ∑Ïä§ÏºÄÏù¥ÌîÑ(Netscape)ÏóêÏÑú Í∞úÎ∞úÌïú ÌîÑÎ°úÌÜ†ÏΩú\r\n  * 1.0: Í≥µÍ∞úÎêúÏ†Å ÏóÜÏùå (Netscape ÎÇ¥Î∂ÄÏóêÏÑúÎßå ÏÇ¨Ïö©)\r\n  * 2.0: 1995ÎÖÑ Í≥µÍ∞ú (Ïã¨Í∞ÅÌïú Î≥¥Ïïà Ï∑®ÏïΩÏ†ê Ï°¥Ïû¨Î°ú 2011ÎÖÑ Í≥µÏãù ÏÇ¨Ïö©Ï§ëÎã®)\r\n  * 3.0: 1996ÎÖÑ Í≥µÍ∞ú (ÌòÑÏû¨ÎèÑ ÏÇ¨Ïö©Ï§ëÏù¥ÏßÄÎßå, Ï∑®ÏïΩÏ†ê Ï°¥Ïû¨, 2015ÎÖÑ Í≥µÏãù ÏÇ¨Ïö© Ï§ëÎã®)\r\n* **TLS**\r\n  * IETF(Internet Engineering Task Force)ÏóêÏÑú Í∞úÎ∞úÌïú ÌîÑÎ°úÌÜ†ÏΩú\r\n  * 1.0: 1999ÎÖÑ Í≥µÍ∞ú (Ï∑®ÏïΩÏ†ê Ï°¥Ïû¨)\r\n  * 1.1: 2006ÎÖÑ Í≥µÍ∞ú (Ï∑®ÏïΩÏ†ê Î≥¥ÏôÑ)\r\n  * 1.2: 2008ÎÖÑ Í≥µÍ∞ú (ÌòÑÏû¨ ÏÇ¨Ïö©Ï§ë)\r\n  * 1.3: 2018ÎÖÑ Í≥µÍ∞ú (ÌòÑÏû¨ ÏÇ¨Ïö©Ï§ë)\r\n\r\n![TLS Í≥ÑÏ∏µ Íµ¨Ï°∞](/post/network/https/tls-layer-structure.png)\r\n:{ \"align\": \"center\", \"max-width\": \"600px\", \"description\": \"TLS Í≥ÑÏ∏µ Íµ¨Ï°∞\" }\r\n\r\nÌòÑÏû¨ÍπåÏßÄ ÏÇ¨Ïö©ÎêòÎäî TLSÎäî 1.2Î≤ÑÏ†ÑÍ≥º 1.3Î≤ÑÏ†ÑÏù¥ ÏûàÏúºÎ©∞, 1.3Î≤ÑÏ†ÑÏù¥ Î≥¥ÏïàÏÑ±Ïù¥ Îçî ÎÜíÎã§.\r\n\r\n>TLSÎäî ÌÅ¨Í≤å 2Í∞ÄÏßÄ Record ProtocolÍ≥º Handshake ProtocolÎ°ú ÎÇòÎâòÏñ¥ÏßÄÏßÄÎßå, ÏÇ¨Ïã§ÏÉÅ HandshakeÏùÄ Record ÏúÑÏóêÏÑú ÎèôÏûëÌïúÎã§.\r\n:{ \"type\": \"note\", \"icon\": \"info\" }\r\n\r\n## TLS 1.2 ÎèôÏûë Í≥ºÏ†ï::how-tls-1.2-works-in\r\nÏã§Ï†ú `TLS 1.3`Ïùò Í≤ΩÏö∞ ExtensionsÏùò `supported_versions` ÌôïÏû• ÌïÑÎìúÎ•º ÌÜµÌï¥ `TLS 1.3`ÏùÑ ÏßÄÏõêÌïúÎã§Îäî Í≤ÉÏùÑ ÏïåÎ¶∞Îã§.\r\n\r\n\r\n### 1. Client Hello::client-hello\r\n\r\n![Client Hello](/post/network/https/client-hello.png)\r\n:{ \"align\": \"center\", \"max-width\": \"500px\", \"description\": \"Client Hello\" }\r\n\r\nÎ®ºÏ†Ä [TCP Ïó∞Í≤∞](/docs/network/tcp-ip/transport-layer#tcp-3-way-handshake)Ïù¥ Ïù¥Î£®Ïñ¥ÏßÄÎ©¥ TLS HandshakeÍ∞Ä ÏãúÏûëÎêúÎã§.\r\nÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Îäî ÏÑúÎ≤ÑÏóêÍ≤å `Client Hello` Î©îÏÑ∏ÏßÄÎ•º Î≥¥ÎÇ¥Ïñ¥, ÏÑúÎ≤ÑÏôÄÏùò ÌÜµÏã†ÏùÑ ÏãúÏûëÌïúÎã§.\r\n\r\n![WireSharkÎ°ú Ï∫°Ï≥êÎêú Client Hello](/post/network/https/captured-client-hello.png)\r\n:{ \"align\": \"center\", \"max-width\": \"400px\", \"description\": \"WireSharkÎ°ú Ï∫°Ï≥êÎêú Client Hello\" }\r\n\r\n* **Version**: ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Í∞Ä ÏßÄÏõêÌïòÎäî TLS Î≤ÑÏ†Ñ 0x0303(TLS 1.2)\r\n* **Cipher Suite**\r\n  * **ÌÇ§ ÍµêÌôò**, **Ïù∏Ï¶ù**, **ÏïîÌò∏Ìôî**, **Ìï¥Ïãú ÏïåÍ≥†Î¶¨Ï¶ò** Îì±ÏùÑ Ìè¨Ìï®Ìïú ÏïîÌò∏Ìôî ÏïåÍ≥†Î¶¨Ï¶òÏùò Ï°∞Ìï©\r\n  * ![Cipher Suite Ïä§Ìéô](/post/network/https/specification-of-cipher-suite.png)\r\n* **Random**: `Random` ÌïÑÎìúÎäî ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Í∞Ä ÏÉùÏÑ±Ìïú ÎÇúÏàòÎ•º Ìè¨Ìï®ÌïúÎã§. Ïù¥Îäî ÏÑ∏ÏÖòÏùÑ ÏÉùÏÑ±Ìï† Îïå ÏÇ¨Ïö©ÎêòÎäî Í∞íÏù¥Îã§. ÏùºÎ∞òÏ†ÅÏúºÎ°ú 32Î∞îÏù¥Ìä∏Ïùò ÎÇúÏàòÎ•º ÏÉùÏÑ±ÌïúÎã§.\r\n* **Compression Method**:  `null(0x00) - ÏïïÏ∂ïÌïòÏßÄ ÏïäÏùå`ÏúºÎ°ú ÏÑ§Ï†ïÎêòÏñ¥ ÏûàÏßÄÎßå, `DEFLATE(0x01) - ZLIB ÏïïÏ∂ï`, `LSZ(0x40) - LZS ÏïïÏ∂ï` Îì±Ïù¥ ÏûàÎã§.\r\n* **Session ID**: ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Í∞Ä ÏÉùÏÑ±Ìïú ÏÑ∏ÏÖò ID (Ïû¨Ïó∞Í≤∞ Ïãú)\r\n  * Ïù¥ Í∞íÏùÄ `TLS 1.2`ÏóêÏÑúÎßå ÏÇ¨Ïö©ÎêòÍ≥†, `TLS 1.3`ÏóêÏÑúÎäî `Legacy Session ID`Î°ú Î≥ÄÍ≤Ω ÎêòÏóàÏúºÎ©∞, ÌïòÏúÑ Ìò∏ÌôòÏÑ±ÏùÑ ÏúÑÌï¥ Ïú†ÏßÄÎêòÏóàÏßÄÎßå, Ïã§Ï†úÎ°úÎäî ÏÇ¨Ïö©ÎêòÏßÄ ÏïäÎäîÎã§.\r\n* **Extensions**\r\n  * TLS 1.2Ïùò Í≤ΩÏö∞ ÏÑ†ÌÉùÏ†ÅÏúºÎ°ú ÏÇ¨Ïö©ÎêòÎäî ÌôïÏû• ÌïÑÎìúÏù¥Î©∞, `TLS 1.3`ÏóêÏÑúÎäî ÌïÑÏàòÎ°ú ÏÇ¨Ïö©ÎêúÎã§.\r\n  * **supported_versiosn**: ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Í∞Ä ÏßÄÏõêÌïòÎäî TLS Î≤ÑÏ†ÑÏùÑ ÎÇòÌÉÄÎÇ¥Îäî ÌôïÏû• ÌïÑÎìú\r\n  * **key_share**: `supported_groups`ÏóêÏÑú Î™ÖÏãúÌïú Í∑∏Î£πÎì§Ïóê ÎåÄÌïú ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Ïùò Í≥µÍ∞úÌÇ§ Í∞íÎì§\r\n    * `1-RTT` Ìï∏ÎìúÏâêÏù¥ÌÅ¨Î•º ÏúÑÌï¥ ÎØ∏Î¶¨ ÌÇ§Î•º ÏÉùÏÑ±\r\n  * **pre_shared_key(ÏÑ†ÌÉùÏÇ¨Ìï≠)**: ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Í∞Ä ÏÑúÎ≤ÑÏôÄ Í≥µÏú†Ìïú ÏÑ∏ÏÖò ID\r\n    * `0-RTT` Ìï∏ÎìúÏâêÏù¥ÌÅ¨Î•º ÏúÑÌï¥ ÏÇ¨Ïö©\r\n\r\n>ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Í∞Ä Client Hello Î©îÏÑ∏ÏßÄÎ•º Î≥¥ÎÇ¥Î©¥, TCP Í≥ÑÏ∏µÏóêÏÑú Î©îÏÑ∏ÏßÄÎ•º Î∞õÏûêÎßàÏûê ACKÍ∞Ä Ï†ÑÏÜ°ÌïúÎã§. \r\n>ÌïòÏßÄÎßå TLS Î†àÎ≤®ÏóêÏÑúÎäî ÌïòÏúÑÍ≥ÑÏ∏µ(TCP)Ïùò ÌÜµÏã†ÏùÄ ÏïåÏàò ÏóÜÍ∏∞ ÎñÑÎ¨∏Ïóê, ACK Ï†ÑÏÜ°ÏùÑ Í∏∞Îã§Î¶¨ÏßÄ ÏïäÍ≥† Server HelloÎ•º Ï†ÑÏÜ°ÌïúÎã§.   \r\n: { \"type\": \"note\", \"icon\": \"info\" }\r\n\r\n### 2. Server Hello::server-hello\r\n\r\n![Server Hello](/post/network/https/server-hello.png)\r\n:{ \"align\": \"center\", \"max-width\": \"500px\", \"description\": \"Server Hello\" }\r\n\r\nÏÑúÎ≤ÑÎäî ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Í∞Ä Î≥¥ÎÇ∏ `Client Hello` Î©îÏÑ∏ÏßÄÎ•º Î∞õÏúºÎ©¥ ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ÏóêÍ≤å `Server Hello` Î©îÏÑ∏ÏßÄÎ•º Î≥¥ÎÇ∏Îã§.\r\nÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ÏóêÏÑú Î≥¥ÎÇ∏ `Client Hello` Î©îÏÑ∏ÏßÄÎ•º ÌÜµÌï¥ ÏÑúÎ≤ÑÎäî ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Í∞Ä ÏßÄÏõêÌïòÎäî ÏïîÌò∏Ìôî ÏïåÍ≥†Î¶¨Ï¶òÏùÑ ÌôïÏù∏ÌïòÍ≥†, ÏÑúÎ≤ÑÏóêÏÑú ÏÇ¨Ïö©Ìï† ÏïîÌò∏Ìôî ÏïåÍ≥†Î¶¨Ï¶òÏùÑ ÏÑ†ÌÉùÌïúÎã§.\r\n\r\n>**Version**, **Cipher Suite**, **Random**, **Compression Method** ÌïÑÎìúÎì§ÏùÄ `Client Hello`ÏôÄ ÎèôÏùºÌïòÎã§.\r\n: { \"type\": \"note\", \"icon\": \"info\" }\r\n\r\n### 3. Certificate::certificate\r\n\r\n![TLS 1.2Ïùò Certificate](/post/network/https/certificate-in-tls-1.2.png)\r\n:{ \"align\": \"center\", \"max-width\": \"500px\", \"description\": \"TLS 1.2Ïùò Certificate\" }\r\n\r\nCertificate Î©îÏÑ∏ÏßÄÏóêÎäî Ïù∏Ï¶ùÏÑú Ï≤¥Ïù∏Ïù¥ Ìè¨Ìï®ÎêòÏñ¥ ÏûàÏúºÎ©∞ Í∞Å Ïù∏Ï¶ùÏÑúÏóêÎäî Í≥µÍ∞úÌÇ§Í∞Ä Ìè¨Ìï®ÎêòÏñ¥ ÏûàÎã§.\r\nÏù∏Ï¶ùÏÑúÎäî [ASN.1](https://en.wikipedia.org/wiki/ASN.1)(**A**bstract **S**yntax **N**otation One) ÌòïÏãùÏúºÎ°ú ÏûëÏÑ±ÎêúÎã§.\r\n\r\nX.509 Ïù∏Ï¶ùÏÑúÏùò v3 ÎîîÏßÄÌÑ∏ Ïù∏Ï¶ùÏÑúÎäî Îã§ÏùåÍ≥º Í∞ôÏùÄ ÌïÑÎìúÎ•º Ìè¨Ìï®ÌïúÎã§:\r\n\r\n* Certificate\r\n  * Version Number\r\n  * Serial Number\r\n  * Signature Algorithm ID\r\n  * Issuer Name\r\n  * Validity period\r\n    * Not Before\r\n  * Not After\r\n  * Subject name\r\n  * Subject Public Key Info\r\n    * Public Key Algorithm\r\n  * Subject Public Key\r\n  * Issuer Unique Identifier (optional)\r\n  * Subject Unique Identifier (optional)\r\n  * Extensions (optional)\r\n    * ...\r\n* Certificate Signature Algorithm\r\n* Certificate Signature\r\n\r\nÏïÑÎ¨¥Ìäº Í∞Å Ïù∏Ï¶ùÏÑúÎäî X.509 Í∑úÍ≤©ÏùÑ Îî∞Î•¥ÎäîÎç∞, Ï§ëÏöîÌïú Ï†êÏùÄ Ïù¥Í≥≥Ïóê `Í≥µÍ∞úÌÇ§`ÏôÄ `ÏÑúÎ™Ö`Ïù¥ Ìè¨Ìï®ÎêòÏñ¥ ÏûàÎã§Îäî Í≤ÉÏù¥Îã§.\r\n`ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏`Îäî `Certificate` Î©îÏÑ∏ÏßÄÎ•º Î∞õÏúºÎ©¥, Ïù∏Ï¶ùÏÑú Ï≤¥Ïù∏Ïóê ÎåÄÌï¥ Í∞Å Ïù∏Ï¶ùÏÑúÎ•º Í≤ÄÏ¶ùÌïúÎã§.\r\n\r\n```text\r\n[ÏÑúÎ≤Ñ Ïù∏Ï¶ùÏÑú] -> [Ï§ëÍ∞Ñ CA Ïù∏Ï¶ùÏÑú] -> [ROOT CA Ïù∏Ï¶ùÏÑú]\r\n```\r\n\r\nÏòàÎ•º Îì§Ïñ¥ Ïù¥Îü¨Ìïú Íµ¨Ï°∞Î°ú Ïù∏Ï¶ùÏÑú Ï≤¥Ïù∏Ïù¥ ÏûàÎã§Î©¥, ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Îäî ÏÑúÎ≤ÑÏù∏Ï¶ùÏÑúÏùò Í∏∞Î≥∏ ÌïÑÎìú, ÌôïÏû• ÌïÑÎìú, ÏÑúÎ™ÖÏùÑ Í≤ÄÏ¶ùÌïúÎã§.\r\nÍ∞Å Ïù∏Ï¶ùÏÑúÎ•º Í≤ÄÏ¶ù ÌïòÎäî Î∞©Î≤ïÏùÄ Ïù¥ÎûòÏôÄ Í∞ôÎã§.\r\n\r\n![Ïù∏Ï¶ùÏÑúÏùò Í≥µÍ∞úÌÇ§ Í≤ÄÏ¶ù](/post/network/https/hilarious-certificate.png)\r\n:{ \"align\": \"center\", \"max-width\": \"400px\", \"description\": \"Ïù∏Ï¶ùÏÑúÏùò Í≥µÍ∞úÌÇ§\" }\r\n\r\n1. Ïù∏Ï¶ùÏÑúÏóêÏÑú `Certificate` Î∂ÄÎ∂ÑÏùò `ASN.1 DER` Ïù∏ÏΩîÎî©Îêú Î∞îÏù¥Ìä∏ Î¨∏ÏûêÏó¥ÏùÑ `Certificate Signature Algorithm`Í∞íÏùÑ Ïù¥Ïö©Ìï¥ Ìï¥Ïã±ÌïúÎã§.\r\n2. ÏÉÅÏúÑ Ïù∏Ï¶ùÏÑúÏùò Í≥µÍ∞úÌÇ§Î°ú `Certificate Signature`Î•º Î≥µÌò∏ÌôîÌïòÏó¨ Ìï¥ÏãúÍ∞íÏùÑ ÏñªÎäîÎã§.\r\n3. 1Î≤àÏóêÏÑú ÏñªÏùÄ Ìï¥ÏãúÍ∞íÍ≥º 2Î≤àÏóêÏÑú ÏñªÏùÄ Ìï¥ÏãúÍ∞íÏùÑ ÎπÑÍµêÌïòÏó¨ Ïù∏Ï¶ùÏÑúÏùò Ïú†Ìö®ÏÑ±ÏùÑ Í≤ÄÏ¶ùÌïúÎã§.\r\n\r\n>Root CAÏùò Ïù∏Ï¶ùÏÑúÎäî ÏûêÏ≤¥ ÏÑúÎ™Ö(Self-Signed) Ïù∏Ï¶ùÏÑúÏù¥Î©∞, **Î∏åÎùºÏö∞Ï†Ä**Îäî ÎåÄÎ∂ÄÎ∂ÑÏùò Root CA Ïù∏Ï¶ùÏÑúÎ•º ÎÇ¥Ïû•ÌïòÍ≥† ÏûàÎã§. \r\n> ÎÇ¥Ïû•Îêú Ïù∏Ï¶ùÏÑú Î™©Î°ùÍ≥º Ïù∏Ï¶ùÏÑú Ï≤¥Ïù∏Ïùò Root Ïù∏Ï¶ùÏÑúÎ•º ÎπÑÍµêÌïòÏó¨ Í≤ÄÏ¶ùÌïúÎã§. \r\n:{ \"type\": \"tip\", \"icon\": \"lightbulb\" }\r\n\r\n\r\n![Î∏åÎùºÏö∞Ï†ÄÏùò Ïù∏Ï¶ùÏÑú Í≤ÄÏ¶ù](/post/network/https/hilarious-verification.png)\r\n:{ \"align\": \"center\", \"max-width\": \"400px\", \"description\": \"Î¨¥ÏÑúÏö¥ Î∏åÎùºÏö∞Ï†ÄÏùò Ïù∏Ï¶ùÏÑú Í≤ÄÏ¶ù\" }\r\n\r\n>Ïù¥Îäî Root CAÍ∞Ä Ï†úÍ≥µÌïòÎäî Ïù∏Ï¶ùÏÑúÍ∞Ä Ïã†Î¢∞Ìï† Ïàò ÏûàÎäî Ïù∏Ï¶ùÏÑúÏù∏ÏßÄÎ•º Í≤ÄÏ¶ùÌïòÎäî Í≥ºÏ†ïÏù¥Îã§.\r\n: { \"type\": \"warning\", \"icon\": \"info\" }\r\n\r\n### 3-5. Server Key Exchange::server-key-exchange\r\n\r\n![Server Key Exchange](/post/network/https/server-key-exchange.png)\r\n:{ \"align\": \"center\", \"max-width\": \"500px\", \"description\": \"Server Key Exchange\" }\r\n\r\n`Server Key Exchage` Î©îÏÑ∏ÏßÄÎäî ÏùºÎ∞òÏ†ÅÏù∏ ÏÉÅÌô©ÏóêÏÑúÎäî Ï†ÑÏÜ°ÎêòÏßÄ ÏïäÏßÄÎßå, `Server Hello` Î©îÏÑ∏ÏßÄÏùò `Cipher Suite`Í∞Ä ÏûÑÏãú ÍµêÌôò ÏïåÍ≥†Î¶¨Ï¶òÏùÑ ÏÇ¨Ïö©ÌïòÎäî Í≤ΩÏö∞ Ï†ÑÏÜ°ÎêúÎã§.\r\n\r\nÏûÑÏãú ÌÇ§ ÏïåÍ≥†Î¶¨Ï¶òÏùÄ DHE(Diffie-Hellman Ephemeral) ÎòêÎäî ECDHE(Elliptic Curve Diffie-Hellman Ephemeral) Îì±Ïù¥ ÏûàÎã§.\r\n\r\n![WireSharkÎ°ú Ï∫°Ï≥êÎêú Server Key Exchange](/post/network/https/captured-server-key-exchange.png)\r\n:{ \"align\": \"center\", \"max-width\": \"400px\", \"description\": \"WireSharkÎ°ú Ï∫°Ï≥êÎêú Server Key Exchange\" }\r\n\r\n`Server Key Exchange` Î©îÏÑ∏ÏßÄÎ•º Î∞õÏùÄ ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Îäî ÏÑúÎ™ÖÏùÑ ÌôïÏù∏ ÌïòÍ≥†, ÏûÑÏãú Í≥µÍ∞úÌÇ§Î•º Ï†ÄÏû•ÌïúÎã§. Í∑∏ÌõÑ ÌÇ§ÍµêÌôòÏóê ÌïÑÏöîÌïú ÏûêÏ≤¥ ÏûÑÏãú ÌÇ§ ÏÉùÏÑ±ÏùÑ Ï§ÄÎπÑÌïúÎã§.\r\n\r\n### 4. Client Key Exchange::client-key-exchange\r\n\r\nTLSÏóêÏÑú Î©îÏÑ∏ÏßÄÎ•º ÏïîÌò∏Ìôî ÌïòÍ≥† Î≥µÌò∏Ìôî ÌïòÎ†§Î©¥ Ïñ¥Îñ§ ÏÑ∏ÏÖòÌÇ§Í∞Ä ÏûàÏñ¥ÏïºÌïúÎã§. ÌïòÏßÄÎßå Í∑∏ ÏÑ∏ÏÖòÌÇ§Î•º ÎßåÎìúÎ†§Î©¥ Î®ºÏ†Ä `Premaster Secret`Ïù¥ÎùºÎäî Í∞íÏù¥ ÎßåÎì§Ïñ¥Ï†∏Ïïº ÌïúÎã§.\r\n\r\nÌïòÏßÄÎßå, Ïù¥ Í∞íÏùÄ `Cipher Suite`Ïùò ÌÇ§ÍµêÌôò ÏïåÍ≥†Î¶¨Ï¶òÏóê Îî∞Îùº ÎßåÎìúÎäî Î∞©ÏãùÏù¥ Ï†úÍ∞ÅÍ∞ÅÏù¥Îã§. ÏïÑÎûòÎäî ÏïåÍ≥†Î¶¨Ï¶òÎ≥Ñ Ï∞®Ïù¥Î•º ÏÑ§Î™ÖÌïúÎã§.\r\n\r\n![Client Key Exchange](/post/network/https/client-key-exchange.png)\r\n:{ \"align\": \"center\", \"max-width\": \"500px\", \"description\": \"Client Key Exchange\" }\r\n\r\n* **RSA**:\r\n  * ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Ïùò `Premaster Secret`Îäî 48Î∞îÏù¥Ìä∏ Ïù¥Îã§.\r\n  * Îß® ÏïûÏùò 2Î∞îÏù¥Ìä∏Îäî TLS ÌîÑÎ°úÌÜ†ÏΩú Î≤ÑÏ†ÑÏù∏ `0x0303 0x0303`ÏùÑ ÎÑ£ÎäîÎã§.\r\n  * ÎÇòÎ®∏ÏßÄ 46Î∞îÏù¥Ìä∏ÏóêÎäî ÏïîÌò∏ÌïôÏ†ÅÏúºÎ°ú ÏïàÏ†ÑÌïú ÎÇúÏàò ÏÉùÏÑ±Í∏∞Î°ú ÎûúÎç§Í∞íÏùÑ ÏÉùÏÑ±ÌïòÏó¨ ÎßåÎì†Îã§.\r\n* **DHE**\r\n  * ÏïîÌò∏Ìïô Ï†ÅÏúºÎ°ú ÏïàÏ†ÑÌïú ÎÇúÏàò ÏÉùÏÑ±Í∏∞Î°ú -1~(p-1) ÏÇ¨Ïù¥Ïùò ÎûúÎç§Ìïú ÌÅ∞ Ï†ïÏàòÎ°ú **Í∞úÏù∏ÌÇ§ A**Î•º ÎßåÎì†Îã§.\r\n  * g^A mod p(g: ÏÉùÏÑ±Ïûê, p: ÏÜåÏàò, A: Í∞úÏù∏ÌÇ§)Î°ú **Í≥µÍ∞úÌÇ§**Î•º ÎßåÎì†Îã§.\r\n* **ECDHE**\r\n  * ÏïîÌò∏Ìïô Ï†ÅÏúºÎ°ú ÏïàÏ†ÑÌïú ÎÇúÏàò ÏÉùÏÑ±Í∏∞Î°ú 1~(Í≥°ÏÑ†Ï∞®Ïàò-1) ÏÇ¨Ïù¥Ïùò ÎûúÎç§Ìïú ÌÅ∞ Ï†ïÏàòÎ°ú **Í∞úÏù∏ÌÇ§**Î•º ÎßåÎì†Îã§.\r\n  * ÌÉÄÏõê Í≥°ÏÑ†(EC)Ïùò Í∏∞Ï§ÄÏ†ê(Generator Point)Ïóê Í∞úÏù∏ÌÇ§Î•º [Ïä§ÏπºÎùº]() Í≥±ÏÖàÌïòÏó¨ ÏÉàÎ°úÏö¥ Ìè¨Ïù∏Ìä∏ Ï¢åÌëú(**Í≥µÍ∞úÌÇ§**)Î•º ÎßåÎì†Îã§.\r\n\r\nÍ∞Å ÌÇ§ ÍµêÌôò ÏïåÍ≥†Î¶¨Ï¶ò Î≥Ñ ÏÉùÏÑ±Îêú Ï†ïÎ≥¥Îäî `Client Key Exchange` Î©îÏÑ∏ÏßÄÏóê Îã¥Í≤® ÏÑúÎ≤ÑÎ°ú Ï†ÑÏÜ°ÎêúÎã§.\r\n\r\n>RSAÏùò Í≤ΩÏö∞ `Premaster Secret`ÏùÑ ÏÉùÏÑ±ÌõÑ ÏÑúÎ≤Ñ Ïù∏Ï¶ùÏÑúÏùò Í≥µÍ∞úÌÇ§Î°ú ÏïîÌò∏Ìôî ÌïòÏó¨ `Client Key Exchange` Î©îÏÑ∏ÏßÄÏóê Îã¥ÏïÑ Ï†ÑÏÜ°ÌïúÎã§.\r\n: { \"type\": \"tip\", \"icon\": \"lightbulb\" }\r\n\r\n**RSA**Îäî ÏÑúÎ≤ÑÎ°ú ÏïîÌò∏Ìôî Îêú `Premaster Secret`ÏùÑ Ï†ÑÏÜ°ÌïòÏòÄÎã§. Ïù¥Îäî ÏÑúÎ≤ÑÏóêÏÑú ÏûêÏã†Ïùò Í∞úÏù∏ÌÇ§Î°ú Î≥µÌò∏ÌôîÌïòÏó¨ `Premaster Secret`ÏùÑ ÏñªÏùÑÏàò ÏûàÏßÄÎßå,\r\n**DHE**, **ECDHE**Îäî ÏÑúÎ≤ÑÏùò Í≥µÍ∞úÌÇ§ÏôÄ Ï†ÑÎã¨Î∞õÏùÄ ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Ïùò Í≥µÍ∞úÌÇ§Î°ú `Premaster Secret`ÏùÑ ÏÉùÏÑ±ÌïúÎã§.\r\n\r\n\r\n![ÏÑúÎ≤ÑÏôÄ ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Ïùò Í≥µÍ∞úÌÇ§Î°ú Premaster SecretÏùÑ ÎßåÎì†Îã§.](/post/network/https/hilarious-process-from-making-premaster-secret.png)\r\n:{ \"align\": \"center\", \"max-width\": \"400px\", \"description\": \"ÏÑúÎ≤ÑÏôÄ ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Ïùò Í≥µÍ∞úÌÇ§Î°ú Premaster SecretÏùÑ ÎßåÎì†Îã§.\" }\r\n\r\n#### 4.5 Sesion Key ÏÉùÏÑ±::session-key-generation\r\n\r\n`Client Key Exchange`Î©îÏÑ∏ÏßÄÍπåÏßÄ Ï†ÑÏÜ°ÌñàÎã§Î©¥, ÏñëÏ∏° Î™®Îëê `Premaster Secret`ÏùÑ Í∞ÄÏßÄÍ≥† ÏûàÎã§.\r\nÏù¥Ï†ú Ïù¥ Í∞íÏùÑ Ïù¥Ïö©ÌïòÏó¨, `Master Secret`ÏùÑ ÏÉùÏÑ±ÌïòÍ≥†, `Master Secret`ÏùÑ Ïù¥Ïö©ÌïòÏó¨ `Session Key`Î•º ÏÉùÏÑ±ÌïúÎã§.\r\n\r\n**Master Secret**ÏùÄ **PRF**(Pseudo Random Function)Î•º Ïù¥Ïö©ÌïòÏó¨ `Master secret = PRF(Premaster Secret, \"master secret\", ClientHello.random + ServerHello.random)`Î°ú ÏÉùÏÑ±ÌïúÎã§.\r\n\r\nÏù¥Î†áÍ≤å ÏÉùÏÑ±Îêú `Master Secret`ÏóêÏÑúÎäî Cipher SuiteÏóê Îî∞Îùº Ïó¨Îü¨Í∞ÄÏßÄ Í∞íÏùÑ Ï∂îÏ∂úÌï† Ïàò ÏûàÎã§.\r\n \r\n* **Client Write MAC Key**: ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Í∞Ä ÏÑúÎ≤ÑÎ°ú Î≥¥ÎÇ¥Îäî Î©îÏÑ∏ÏßÄÎ•º MAC(Message Authentication Code)ÌïòÍ∏∞ ÏúÑÌïú ÌÇ§\r\n* **Server Write MAC Key**: ÏÑúÎ≤ÑÍ∞Ä ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Î°ú Î≥¥ÎÇ¥Îäî Î©îÏÑ∏ÏßÄÎ•º MACÌïòÍ∏∞ ÏúÑÌïú ÌÇ§\r\n* **Client Write Key**: ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Í∞Ä ÏÑúÎ≤ÑÎ°ú Î≥¥ÎÇ¥Îäî Î©îÏÑ∏ÏßÄÎ•º ÏïîÌò∏ÌôîÌïòÍ∏∞ ÏúÑÌïú ÌÇ§\r\n* **Server Write Key**: ÏÑúÎ≤ÑÍ∞Ä ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Î°ú Î≥¥ÎÇ¥Îäî Î©îÏÑ∏ÏßÄÎ•º ÏïîÌò∏ÌôîÌïòÍ∏∞ ÏúÑÌïú ÌÇ§\r\n* **Client Write IV**: ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Í∞Ä ÏÑúÎ≤ÑÎ°ú Î≥¥ÎÇ¥Îäî Î©îÏÑ∏ÏßÄÎ•º ÏïîÌò∏ÌôîÌïòÍ∏∞ ÏúÑÌïú Ï¥àÍ∏∞Ìôî Î≤°ÌÑ∞\r\n* **Server Write IV**: ÏÑúÎ≤ÑÍ∞Ä ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Î°ú Î≥¥ÎÇ¥Îäî Î©îÏÑ∏ÏßÄÎ•º ÏïîÌò∏ÌôîÌïòÍ∏∞ ÏúÑÌïú Ï¥àÍ∏∞Ìôî Î≤°\r\n\r\nÏù¥Ï§ë Ïã§Ï†ú Î©îÏÑ∏ÏßÄÎ•º Ïïî¬∑Î≥µÌò∏Ìôî ÌïòÎäîÎç∞ ÏÇ¨Ïö©ÎêòÎäî ÌÇ§Î•º ÏÑ∏ÏÖòÌÇ§Îùº Î∂ÄÎ•∏Îã§.\r\n**ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏**Îäî **Client Write Key**Î°ú ÏïîÌò∏Ìôî, **Server Write Key**Î°ú Î≥µÌò∏ÌôîÎ•º ÌïòÎ©∞,\r\n**ÏÑúÎ≤Ñ**Îäî **Server Write Key**Î°ú ÏïîÌò∏Ìôî, **Client Write Key**Î°ú Î≥µÌò∏ÌôîÎ•º ÌïúÎã§.\r\n\r\n>ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ÏôÄ ÏÑúÎ≤ÑÎäî Î©îÏÑ∏ÏßÄÎ•º Ïïî¬∑Î≥µÌò∏Ìôî ÌïòÍ∏∞ ÏúÑÌïú Ï§ÄÎπÑÎ•º ÎßàÏ≥§Îã§. Ïù¥Ï†úÎ∂ÄÌÑ∞Îäî ÏïîÌò∏ÌôîÎêú Î©îÏÑ∏ÏßÄÎ•º Ï£ºÍ≥† Î∞õÏùÑ Ïàò ÏûàÎã§.\r\n: { \"type\": \"note\", \"icon\": \"info\" }\r\n\r\n\r\n### 5. Change Cipher Spec and Finished::change-cipher-spec-and-finished\r\n\r\n![Change Cipher SpecÍ≥º and Finished](/post/network/https/change-cipher-spec-and-finished.png)\r\n:{ \"align\": \"center\", \"max-width\": \"600px\", \"description\": \"Change CipherÍ≥º and Finished\" }\r\n\r\n`Change Cipher Spec` Î©îÏÑ∏ÏßÄÎäî ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ÏôÄ ÏÑúÎ≤ÑÍ∞Ä ÏïîÌò∏ÌôîÎêú Î©îÏÑ∏ÏßÄÎ•º Ï£ºÍ≥† Î∞õÏùÑ Ï§ÄÎπÑÍ∞Ä ÎêòÏóàÏùåÏùÑ ÏïåÎ¶¨Îäî Î©îÏÑ∏ÏßÄÏù¥Îã§.\r\nÏù¥ Î©îÏÑ∏ÏßÄ Ïù¥ÌõÑ Í∞ÅÏû•ÏπòÎäî `Finished`Î°ú Ï≤´ ÏïîÌò∏Ìôî Î©îÏÑ∏ÏßÄÎ•º Ï†ÑÏÜ°ÌïúÎã§.\r\n\r\n>Finished Î©îÏÑ∏ÏßÄÍπåÏßÄ Î≥¥ÎÇ∏Îã§Î©¥ TLS Ìï∏ÎìúÏâêÏù¥ÌÅ¨Í∞Ä ÏôÑÎ£åÎêúÎã§.\r\n: { \"type\": \"tip\", \"icon\": \"check-circle\" }\r\n"
  },
  {
    "path": "/docs/algorithm/heap-sort",
    "header": {
      "layout": "post",
      "title": "Ìûô Ï†ïÎ†¨ (Heap Sort)",
      "tags": [
        "Java",
        "Algorithm",
        "Sort",
        "Heap Sort",
        "Heap"
      ],
      "date": 1653482640000,
      "profile-image": "/post/profile/profile4.jpg",
      "thumbnail": "/post/algorithm/heap-sort/sort-8.svg",
      "current-company": "Herit Corporation",
      "current-position": "Backend Server Developer",
      "summary": "Ìûô Ï†ïÎ†¨",
      "expose-images": true,
      "excerpt-separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÏïåÍ≥†Î¶¨Ï¶ò"
      ],
      "images": [
        {
          "src": "/post/algorithm/heap-sort/sort-1.svg",
          "alt": "Í∞ÄÏû• Ïö∞ÏÑ†ÏàúÏúÑÍ∞Ä ÎÜíÏùÄ Í∞íÏùÑ Îí§Î°ú Ïù¥ÎèôÏãúÌÇ§Í≥† Îã§Ïãú Î£®Ìä∏ÎÖ∏ÎìúÎ∂ÄÌÑ∞ ÌûôÏùÑ ÎßåÎì†Îã§. Ïù¥ Îïå ÎÖ∏ÎìúÏùò Î≤îÏúÑÏóêÏÑú Ï†ïÎ†¨Îêú Í∞úÏàò ÎßåÌÅºÎßå Ï†úÏô∏ÌïúÎã§."
        },
        {
          "src": "/post/algorithm/heap-sort/sort-2.svg",
          "alt": "ÎëêÎ≤àÏß∏ÎèÑ ÎèôÏùºÌïòÍ≤å Î£®Ìä∏Î•º Îí§Î°ú Î≥¥ÎÇ¥Í≥† Îã§Ïãú ÌûôÏùÑ ÎßåÎì†Îã§."
        },
        {
          "src": "/post/algorithm/heap-sort/sort-3.svg",
          "alt": "Ïù¥ Í≥ºÏ†ïÏóêÏÑú Ï†úÏô∏Îêú Î≤îÏúÑÎäî Ïò§Î¶ÑÏ∞®ÏàúÏúºÎ°ú Ï†êÏ†ê Ï†ïÎ†¨ÎêòÎäî Í≤ÉÏùÑ Î≥º Ïàò ÏûàÎã§."
        },
        {
          "src": "/post/algorithm/heap-sort/sort-4.svg",
          "alt": "Ï†ïÎ†¨ÎêòÎäî ÏöîÏÜåÍ∞Ä ÎßéÏùÑ Ïàò Î°ù ÌûôÏùÑ ÎßåÎìúÎì§Í∏∞ ÏúÑÌï¥ ÌÉêÏÉâÌïòÎäî ÏãúÍ∞Ñ ÎòêÌïú Ï§ÑÏñ¥Îì†Îã§."
        },
        {
          "src": "/post/algorithm/heap-sort/sort-5.svg",
          "alt": "Í∞Å ÏöîÏÜåÎßàÎã§ Ï†ïÎ†¨ÎêòÎäî ÏãúÍ∞ÑÏù¥ logNÏù¥Í∏∞ ÎïåÎ¨∏Ïù¥Îã§."
        },
        {
          "src": "/post/algorithm/heap-sort/sort-6.svg",
          "alt": ""
        },
        {
          "src": "/post/algorithm/heap-sort/sort-7.svg",
          "alt": ""
        },
        {
          "src": "/post/algorithm/heap-sort/sort-8.svg",
          "alt": "ÎßàÏßÄÎßâ ÏöîÏÜåÍπåÏßÄ Ï†ïÎ†¨"
        }
      ],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 3,
            "origin": "HeapÏùÑ Ïù¥Ïö©Ìï¥ Ï†ïÎ†¨ÏùÑ ÌïòÎäî Î∞©Î≤ï::how-to-sort-by-heap",
            "title": "HeapÏùÑ Ïù¥Ïö©Ìï¥ Ï†ïÎ†¨ÏùÑ ÌïòÎäî Î∞©Î≤ï",
            "fragment": "how-to-sort-by-heap",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Íµ¨ÌòÑ ÏΩîÎìú (Java)::implementation-code",
            "title": "Íµ¨ÌòÑ ÏΩîÎìú (Java)",
            "fragment": "implementation-code",
            "children": []
          }
        ]
      }
    },
    "description": "Ïù¥Ï†ÑÏóê ÌïôÏäµ ÌñàÎçò Ïö∞ÏÑ†ÏàúÏúÑÌÅê \"heap\"ÏúºÎ°ú Í∞ÑÎã®Ìûà Ï†ïÎ†¨ÏùÑ Íµ¨ÌòÑ Ìï¥Î≥¥Ïûê.",
    "content": "\r\n### HeapÏùÑ Ïù¥Ïö©Ìï¥ Ï†ïÎ†¨ÏùÑ ÌïòÎäî Î∞©Î≤ï::how-to-sort-by-heap\r\n\r\nÌûô Ï†ïÎ†¨ÏùÑ ÏúÑÌï¥ÏÑúÎäî ÏÇ¨Ï†ÑÏóê ÏôÑÏ†Ñ Ïù¥ÏßÑ Ìä∏Î¶¨Î•º ÌûôÏúºÎ°ú ÎßåÎì§Í≥†, Ï†ïÎ†¨ÏùÑ ÏàòÌñâÌï† Ïàò ÏûàÏäµÎãàÎã§.\r\nÏúÑÏóêÏÑú ÎßåÎì† ÌûôÏùÑ ÌÜµÌï¥ Ï†ïÎ†¨ÏùÑ ÌïòÎäî Î∞©Î≤ïÏùÑ Íµ¨ÌòÑÌï©ÎãàÎã§.  \r\nÌûô Ï†ïÎ†¨ÏùÄ Í∞ÑÎã®ÌïòÍ≤å, ÏïÑÎûòÏùò Ï†ïÎ†¨ÌïòÎäî ÏàúÏÑúÎ•º Í∞ÄÏßÄÍ≥†ÏûàÏäµÎãàÎã§.\r\n\r\n1. ÏµúÏÉÅÏúÑ ÎÖ∏Îìú `A`ÏôÄ Í∞ÄÏû• ÎÅùÏùò ÎÖ∏Îìú `B`Î•º Î∞îÍæºÎã§.\r\n2. Î∞îÍøîÏßÑ AÎäî Îß®Îí§Î°ú Í∞ÄÎ©∞,ÌûôÏóêÏÑú Ï†úÏô∏ÌïúÎã§. \r\n3. Î∞îÍæº Í∞í `B`Îäî, ÏûêÏã†Ïùò ÏûêÏãùÏù¥ ÏûàÎã§Î©¥, ÎëêÍ∞úÎ•º ÎπÑÍµêÌïòÏó¨ Í∞ÄÏû• ÌÅ∞ Í∞íÍ≥º Îßû Î∞îÍæºÎã§.\r\n4. `3.`Ïùò ÎÇ¥Ïö©ÏùÑ ÌûôÏù¥Îê†ÎïåÍπåÏßÄ Î∞òÎ≥µÌïúÎã§.\r\n\r\nÏ†ïÎ†¨ÏùÑ Ìï† ÎïåÎäî HeapÏùò Ïö∞ÏÑ†Í∞íÏùÑ Ïù¥Ïö©Ìï¥ ÏßÑÌñâÌïòÍ∏∞ ÎïåÎ¨∏Ïóê `ÏµúÎåÄ Ìûô` ÏúºÎ°úÎäî Ïò§Î¶ÑÏ∞®Ïàú Ï†ïÎ†¨, `ÏµúÏÜå Ìûô`ÏúºÎ°úÎäî ÎÇ¥Î¶ºÏ∞®Ïàú Ï†ïÎ†¨ÏùÑ Ìï† Ïàò ÏûàÎã§.\r\n\r\n::image-group\r\n\r\n![Í∞ÄÏû• Ïö∞ÏÑ†ÏàúÏúÑÍ∞Ä ÎÜíÏùÄ Í∞íÏùÑ Îí§Î°ú Ïù¥ÎèôÏãúÌÇ§Í≥† Îã§Ïãú Î£®Ìä∏ÎÖ∏ÎìúÎ∂ÄÌÑ∞ ÌûôÏùÑ ÎßåÎì†Îã§. Ïù¥ Îïå ÎÖ∏ÎìúÏùò Î≤îÏúÑÏóêÏÑú Ï†ïÎ†¨Îêú Í∞úÏàò ÎßåÌÅºÎßå Ï†úÏô∏ÌïúÎã§.](/post/algorithm/heap-sort/sort-1.svg)\r\n\r\n![ÎëêÎ≤àÏß∏ÎèÑ ÎèôÏùºÌïòÍ≤å Î£®Ìä∏Î•º Îí§Î°ú Î≥¥ÎÇ¥Í≥† Îã§Ïãú ÌûôÏùÑ ÎßåÎì†Îã§.](/post/algorithm/heap-sort/sort-2.svg)\r\n\r\n![Ïù¥ Í≥ºÏ†ïÏóêÏÑú Ï†úÏô∏Îêú Î≤îÏúÑÎäî Ïò§Î¶ÑÏ∞®ÏàúÏúºÎ°ú Ï†êÏ†ê Ï†ïÎ†¨ÎêòÎäî Í≤ÉÏùÑ Î≥º Ïàò ÏûàÎã§.](/post/algorithm/heap-sort/sort-3.svg)\r\n\r\n![Ï†ïÎ†¨ÎêòÎäî ÏöîÏÜåÍ∞Ä ÎßéÏùÑ Ïàò Î°ù ÌûôÏùÑ ÎßåÎìúÎì§Í∏∞ ÏúÑÌï¥ ÌÉêÏÉâÌïòÎäî ÏãúÍ∞Ñ ÎòêÌïú Ï§ÑÏñ¥Îì†Îã§.](/post/algorithm/heap-sort/sort-4.svg)\r\n\r\n![Í∞Å ÏöîÏÜåÎßàÎã§ Ï†ïÎ†¨ÎêòÎäî ÏãúÍ∞ÑÏù¥ logNÏù¥Í∏∞ ÎïåÎ¨∏Ïù¥Îã§.](/post/algorithm/heap-sort/sort-5.svg)\r\n\r\n![](/post/algorithm/heap-sort/sort-6.svg)\r\n\r\n![](/post/algorithm/heap-sort/sort-7.svg)\r\n\r\n![ÎßàÏßÄÎßâ ÏöîÏÜåÍπåÏßÄ Ï†ïÎ†¨](/post/algorithm/heap-sort/sort-8.svg)\r\n\r\n::\r\n\r\n\r\n## Íµ¨ÌòÑ ÏΩîÎìú (Java)::implementation-code\r\n\r\n::code-group\r\n```java::ÎÖ∏Îìú ÎπÑÍµê\r\n//== ÎÖ∏ÎìúÏôÄ Í∑∏ ÏûêÏãùÏ§ëÏóêÏÑú ÎçîÌÅ∞(ÎòêÎäî ÏûëÏùÄ) ÏúÑÏπòÎ•º Ï∞æÎäî Î©îÏÜåÎìú ==//\r\npublic static int findLargest(int arr[], int node, int eh) {\r\n    // first child\r\n    int fc = (2 * (node + 1)) - 1;\r\n\r\n    if (fc + 1 < eh) {\r\n        if (arr[fc] <= arr[fc + 1]) {\r\n            return arr[fc + 1] <= arr[node] ? node : fc + 1;\r\n        } else {\r\n            return arr[fc] <= arr[node] ? node : fc;\r\n        }\r\n    }\r\n    if (fc < eh && arr[node] < arr[fc]) {\r\n        return fc;\r\n    } else {\r\n        return node;\r\n    }\r\n}\r\n```\r\n```java::Í∞í ÍµêÌôò\r\n//== Í∞íÏùÑ ÏïÑÎûòÎ°ú ÎÇ¥Î¶¨Îäî Î©îÏÜåÎìú ==//\r\n/**\r\n * Í∞ÑÎã®ÌïòÍ≤å Î≥¥Î©¥ Ìä∏Î¶¨ÏóêÏÑú ÎßàÏßÄÎßâ ÌûôÏùò ÏúÑÏπòÎ•º Íµ¨ÌïòÍ≥†,\r\n * Î£®Ìä∏ ÎÖ∏ÎìúÍπåÏßÄ Ïó≠ÏàúÏúºÎ°ú ÌûôÏùÑ ÎßåÎì§Ïñ¥Í∞ëÎãàÎã§.\r\n * \r\n * ÏµúÎåÄ Ìûô(ÎòêÎäî ÏµúÏÜå Ìûô)Ïùò Ï°∞Í±¥Ïóê Îî∞Îùº ÎçîÌÅ∞(ÎòêÎäî Îçî ÏûëÏùÄ)Í∞íÏùÑ Í∏∞Ï§ÄÏúºÎ°ú,\r\n * Ìï¥Îãπ ÎÖ∏ÎìúÎ•º ÏúÑÎ°úÏò¨Î¶¨Í≥† Î≥ÄÍ≤ΩÎêú ÎåÄÏÉÅÏùÄ ÏïÑÎûòÎ°ú ÎÇ¥Î†§Í∞ÄÎ©∞ Í≥ÑÏÜç Î∞îÍøâÎãàÎã§.\r\n */\r\npublic static void pushDown(int arr[], int node, int eh) {\r\n    do {\r\n        System.out.println(\"j: \" + node);\r\n        int temp = arr[node];\r\n        int large = findLargest(arr, node, eh);\r\n        System.out.println(drawBinaryTree(arr));\r\n\r\n        if (large == node)\r\n            break;\r\n\r\n        arr[node] = arr[large];\r\n        arr[large] = temp;\r\n\r\n        node = large;\r\n    } while (node <= eh);\r\n}\r\n```\r\n\r\n```java::Ï†ïÎ†¨\r\npublic static void sort(int heap[]) {\r\n    int last = arr.length;\r\n    makeHeap(arr);\r\n\r\n    while (--last >= 0) {\r\n\r\n        int temp = arr[0];\r\n        arr[0] = arr[last];\r\n        arr[last] = temp;\r\n\r\n        System.out.println(\"last: \" + last);\r\n        pushDown(arr, 0, last);\r\n    }\r\n    ;\r\n}\r\n```\r\n\r\n```java::Ï∂úÎ†• Î©îÏÜåÎìú\r\npublic static String drawBinaryTree(int arr[]) {\r\n    StringBuilder builder = new StringBuilder();\r\n\r\n    int nol = (int) (Math.log(arr.length) / Math.log(2)) + 1;\r\n    int max = (int) Math.pow(2, nol - 1);\r\n\r\n    int printed = 0;\r\n    for (int i = 0; i < nol; i++) {\r\n        int perFloor = (int) Math.pow(2, i);\r\n        int tab = (max - perFloor) / 2 + (max - perFloor) % 2;\r\n        int last = printed + perFloor;\r\n\r\n        for (int j = 0; j < tab; j++) {\r\n            builder.append(\"  \");\r\n        }\r\n        for (int j = printed; (j < arr.length && j < last); j++) {\r\n            builder.append(String.format(\"(%d)\", arr[j]));\r\n        }\r\n        builder.append(\"\\n\");\r\n        printed += perFloor;\r\n    }\r\n\r\n    return builder.toString();\r\n}\r\n```\r\n\r\n::\r\n\r\n```java::Î©îÏù∏ Ìï®Ïàò\r\npublic static void sort(int [] heap) throws Exception {\r\n    Heap.sort(arr);\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n"
  },
  {
    "path": "/docs/data-structure/heap",
    "header": {
      "layout": "post",
      "title": "Ìûô (Heap)",
      "tags": [
        "Java",
        "Data Structure",
        "Sort",
        "Heap Sort",
        "Heap"
      ],
      "date": 1651837980000,
      "profile-image": "/post/profile/profile4.jpg",
      "thumbnail": "/post/data-structure/heap/index.svg",
      "current-company": "Herit Corporation",
      "current-position": "Backend Server Developer",
      "summary": "Ìûô",
      "expose-images": true,
      "excerpt-separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÏûêÎ£åÍµ¨Ï°∞"
      ],
      "images": [
        {
          "src": "/post/data-structure/heap/tree-images.svg",
          "alt": "ÏúÑ Ìä∏Î¶¨Ï§ë Ïñ¥Îñ§Í≤ÉÏù¥ ÌûôÏùºÍπå?"
        },
        {
          "src": "/post/data-structure/heap/first-iteration.svg",
          "alt": "ÌûôÏùÑ ÎßåÎìúÎ†§Î©¥ ÏôÑÏ†Ñ Ïù¥ÏßÑÌä∏Î¶¨Í∞Ä ÏûàÏñ¥Ïïº ÌïúÎã§."
        },
        {
          "src": "/post/data-structure/heap/other-iteration.svg",
          "alt": "ÎßåÏïΩ ÎßàÏßÄÎßâ ÎÇ¥Î∂ÄÎÖ∏ÎìúÎ∂ÄÌÑ∞ ÏàúÌöåÌï† Îïå, ÏµÄÎåÄÌûôÏùÑ ÎßåÎìúÎ†§Î©¥ ÏúÑÏôÄ Í∞ôÏù¥ ÎßåÎì§Ïàò ÏûàÏñ¥Ïöî."
        },
        {
          "src": "/post/data-structure/heap/last-iteration.svg",
          "alt": "ÏµúÎåÄÌûôÏùÑ ÎßåÎì§Ïñ¥ Ïù¥Îü∞ ÌòïÌÉúÎ°ú ÎÖ∏ÎìúÎ•º ÎÇòÎàåÏàò ÏûàÏñ¥Ïöî."
        },
        {
          "src": "/post/data-structure/heap/add-new-17.svg",
          "alt": "ÎßåÏïΩ Îã§ÏùåÏùò ÌûôÏóêÏÑú 17Ïù¥ÎùºÎäî Í∞íÏù¥ Ï∂îÍ∞Ä ÎêúÎã§Î©¥"
        },
        {
          "src": "/post/data-structure/heap/add-new-17-2.svg",
          "alt": "Ïù¥Îü∞ÏãùÏúºÎ°ú Î∂ÄÎ™®ÎÖ∏ÎìúÏôÄ Î∞îÍøîÍ∞ÄÎ©∞, Îã§Ïãú ÌûôÏùÑ Ïú†ÏßÄÌï† Ïàò ÏûàÏñ¥Ïöî."
        }
      ],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "ÏÑ§Î™Ö::intro",
            "title": "ÏÑ§Î™Ö",
            "fragment": "intro",
            "children": [
              {
                "rank": 3,
                "origin": "HeapÏùò ÏÜçÏÑ± (ÏÑ±Ïßà)::temper",
                "title": "HeapÏùò ÏÜçÏÑ± (ÏÑ±Ïßà)",
                "fragment": "temper",
                "children": []
              },
              {
                "rank": 3,
                "origin": "HeapÏùÑ ÎßåÎìúÎäî Î∞©Î≤ï::how-to-make-heap",
                "title": "HeapÏùÑ ÎßåÎìúÎäî Î∞©Î≤ï",
                "fragment": "how-to-make-heap",
                "children": []
              },
              {
                "rank": 3,
                "origin": "HeapÏù¥ Ïö∞ÏÑ† Í∞íÏùÑ Ïú†ÏßÄÌïòÎäî Î∞©Î≤ï::how-to-keeping-priority-value",
                "title": "HeapÏù¥ Ïö∞ÏÑ† Í∞íÏùÑ Ïú†ÏßÄÌïòÎäî Î∞©Î≤ï",
                "fragment": "how-to-keeping-priority-value",
                "children": []
              }
            ]
          },
          {
            "rank": 2,
            "origin": "Íµ¨ÌòÑ ÏΩîÎìú (Java)::implementation-code",
            "title": "Íµ¨ÌòÑ ÏΩîÎìú (Java)",
            "fragment": "implementation-code",
            "children": []
          }
        ]
      }
    },
    "description": "\"heap\"Ïù¥ÎùºÎäî Îã®Ïñ¥Îäî ÏõêÎûò ÏòÅÏñ¥ÏóêÏÑú \"ÏåìÏïÑÏò¨Î¶∞ ÎçîÎØ∏\"ÎòêÎäî \"Î¨¥ÏßàÏÑúÌïòÍ≤å ÏåìÏïÑÏò¨Î¶∞ Í≤É\"ÏùÑ ÏùòÎØ∏ÌïúÎã§.\r\n\r\nÎç∞Ïù¥ÌÑ∞ Íµ¨Ï°∞Î°úÏÑú HeapÏù¥ÎùºÎäî Ïù¥Î¶ÑÏù¥ Î∂ôÍ≤å Îêú Í≤ÉÏùÄ 1964ÎÖÑ J.W.J. WilliamsÍ∞Ä Î∞úÌëúÌïú ÎÖºÎ¨∏ÏóêÏÑú Ï≤òÏùå ÏÇ¨Ïö©ÎêòÏóàÎã§.\r\n\r\nÏúåÎ¶¨ÏóÑÏ¶àÎäî Ïù¥ÏßÑÌä∏Î¶¨Î•º Î∞∞Ïó¥Î°ú ÌëúÌòÑÌïòÎ©¥ÏÑú Î∂ÄÎ™®-ÏûêÏãù Í¥ÄÍ≥ÑÍ∞Ä ÎßàÏπò ÎçîÎØ∏(heap)Ï≤òÎüº ÏåìÏó¨ ÏûàÎäî Î™®ÏñëÏù¥ÎùºÍ≥† ÌëúÌòÑÌïòÏòÄÎã§.",
    "content": "\r\n\r\n## ÏÑ§Î™Ö::intro\r\n\r\nÍ∞ÑÎã®ÌïòÍ≤å ÎßêÌïòÏó¨, ÌûôÏùÄ Ïö∞ÏÑ†ÏàúÏúÑ ÌÅê ÏûÖÎãàÎã§. `JAVA`ÏóêÏÑúÎäî `PriorityQueue`ÎùºÎäî Íµ¨ÌòÑÏ≤¥Î•º ÌÜµÌï¥ Heap ÏûêÎ£åÍµ¨Ï°∞Î•º ÏÇ¨Ïö©Ìï† Ïàò ÏûàÏñ¥Ïöî.\r\nÌûôÏùÄ Îëê Ï¢ÖÎ•òÍ∞Ä ÏûàÎäîÎç∞ `ÏµúÎåÄ Ìûô`Í≥º `ÏµúÏÜå Ìûô`Ïù¥ ÏûàÏñ¥Ïöî.\r\nÏµúÎåÄ Heap(ÏµúÏÜå Heap)ÏùÄ Îã®Ïñ¥ÏôÄ Í∞ôÏù¥ ÏµúÎåÄ Í∞í(ÏµúÏÜå Í∞í)ÏùÑ Ïö∞ÏÑ†ÏàúÏúÑÎ°ú ÌåêÎã®ÌïòÏó¨, Ïñ¥Îñ†Ìïú Í∞íÏù¥ Îì§Ïñ¥ÏôÄÎèÑ, Ìï≠ÏÉÅ Í∞ôÏùÄ ÏàúÏÑúÏùò\r\nÌä∏Î¶¨Î•º Ïú†ÏßÄÌïòÎ©∞, Ïñ∏Ï†úÎì†ÏßÄ ÏµúÍ≥† Ïö∞ÏÑ†ÏàúÏúÑÏùò Í∞íÏùÑ Ï†ÅÏùÄ ÎπÑÏö©ÏúºÎ°ú ÏâΩÍ≤å ÏñªÏùÑÏàò ÏûàÎäî ÏûêÎ£åÍµ¨Ï°∞ ÏûÖÎãàÎã§.\r\n\r\n### HeapÏùò ÏÜçÏÑ± (ÏÑ±Ïßà)::temper\r\n\r\n* ÏµúÎåÄ Ìûô(**ÎòêÎäî ÏµúÏÜå Ìûô**)ÏùÄ `Ïûé(leaf)`Ïùò Í≥ÑÏ∏µÏùÑ Ï†úÏô∏Ìïú Î™®Îì† ÎÖ∏ÎìúÎäî ÏûêÏãùÏùò ÎÖ∏Îìú Î≥¥Îã§ ÌÅ∞(**ÎòêÎäî ÏûëÏùÄ**) Í∞íÏùÑ Í∞ÄÏßÄÍ≥† ÏûàÏñ¥ÏïºÌï©ÎãàÎã§.\r\n* ÏôºÏ™ΩÎ∂ÄÌÑ∞ Ï∞®Î°ÄÎåÄÎ°ú Ï±ÑÏõåÏ†∏ÏûàÎäî `ÏôÑÏ†Ñ Ïù¥ÏßÑ Ìä∏Î¶¨(Complete binary tree)`Ïù¥Ïñ¥Ïïº Ìï©ÎãàÎã§.\r\n* Í∞ôÏùÄ Í≥ÑÏ∏µÏùò ÎÖ∏ÎìúÎì§Í≥ºÎäî Ï†ïÎ†¨ÌïòÏßÄ ÏïäÏäµÎãàÎã§.\r\n* Î£®Ìä∏(ÎøåÎ¶¨)ÎÖ∏ÎìúÎ°ú Î∂ÄÌÑ∞ ÎÇ¥Î†§Ïò§Îäî ÏúÑÏπòÏùò ÎÖ∏ÎìúÎì§ Ïò§Î¶ÑÏ∞®Ïàú(**ÎòêÎäî ÎÇ¥Î¶ºÏ∞®Ïàú**)ÏûÖÎãàÎã§\r\n\r\n![ÏúÑ Ìä∏Î¶¨Ï§ë Ïñ¥Îñ§Í≤ÉÏù¥ ÌûôÏùºÍπå?](/post/data-structure/heap/tree-images.svg)\r\n\r\n* Ìä∏Î¶¨ A: ÏûéÏùÑ Ï†úÏô∏Ìïú ÎÖ∏ÎìúÎäî Î™®Îëê Ï†ïÎ†¨ÎêòÏóàÏßÄÎßå, ÏôºÏ™ΩÎ∂ÄÌÑ∞ Ï±ÑÏõåÏßÄÏßÄÏïäÏïÑ HeapÏù¥ ÏïÑÎãôÎãàÎã§.\r\n* Ìä∏Î¶¨ B: ÏôºÏ™ΩÎ∂ÄÌÑ∞ Ï±ÑÏõåÏ°åÏßÄÎßå, 2Î≤àÎÖ∏ÎìúÏùò Í∞íÏùÄ Í∑∏ ÏûêÏãùÏóêÍ∞íÎ≥¥Îã§ ÏûëÏäµÎãàÎã§. Îî∞ÎùºÏÑú HeapÏù¥ ÏïÑÎãôÎãàÎã§.\r\n* Ìä∏Î¶¨ C: ÏûéÏùÑ Ï†úÏô∏Ìïú Î™®Îì† ÎÖ∏ÎìúÍ∞Ä ÏûêÏãù ÎòêÎäî Î∂ÄÎ™®ÏôÄ Ï†ïÎ†¨ ÎêòÏñ¥ÏûàÍ≥†, ÏôºÏ™ΩÎ∂ÄÌÑ∞ Ï±ÑÏõåÏ†∏ÏûàÏúºÎØÄÎ°ú `Heap`ÏûÖÎãàÎã§.\r\n\r\n> Ïù¥Î•º Ï†ïÎ¶¨ÌïòÎ©¥ ÏïÑÎûòÏôÄ Í∞ôÏäµÎãàÎã§.   \r\n> 1.`ùëõÍ∞ú`Ïùò ÎÖ∏ÎìúÎ•º Í∞ÄÏßÑ ÌûôÏùÄ Ï†ïÌôïÌûà ÌïòÎÇòÎßå ÏûàÍ≥† Í∑∏ Ìûô(Ìä∏Î¶¨)Ïùò ÎÜíÏù¥(height)Îäî `‚é£log‚ÇÇùëõ‚é¶`Ïù¥Îã§. Ìä∏Î¶¨Ïùò Ï†ÑÏ≤¥ ÎÖ∏ÎìúÏùò Í∞úÏàòÍ∞Ä `8`ÏùºÍ≤ΩÏö∞ Ìä∏Î¶¨(Ìûô)Ïùò ÎÜíÏù¥Îäî `3`Ïù¥Îã§. Ï¶â Ìû¢Ïùò ÎÜíÏù¥Îäî ÌûôÏùò ÏÑ±Ïßà(ÏÜçÏÑ±)Ïóê Î∂ÄÌï©ÎêòÎäî ÎÖ∏ÎìúÎì§Îßå Ïù∏Ï†ïÏù¥ ÎêúÎã§Îäî ÏùòÎØ∏Ïù¥Îã§.  \r\n> 2.ÌûôÏùò Î£®Ìä∏ ÎÖ∏ÎìúÎäî Ìï≠ÏÉÅ ÏµúÎåìÍ∞í(**ÎòêÎäî ÏµúÏÜüÍ∞í**)ÏùÑ Ï†ÄÏû•ÌïúÎã§. ÏµúÎåÄ Ìûô(**ÎòêÎäî ÏµúÏÜå Ìûô**)ÏùÄ ÏµÄÎåìÍ∞í(**ÎòêÎäî ÏµúÏÜüÍ∞í**)ÏùÑ Ìö®Ïú®Ï†ÅÏúºÎ°ú Í¥ÄÎ¶¨ÌïòÍ∏∞ ÏúÑÌïú ÏûêÎ£åÍµ¨Ï°∞Ïù¥Î©∞, Î£®Ìä∏ÏóêÎäî Ìï≠ÏÉÅ Í∞ÄÏû• ÌÅ∞(**ÎòêÎäî ÏûëÏùÄ**)Í∞íÏùÑ Ïú†ÏßÄÌïúÎã§.  \r\n> 3.ÌûôÏùò Ìïú ÎÖ∏ÎìúÏôÄ Í∑∏ ÎÖ∏ÎìúÏùò ÏûêÏÜê ÎÖ∏ÎìúÎì§Î°ú Ïù¥Î£®Ïñ¥ÏßÑ Î∂ÄÎ∂Ñ Ìä∏Î¶¨(subtree)ÎèÑ ÌûôÏù¥Îã§. ÌûôÏùÄ ÌûôÏúºÎ°ú Ïù¥Î£®Ïñ¥Ï†∏ÏûàÏúºÎ©∞ ÏûêÏãùÎÖ∏ÎìúÎèÑ ÌûôÏù¥ Îê†ÏàòÏûàÏßÄÎßå, ÎÖ∏ÎìúÏùò ÏûêÏãùÏù¥ÏóÜÎã§Î©¥ ÌûôÏù¥Îê† ÏàòÏóÜÎã§. Îî∞ÎùºÏÑú ÏúÑ C Ìä∏Î¶¨Ïùò `4, 5, 6`Î≤à ÎÖ∏ÎìúÎäî ÌûôÏù¥ ÏïÑÎãàÎã§.  \r\n:{ \"type\": \"note\", \"icon\": \"info\" }\r\n\r\n### HeapÏùÑ ÎßåÎìúÎäî Î∞©Î≤ï::how-to-make-heap\r\n\r\nÌûôÏùÑ Íµ¨ÏÑ± ÌïòÍ∏∞ ÏúÑÌï¥ÏÑúÎäî Îã§ÏùåÏùò ÏàúÏÑúÎåÄÎ°ú ÏßÑÌñâÎê©ÎãàÎã§.\r\n\r\n1. ÏàúÌöåÎ•º ÏãúÏûëÌï† ÌûôÏù¥ÎêòÎäî ÎßàÏßÄÎßâ ÎÖ∏Îìú`‚é£ùëõ/‚ÇÇ‚é¶`Î•º Ï∞æÎäîÎã§.\r\n2. ÎßàÏßÄÎßâ ÎÖ∏Îìú iÎ•º Ïù¥Ïö©Ìï¥ ÏûêÏãùÎÖ∏ÎìúÍ∞Ä ÏûàÎäîÏßÄ, ÎòêÌïú ÏûàÎã§Î©¥ Í∑∏ Ï§ë ÏûêÏã† Î≥¥Îã§ ÌÅ∞Í∞íÏùÑ ÏûêÏã†Í≥º Ï∞æÎäîÎã§.\r\n3. Ï∞æÏùÄ Í∞íÍ≥º ÏûêÏã†ÏùÑ Î∞îÍæ∏Í≥† Î∞îÍæº ÏûêÏã†Ïùò ÏúÑÏπòÎäî Í∑∏Í∞íÏùò ÏûêÏãùÏù¥ ÎêòÎ©∞, ÏûêÏã†Î≥¥Îã§ ÌÅ∞Í∞íÏù¥ ÎÇòÏò§ÏßÄ ÏïäÏùÑÎïåÍπåÏßÄ Î∞òÎ≥µÌïúÎã§.\r\n4. Îã§Ïùå ÎÖ∏Îìú(i -1)ÏóêÏÑú Îã§Ïãú `3.`ÏùÑ Î∞òÎ≥µÌïúÎã§.\r\n\r\n> ÏûêÏãù ÎÖ∏ÎìúÏùò ÏúÑÏπòÎ•º Ï∞æÏùÑÎïåÎäî ÏôºÏ™Ω`arr[2i]`Í∞íÍ≥º Ïò§Î•∏Ï™Ω`arr[2i + 1]`Î°ú Íµ¨Ìï† Ïàò ÏûàÏäµÎãàÎã§.\r\n:{ \"type\": \"tip\", \"icon\": \"lightbulb\" }\r\n\r\nÏúÑ Ïùò ÎÇ¥Ïö©ÏùÑ Ï†ïÎ¶¨ÌïòÎ©¥ ÏïÑÎûòÏôÄ Í∞ôÏäµÎãàÎã§.\r\n\r\n\r\n![ÌûôÏùÑ ÎßåÎìúÎ†§Î©¥ ÏôÑÏ†Ñ Ïù¥ÏßÑÌä∏Î¶¨Í∞Ä ÏûàÏñ¥Ïïº ÌïúÎã§.](/post/data-structure/heap/first-iteration.svg)\r\n\r\n> ÏúÑÏùò Ìä∏Î¶¨Îäî *ÏôÑÏ†Ñ Ïù¥ÏßÑÌä∏Î¶¨* ÏûÖÎãàÎã§. ÌûôÏùÄ ÏôÑÏ†ÑÏù¥ÏßÑÌä∏Î¶¨ÏóêÏÑú ÎßåÎì§Ïàò ÏûàÏúºÎØÄÎ°ú, ÏùºÎ∞ò Ïù¥ÏßÑÌä∏Î¶¨Îäî CompactÌïòÍ≤å ÏôÑÏ†ÑÏù¥ÏßÑÌä∏Î¶¨Î°ú Î∞îÍøîÏïº ÌûôÏùÑ ÎßåÎì§Ïàò ÏûàÏäµÎãàÎã§.\r\n> ÏôºÏ™Ω Ìä∏Î¶¨Ïùò ÎßàÏßÄÎßâ ÌûôÏùò Í∞íÏùÄ `15` Ïù¥Î©∞, Ïù¥Îäî ÏûêÏãù(`6, 4`) Ïñ¥ÎäêÍ≤É Î≥¥Îã§ÎèÑ ÌÅ∞Í∞íÏûÖÎãàÎã§. Îî∞ÎùºÏÑú Îã§Ïùå ÏàúÌöåÎ°ú ÎÑòÏñ¥Í∞ëÎãàÎã§.\r\n> ÏàúÌöåÎäî ÎÇ¥Î∂Ä ÎÖ∏ÎìúÏùò ÎßàÏßÄÎßâ ÌûôÏùò ÏúÑÏπòÏóêÏÑú Î∂ÄÌÑ∞ 1ÍπåÏßÄ Ïù¥Ïñ¥ÏßëÎãàÎã§. Îî∞ÎùºÏÑú Îã§Ïùå Ïù∏Îç±Ïä§Ïù∏ 3Î≤à ÎÖ∏Îìú(9)Î°ú ÎÑòÏñ¥Í∞ëÎãàÎã§.\r\n> 3Î≤àÎÖ∏ÎìúÎäî ÏûêÏã†Ïùò ÏûêÏãùÎì§ Ï§ë 6Î≤àÏß∏, 7Î≤àÏß∏ (7, 12)ÏôÄ ÎπÑÍµêÌïòÏó¨ Îçî ÌÅ∞Í∞íÏùÑ Í∞ÄÏßÄÎäî 12ÏôÄ Î∞îÍøâÎãàÎã§.\r\n:{ \"type\": \"note\", \"icon\": \"info\" }\r\n\r\n![ÎßåÏïΩ ÎßàÏßÄÎßâ ÎÇ¥Î∂ÄÎÖ∏ÎìúÎ∂ÄÌÑ∞ ÏàúÌöåÌï† Îïå, ÏµÄÎåÄÌûôÏùÑ ÎßåÎìúÎ†§Î©¥ ÏúÑÏôÄ Í∞ôÏù¥ ÎßåÎì§Ïàò ÏûàÏñ¥Ïöî.](/post/data-structure/heap/other-iteration.svg)\r\n\r\n> Ïù¥ÌõÑ Í≥ºÏ†ïÏùÄ ÏúÑÏôÄ Í∞ôÏù¥ Î∞òÎ≥µÎê©ÎãàÎã§. ÎÇ¥Î∂ÄÎÖ∏ÎìúÎ•º ÏàúÌöåÌïòÎ©∞ ÏûêÏã†Ïùò ÏûêÏãùÎÖ∏ÎìúÍ∞Ä ÏûàÎäîÏßÄ ÌôïÏù∏ÌïòÍ≥† ÏûàÎã§Î©¥, ÏûêÏã†Í≥º ÎπÑÍµêÌïòÏó¨ ÎçîÌÅ∞ Í∞íÏúºÎ°ú Î∞îÍøâÎãàÎã§. Ïù¥Îäî Î∞îÍæºÏù¥ÌõÑÏóêÎèÑ `3.`Ïù¥ Î∞òÎ≥µÎêòÍ≤å Îê©ÎãàÎã§. ÏàúÌöåÎêòÎäî ÎÖ∏ÎìúÍ∞Ä ÏµúÏÉÅÏúÑÎÖ∏ÎìúÍ∞Ä ÎêòÍ≥† Î™®Îì† ÎÇ¥Î∂ÄÎÖ∏ÎìúÍ∞Ä ÌûôÏù¥ Îê†Îïå, Ï†ÑÏ≤¥ Ìä∏Î¶¨Îäî ÌûôÏù¥ Îê©ÎãàÎã§.   \r\n> ÎßàÏßÄÎßâÍπåÏßÄ Î∞îÍæº ÏµúÏ¢ÖÌä∏Î¶¨Îäî ÏïÑÎûòÏôÄ Í∞ôÏäµÎãàÎã§.\r\n:{ \"type\": \"note\", \"icon\": \"info\" }\r\n\r\n![ÏµúÎåÄÌûôÏùÑ ÎßåÎì§Ïñ¥ Ïù¥Îü∞ ÌòïÌÉúÎ°ú ÎÖ∏ÎìúÎ•º ÎÇòÎàåÏàò ÏûàÏñ¥Ïöî.](/post/data-structure/heap/last-iteration.svg)\r\n\r\n* ÏµúÏÉÅÏúÑ ÎÖ∏Îìú(Î£®Ìä∏)Í∞Ä Í∞ÄÏû• ÌÅ∞Í∞íÏù¥ ÎêòÎ©∞, ÏúÑÎäî ÏµúÎåÄÌûôÏùÑ ÎßåÎìúÎäî Îã®Í≥ÑÏòÄÏäµÎãàÎã§.\r\n* Î∂ÄÎ™®ÎÖ∏ÎìúÏôÄ ÏûêÏãùÎÖ∏ÎìúÎÅºÎ¶¨Îäî ÏàúÏÑúÏùò Í∞íÏùÑ Í∞ÄÏßÄÎ©∞, Ìï≠ÏÉÅ ÏµúÎåÄÏùò Í∞íÏùÑ Í∞ÄÏßëÎãàÎã§.\r\n\r\n### HeapÏù¥ Ïö∞ÏÑ† Í∞íÏùÑ Ïú†ÏßÄÌïòÎäî Î∞©Î≤ï::how-to-keeping-priority-value\r\n\r\nÏúÑÏóêÏÑúÎäî ÏôÑÏ†ÑÏù¥ÏßÑÌä∏Î¶¨Î°ú ÌûôÏùÑ Ïñ¥ÎñªÍ≤å ÎßåÎìúÎäîÏßÄÏóê ÎåÄÌï¥ ÏïåÏïÑÎ¥§ÏäµÎãàÎã§.\r\nÌïòÏßÄÎßå, ÌûôÏùÄ Ïñ∏Ï†úÎÇò ÏÉàÎ°úÏö¥Í∞íÏù¥ Îì§Ïñ¥ÏôÄÎèÑ Ìï≠ÏÉÅ Ïö∞ÏÑ† ÏàúÏúÑÎ°ú Í∞íÏùÑ Í¥ÄÎ¶¨Ìï©ÎãàÎã§. ÎßåÏïΩ Ï†ÄÍ∏∞ÏÑú ÎçîÌÅ∞Í∞íÏù¥ Ï∂îÍ∞ÄÎêúÎã§Î©¥,\r\nÏ†Ä ÌûôÌä∏Î¶¨Îäî Ïñ¥ÎñªÍ≤å Î∞îÎÄîÍπåÏöî? ÏÉàÎ°úÏö¥ Í∞íÎì§ÏùÑ Ï∂îÍ∞ÄÌï¥ÏÑú ÌûôÏù¥ Îã§Ïãú Ïñ¥ÎñªÍ≤å Ïú†ÏßÄÎêòÎäîÏßÄ Î∞∞ÏõåÎ¥ÖÎãàÎã§.\r\n\r\n#### Í∞í Ï∂îÍ∞Ä::add-new-value\r\n\r\nÌûôÌä∏Î¶¨ÏóêÏÑú Í∞íÏùÑ Ï∂îÍ∞Ä Ìï†ÎïåÎäî ÎßàÏßÄÎßâ ÎÖ∏ÎìúÎ°ú Î∂ôÏó¨Ï£ºÍ≥† ÏúÑÏóêÏÑú ÌñàÎçòÍ≤ÉÍ≥º ÎèôÏùºÌïòÍ≤å ÌûôÏùÑ ÎßåÎì§Ïñ¥ Ï§çÎãàÎã§.\r\nÎßåÏïΩ ÏÉàÎ°úÏö¥ Í∞í 17Ïù¥ ÌûôÏóê Îì§Ïñ¥Ïò®Îã§Î©¥ ÏàúÏÑúÎäî ÏïÑÎûòÏôÄ Í∞ôÏù¥ Î∞îÎÄùÎãàÎã§.\r\n\r\n::image-group\r\n\r\n![ÎßåÏïΩ Îã§ÏùåÏùò ÌûôÏóêÏÑú 17Ïù¥ÎùºÎäî Í∞íÏù¥ Ï∂îÍ∞Ä ÎêúÎã§Î©¥](/post/data-structure/heap/add-new-17.svg)\r\n\r\n![Ïù¥Îü∞ÏãùÏúºÎ°ú Î∂ÄÎ™®ÎÖ∏ÎìúÏôÄ Î∞îÍøîÍ∞ÄÎ©∞, Îã§Ïãú ÌûôÏùÑ Ïú†ÏßÄÌï† Ïàò ÏûàÏñ¥Ïöî.](/post/data-structure/heap/add-new-17-2.svg)\r\n\r\n::\r\n\r\n\r\n> A: ÏÉàÎ°ú Îì§Ïñ¥Ïò® Í∞í 17ÏùÄ Ìä∏Î¶¨Ïùò Îß®Îí§Ïù∏ 10Î≤àÎÖ∏ÎìúÎ°ú Îì§Ïñ¥Í∞ëÎãàÎã§.     \r\n> ÎòêÌïú ÎßàÏßÄÎßâ ÎÇ¥Î∂ÄÎÖ∏ÎìúÏù¥Ïûê ÏûêÏã†Ïùò Î∂ÄÎ™®Ïù∏ 5Î≤à ÎÖ∏Îìú(4)Î∂ÄÌÑ∞ Îã§Ïãú ÏàúÌöåÎ•º ÏãúÏûëÌïòÎ©∞,  \r\n> ÏûêÏã†Î≥¥Îã§ ÌÅ∞ Í∞íÏùÄ Í∞ÄÏßÑ ÏûêÏãù 10Î≤à ÎÖ∏Îìú(17)Í≥º Í∞íÏùÑ Î∞îÍøâÎãàÎã§.\r\n> B: Í∞íÏù¥ Î∞îÎÄê 10Î≤à ÎÖ∏Îìú(4)Îäî ÏûêÏãùÏùÑ Í∞ÄÏßÄÍ≥†ÏûàÏßÄ ÏïäÏúºÎØÄÎ°ú Îã§Ïùå ÏàúÌöåÎ°ú ÎÑòÏñ¥Í∞ëÎãàÎã§.  \r\n> C: Îã§Ïùå ÏàúÌöåÏù∏ 4Î≤à ÎÖ∏Îìú(6)ÏùÄ ÏûêÏãùÎì§Î≥¥Îã§ ÌÅ∞Í∞íÏù¥ÎØÄÎ°ú Îã§Ïùå 3Î≤à ÎÖ∏Îìú(12)Î°ú Ïù¥ÎèôÌï©ÎãàÎã§. ÌïòÏßÄÎßå Ïù¥ÎòêÌïú ÏûêÏãùÎì§Î≥¥Îã§ Í∞íÏù¥ ÌÅ¨ÎØÄÎ°ú, 2Î≤à ÎÖ∏Îìú(8)Î°ú Ïù¥ÎèôÌï©ÎãàÎã§. ÏûêÏã†Î≥¥Îã§ ÌÅ∞Í∞íÏùÑ Í∞ÄÏßÄÎäî 5Î≤à ÏûêÏãùÎÖ∏Îìú(17)Í≥º Î∞îÍøâÎãàÎã§.  \r\n> D: Í∞íÏù¥ Î∞îÎÄê 5Î≤à ÎÖ∏Îìú(8)ÏùÄ ÏûêÏãùÎì§ Î≥¥Îã§ Í∞íÏù¥ Ïª§, Î∞îÍøÄ ÌïÑÏöîÍ∞Ä ÏóÜÏúºÎØÄÎ°ú Îã§Ïùå ÏàúÌöåÏù∏ 1Î≤à ÎÖ∏Îìú(15)Î°ú Ïù¥ÎèôÌï©ÎãàÎã§.  \r\n> E: ÌòÑÏû¨ ÏàúÌöåÏù∏ 1Î≤à ÎÖ∏Îìú(15)Îäî ÏûêÏã†Ïùò 2Î≤à ÎÖ∏Îìú(17)Î≥¥Îã§ Í∞íÏù¥ ÏûëÏúºÎØÄÎ°ú Î∞îÍøâÎãàÎã§.  \r\n> F: ÏµúÏ¢ÖÏ†ÅÏúºÎ°ú ÌûôÏù¥ ÏôÑÏÑ±ÎêòÏóàÏäµÎãàÎã§.\r\n:{ \"type\": \"tip\", \"icon\": \"check-circle\" }\r\n\r\n## Íµ¨ÌòÑ ÏΩîÎìú (Java)::implementation-code\r\n\r\n::code-group\r\n\r\n```java::Ìûô ÎßåÎì§Í∏∞\r\n//== Ìûô(Heap) ÏùÑ ÎßåÎìúÎäî Î©îÏÜåÎìú ==//\r\npublic static void makeHeap(int arr[]) {\r\n    // last heap\r\n    int lh = arr.length / 2;\r\n    System.out.println(\"Normal Array = \" + Arrays.toString(arr));\r\n    int eh = arr.length;\r\n    while (lh-- > 0) {\r\n\r\n        System.out.println(\"i: \" + lh);\r\n        pushDown(arr, lh, eh);\r\n    }\r\n\r\n    System.out.println(\"Array as Max Heap = \" + Arrays.toString(arr));\r\n}\r\n```\r\n\r\n```java::ÎÖ∏Îìú ÎπÑÍµê\r\n//== ÎÖ∏ÎìúÏôÄ Í∑∏ ÏûêÏãùÏ§ëÏóêÏÑú ÎçîÌÅ∞(ÎòêÎäî ÏûëÏùÄ) ÏúÑÏπòÎ•º Ï∞æÎäî Î©îÏÜåÎìú ==//\r\npublic static int findLargest(int arr[], int node, int eh) {\r\n    // first child\r\n    int fc = (2 * (node + 1)) - 1;\r\n\r\n    if (fc + 1 < eh) {\r\n        if (arr[fc] <= arr[fc + 1]) {\r\n            return arr[fc + 1] <= arr[node] ? node : fc + 1;\r\n        } else {\r\n            return arr[fc] <= arr[node] ? node : fc;\r\n        }\r\n    }\r\n    if (fc < eh && arr[node] < arr[fc]) {\r\n        return fc;\r\n    } else {\r\n        return node;\r\n    }\r\n}\r\n```\r\n\r\n```java::Í∞í ÍµêÌôò\r\n//== Í∞íÏùÑ ÏïÑÎûòÎ°ú ÎÇ¥Î¶¨Îäî Î©îÏÜåÎìú ==//\r\n/**\r\n * Í∞ÑÎã®ÌïòÍ≤å Î≥¥Î©¥ Ìä∏Î¶¨ÏóêÏÑú ÎßàÏßÄÎßâ ÌûôÏùò ÏúÑÏπòÎ•º Íµ¨ÌïòÍ≥†,\r\n * Î£®Ìä∏ ÎÖ∏ÎìúÍπåÏßÄ Ïó≠ÏàúÏúºÎ°ú ÌûôÏùÑ ÎßåÎì§Ïñ¥Í∞ëÎãàÎã§.\r\n * \r\n * ÏµúÎåÄ Ìûô(ÎòêÎäî ÏµúÏÜå Ìûô)Ïùò Ï°∞Í±¥Ïóê Îî∞Îùº ÎçîÌÅ∞(ÎòêÎäî Îçî ÏûëÏùÄ)Í∞íÏùÑ Í∏∞Ï§ÄÏúºÎ°ú,\r\n * Ìï¥Îãπ ÎÖ∏ÎìúÎ•º ÏúÑÎ°úÏò¨Î¶¨Í≥† Î≥ÄÍ≤ΩÎêú ÎåÄÏÉÅÏùÄ ÏïÑÎûòÎ°ú ÎÇ¥Î†§Í∞ÄÎ©∞ Í≥ÑÏÜç Î∞îÍøâÎãàÎã§.\r\n */\r\npublic static void pushDown(int arr[], int node, int eh) {\r\n    do {\r\n        System.out.println(\"j: \" + node);\r\n        int temp = arr[node];\r\n        int large = findLargest(arr, node, eh);\r\n        System.out.println(drawBinaryTree(arr));\r\n\r\n        if (large == node)\r\n            break;\r\n\r\n        arr[node] = arr[large];\r\n        arr[large] = temp;\r\n\r\n        node = large;\r\n    } while (node <= eh);\r\n}\r\n```\r\n\r\n```java::Ï∂úÎ†• Î©îÏÜåÎìú\r\npublic static String drawBinaryTree(int arr[]) {\r\n    StringBuilder builder = new StringBuilder();\r\n\r\n    int nol = (int) (Math.log(arr.length) / Math.log(2)) + 1;\r\n    int max = (int) Math.pow(2, nol - 1);\r\n\r\n    int printed = 0;\r\n    for (int i = 0; i < nol; i++) {\r\n        int perFloor = (int) Math.pow(2, i);\r\n        int tab = (max - perFloor) / 2 + (max - perFloor) % 2;\r\n        int last = printed + perFloor;\r\n\r\n        for (int j = 0; j < tab; j++) {\r\n            builder.append(\"  \");\r\n        }\r\n        for (int j = printed; (j < arr.length && j < last); j++) {\r\n            builder.append(String.format(\"(%d)\", arr[j]));\r\n        }\r\n        builder.append(\"\\n\");\r\n        printed += perFloor;\r\n    }\r\n\r\n    return builder.toString();\r\n}\r\n```\r\n\r\n::\r\n\r\n```java::Î©îÏù∏ Ìï®Ïàò\r\npublic static void main(String args []) throws Exception {\r\n    //== Ìûô ÏúºÎ°ú ÎßåÎì§Í∏∞==//\r\n    int array [] = {1, 5, 8, 2, 74, 9, 12, 104, 87, 43};\r\n    Heap.makeHeap(array);\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n"
  },
  {
    "path": "/docs/language/cpp/cpp-convention",
    "header": {
      "layout": "post",
      "title": "c++ ÏãúÏûëÌïòÍ∏∞",
      "tags": [
        "Language",
        "C++",
        "C"
      ],
      "date": 1644221400000,
      "profile-image": "/post/profile/profile4.jpg",
      "thumbnail": "/post/language/cpp/cpp-grammar.png",
      "current-company": "Herit Corporation",
      "current-position": "Backend Server Developer",
      "excerpt-separator": "<!--more-->",
      "summary": "C++ Î¨∏Î≤ï",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "Ïñ∏Ïñ¥",
        "C++"
      ],
      "images": [],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "Î¨∏Î≤ï::grammar",
            "title": "Î¨∏Î≤ï",
            "fragment": "grammar",
            "children": [
              {
                "rank": 3,
                "origin": "Ï£ºÏöî Ïó∞ÏÇ∞Ïûê::operators",
                "title": "Ï£ºÏöî Ïó∞ÏÇ∞Ïûê",
                "fragment": "operators",
                "children": []
              }
            ]
          },
          {
            "rank": 2,
            "origin": "Î™ÖÎ™ÖÍ∑úÏπô::naming-convention",
            "title": "Î™ÖÎ™ÖÍ∑úÏπô",
            "fragment": "naming-convention",
            "children": []
          }
        ]
      }
    },
    "description": "C++Ïùò Í∏∞Î≥∏ Î¨∏Î≤ïÏùÑ Î∞∞ÏõåÎ≥¥Ïûê",
    "content": "\r\n## Î¨∏Î≤ï::grammar\r\n\r\n### Ï£ºÏöî Ïó∞ÏÇ∞Ïûê::operators\r\n\r\n**Ìè¨Ïù∏ÌÑ∞ ÏÑ†Ïñ∏**\r\n```cpp\r\nint* num = new int[5];\r\nint* not_init;\r\n\r\nint new_num = 10;\r\nint* ptr = &new_num;\r\n\r\nint lazy = 512;\r\n*ptr = 20; //ptrÏù¥ Í∞ÄÎ¶¨ÌÇ§Îäî Ï£ºÏÜåÏóê 20 Ï†ÄÏû•\r\nptr = &lazy; //ptrÏù¥ lazyÏùò Ï£ºÏÜåÎ•º Í∞ÄÎ¶¨ÌÇ¥\r\n```\r\nÌè¨Ïù∏ÌÑ∞ Î≥ÄÏàòÏùò ÌäπÏßï\r\n* Ï¥àÍ∏∞Ìôî ÌïÑÏàò ÏïÑÎãò\r\n* null Í∞í Î∂àÍ∞ÄÎä•\r\n* Îã§Î•∏Î≥ÄÏàòÎÇò Ï£ºÏÜåÎ°ú Ïû¨Ìï†Îãπ Í∞ÄÎä•\r\n* Îçî Î≥µÏû°Ìïú Î©îÎ™®Î¶¨ Ï°∞Ïûë Í∞ÄÎä•\r\n* Ï£ºÏÜå Ïó∞ÏÇ∞ Î∞è Ìè¨Ïù∏ÌÑ∞ Ïó∞ÏÇ∞ Í∞ÄÎä•\r\n\r\n**Ï∞∏Ï°∞ ÏÑ†Ïñ∏**\r\n```cpp\r\nint num = 10;\r\nint& a = num; // Ï∞∏Ï°∞ Ïó∞ÏÇ∞Ïûê, numÏùò Í∞íÏùÑ aÏóê Ï†ÄÏû•\r\n```\r\nÏ∞∏Ï°∞ Î≥ÄÏàòÏùò ÌäπÏßï\r\n* ÏÑ†Ïñ∏Ïãú Î∞òÎìúÏãú Ï¥àÍ∏∞Ìôî Ìï¥ÏïºÌï®\r\n* null Ï∞∏Ï°∞ Î∂àÍ∞ÄÎä•\r\n* Ïû¨Ìï†Îãπ Î∂àÍ∞ÄÎä• (Ìïú Î≤à Ï∞∏Ï°∞Ìïú Î≥ÄÏàò Í≥†Ï†ï)\r\n* Î¨∏Î≤ïÏ†ÅÏúºÎ°ú Îçî Í∞ÑÍ≤∞ÌïòÍ≥† ÏïàÏ†Ñ\r\n* ÏõêÎ≥∏ Î≥ÄÏàòÏóê Ìà¨Î™ÖÌïòÍ≤å Ï†ëÍ∑º Í∞ÄÎä•\r\n\r\n**Ï£ºÏÜå Ïó∞ÏÇ∞Ïûê**\r\n```cpp\r\nint num = 10;\r\n\r\n//int Ïù∏Ìä∏Ïóê ÎåÄÌïú Ìè¨Ïù∏ÌÑ∞ Î≥ÄÏàò\r\nint* a = &num; // Ï£ºÏÜå Ïó∞ÏÇ∞Ïûê, numÏùò Ï£ºÏÜåÎ•º aÏóê Ï†ÄÏû•\r\n```\r\nÏ£ºÏÜå Ïó∞ÏÇ∞ÏûêÏùò Í≤∞Í≥ºÎäî Î≥ÄÏàòÏóêÎåÄÌïú Î¨ºÎ¶¨Ï£ºÏÜåÍ∏∞ ÎïåÎ¨∏Ïóê Ïª¥Ìì®ÌÑ∞ bit Ï≤¥Í≥ÑÏùò Îî∞Î•∏ Î©îÎ™®Î¶¨ÌÅ¨Í∏∞Î•º Î∂ÄÏó¨Î∞õÎäîÎã§.  \r\nÏ£ºÏÜå Ï†ïÎ≥¥Ïù¥Í∏∞ ÎïåÎ¨∏Ïóê Ìè¨Ïù∏ÌÑ∞ Î≥ÄÏàòÏóêÎßå Îã¥ÏùÑ Ïàò ÏûàÎã§.\r\n\r\n\r\n## Î™ÖÎ™ÖÍ∑úÏπô::naming-convention\r\n\r\n**ÌååÏùºÎ™Ö**:\r\n- ÏÜåÏä§ ÌååÏùº: `.cpp`\r\n- Ìó§Îçî ÌååÏùº: `.h` ÎòêÎäî `.hpp`\r\n- ÌååÏùºÎ™ÖÏùÄ snake_case ÎòêÎäî PascalCase ÏÇ¨Ïö©\r\n    - Ïòà: `user_interface.cpp`, `UserInterface.cpp`\r\n\r\n**ÌÅ¥ÎûòÏä§/Íµ¨Ï°∞Ï≤¥**:\r\n- PascalCase ÏÇ¨Ïö©\r\n- Ïòà: `class UserManager`, `struct PlayerData`\r\n\r\n**Ìï®Ïàò/Î©îÏÑúÎìú**:\r\n- camelCase ÎòêÎäî snake_case\r\n- Ïòà: `void getUserInput()` ÎòêÎäî `void get_user_input()`\r\n\r\n**Î≥ÄÏàò**:\r\n- camelCase ÎòêÎäî snake_case\r\n- Ïòà: `int playerScore` ÎòêÎäî `int player_score`\r\n\r\n**ÏÉÅÏàò/Îß§ÌÅ¨Î°ú**:\r\n- SCREAMING_SNAKE_CASE\r\n- Ïòà: `const int MAX_PLAYERS = 10`, `#define PI_VALUE 3.14159`\r\n\r\n**namespace**:\r\n- ÏÜåÎ¨∏Ïûê snake_case\r\n- Ïòà: `namespace game_engine`\r\n\r\n**ÌîÑÎ°úÏ†ùÌä∏ ÎîîÎ†âÌÜ†Î¶¨**:\r\n```\r\nproject_name/\r\n‚îú‚îÄ‚îÄ src/            (ÏÜåÏä§ ÌååÏùº)\r\n‚îú‚îÄ‚îÄ include/        (Ìó§Îçî ÌååÏùº)\r\n‚îú‚îÄ‚îÄ lib/           (ÎùºÏù¥Î∏åÎü¨Î¶¨)\r\n‚îú‚îÄ‚îÄ test/          (ÌÖåÏä§Ìä∏ ÌååÏùº)\r\n‚îî‚îÄ‚îÄ docs/          (Î¨∏ÏÑú)\r\n```\r\n\r\n\r\n(ÏûëÏÑ±Ï§ë)\r\n"
  },
  {
    "path": "/docs/data-structure/b-tree",
    "header": {
      "layout": "post",
      "title": "B-tree (Balanced Tree)",
      "tags": [
        "Data Structure",
        "B-Tree"
      ],
      "date": 1641324600000,
      "profile-image": "/post/profile/profile0.jpg",
      "thumbnail": "/post/data-structure/b-tree/index.png",
      "current-company": "Herit Corporation",
      "current-position": "Backend Server Developer",
      "summary": "B-tree",
      "expose-images": true,
      "excerpt-separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÏûêÎ£åÍµ¨Ï°∞"
      ],
      "images": [
        {
          "src": "/post/data-structure/b-tree/index.png",
          "alt": "B-tree"
        },
        {
          "src": "/post/data-structure/b-tree/node-of-b-tree.png",
          "alt": "B-treeÏùò ÎÖ∏Îìú"
        },
        {
          "src": "/post/data-structure/b-tree/b-tree-node-search.png",
          "alt": "B-tree ÎÖ∏Îìú ÎÇ¥ Í≤ÄÏÉâ"
        },
        {
          "src": "/post/data-structure/b-tree/b-tree-search-1.png",
          "alt": "Î£®Ìä∏ ÎÖ∏ÎìúÏóêÏÑú Í∞Å ÌÇ§Îì§Í≥º ÎπÑÍµêÌïòÏó¨ Ïù¥ÎèôÌï† ÏûêÏãùÎÖ∏ÎìúÏùò Ìè¨Ïù∏ÌÑ∞Î•º Ï∞æÎäîÎã§."
        },
        {
          "src": "/post/data-structure/b-tree/b-tree-search-2.png",
          "alt": "Ï†ëÍ∑ºÌïú ÏûêÏãùÎÖ∏ÎìúÏóêÏÑúÎèÑ ÎèôÏùºÌïòÍ≤å Ìè¨Ïù∏ÌÑ∞Î•º Ï∞æÎäîÎã§."
        },
        {
          "src": "/post/data-structure/b-tree/b-tree-search-3.png",
          "alt": "Î¶¨ÌîÑÎÖ∏ÎìúÏóêÏÑú ÌÉêÏÉâÌïòÎäî ÌÇ§Îì§Ï§ë Í≤ÄÏÉâÍ∞íÏùÑ Ï∞æÎäîÎã§."
        },
        {
          "src": "/post/data-structure/b-tree/b-tree-add-1.png",
          "alt": "Í∞í 11Ïù¥ Ï∂îÍ∞Ä ÎêòÎ©¥, Î£®Ìä∏ ÎÖ∏ÎìúÏóêÏÑú ÎπÑÍµêÌïòÏó¨ ÎÅù Ìè¨Ïù∏ÌÑ∞Î•º Ï∞æÏïÑ ÏûêÏãù ÎÖ∏ÎìúÎ°ú Ïù¥ÎèôÌïúÎã§."
        },
        {
          "src": "/post/data-structure/b-tree/b-tree-add-2.png",
          "alt": "Î¶¨ÌîÑÎÖ∏ÎìúÍπåÏßÄ Ïù¥ÎèôÌïòÏó¨ ÏÇΩÏûÖ ÏúÑÏπòÎ•º Ï∞æÏïòÏúºÎØÄÎ°ú Ìï¥Îãπ ÏúÑÏπòÏóê ÏÇΩÏûÖÎêúÎã§."
        },
        {
          "src": "/post/data-structure/b-tree/b-tree-add-3.png",
          "alt": "Í∞í 12Í∞Ä Ï∂îÍ∞Ä ÎêòÎ©¥ Ïù¥Ï†ÑÍ≥º ÎèôÏùºÌïòÍ≤å Ïù¥ÎèôÌï† Ìè¨Ïù∏ÌÑ∞Î•º Ï∞æÎäîÎã§."
        },
        {
          "src": "/post/data-structure/b-tree/b-tree-add-4.png",
          "alt": "ÏÇΩÏûÖ ÏúÑÏπòÎ•º Ï∞æÏïòÏßÄÎßå 12Í∞Ä ÏÇΩÏûÖÎêòÎ©¥ ÏµúÎåÄ ÌÇ§ Í∞úÏàò ÏúÑÎ∞òÏù¥ÎØÄÎ°ú ÎÖ∏ÎìúÎ•º Î∂ÑÌï†ÌïúÎã§."
        },
        {
          "src": "/post/data-structure/b-tree/condition-of-redistribution-in-b-tree.png",
          "alt": "Ïû¨Î∂ÑÎ∞∞Îäî ÌòïÏ†ú ÎÖ∏ÎìúÏ§ë ÌÇ§Ïùò Í∞úÏàòÍ∞Ä Ïó¨Ïú† ÏûàÏùÑ ÎïåÎßå Í∞ÄÎä•ÌïòÎã§."
        },
        {
          "src": "/post/data-structure/b-tree/redistribution-in-key-deletions-1.png",
          "alt": "ÌÇ§ÏÇ≠Ï†ú Ïù¥ÌõÑ Node 3ÏóêÏÑú ÏµúÏÜå ÌÇ§ Í∞úÏàò Í∑úÏπô ÏúÑÎ∞∞"
        },
        {
          "src": "/post/data-structure/b-tree/redistribution-in-key-deletions-2.png",
          "alt": "Î∂ÄÎ™® ÎÖ∏ÎìúÏùò ÌÇ§Î•º Í∞ÄÏ†∏ÏôÄ ÎÖ∏ÎìúÎ•º Ïú†ÏßÄÌïòÍ≥†, Î∂ÄÎ™®ÎÖ∏ÎìúÎäî Ïû¨Î∂ÑÎ∞∞Îêú ÌÇ§Î•º Í∞ÄÏ†∏Ïò®Îã§."
        },
        {
          "src": "/post/data-structure/b-tree/merge-in-key-deletions-1.png",
          "alt": "ÌÇ§Î•º ÏÇ≠Ï†úÌñàÏßÄÎßå, ÌòïÏ†ú ÎÖ∏Îìú Ï§ëÏóêÎäî Ïó¨Ïú†Î°úÏö¥ ÎÖ∏ÎìúÍ∞Ä ÏóÜÎã§."
        },
        {
          "src": "/post/data-structure/b-tree/merge-in-key-deletions-2.png",
          "alt": "ÌòïÏ†ú ÎÖ∏ÎìúÎ•º Í≥®Îùº Ìï¥Îãπ ÌòïÏ†úÎÖ∏ÎìúÏôÄ Ïó∞Í≤∞ÎêòÏñ¥ ÏûàÎäî Î∂ÄÎ™®ÌÇ§Î•º Í∞ÄÏ†∏ÏôÄ Î≥ëÌï©ÌïúÎã§."
        }
      ],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "B-treeÎûÄ?::what-is-b-tree",
            "title": "B-treeÎûÄ?",
            "fragment": "what-is-b-tree",
            "children": [
              {
                "rank": 3,
                "origin": "Ï†ïÏùò::definition",
                "title": "Ï†ïÏùò",
                "fragment": "definition",
                "children": []
              }
            ]
          },
          {
            "rank": 2,
            "origin": "ÎÖ∏Îìú (Node)::node",
            "title": "ÎÖ∏Îìú (Node)",
            "fragment": "node",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Îç∞Ïù¥ÌÑ∞ Í≤ÄÏÉâ::search",
            "title": "Îç∞Ïù¥ÌÑ∞ Í≤ÄÏÉâ",
            "fragment": "search",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Îç∞Ïù¥ÌÑ∞ ÏÇΩÏûÖ::insertion",
            "title": "Îç∞Ïù¥ÌÑ∞ ÏÇΩÏûÖ",
            "fragment": "insertion",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Îç∞Ïù¥ÌÑ∞ ÏÇ≠Ï†ú::deletion",
            "title": "Îç∞Ïù¥ÌÑ∞ ÏÇ≠Ï†ú",
            "fragment": "deletion",
            "children": []
          }
        ]
      }
    },
    "description": "B-treeÎäî Balanced TreeÏùò ÏïΩÏûêÎ°ú Í∑†Ìòï Ìä∏Î¶¨Î•º ÏùòÎØ∏ÌïúÎã§.\r\nB-treeÎäî ÌòÑÏû¨ÍπåÏßÄÎèÑ Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§, ÌååÏùº ÏãúÏä§ÌÖú Îì± Îã§ÏñëÌïú Î∂ÑÏïºÏóêÏÑú ÏÇ¨Ïö©ÎêòÎäî ÏûêÎ£åÍµ¨Ï°∞Ïù¥Îã§.",
    "content": "\r\n## B-treeÎûÄ?::what-is-b-tree\r\n\r\n![B-tree](/post/data-structure/b-tree/index.png)\r\n:{ \"description\": \"B-tree ÏûêÎ£åÍµ¨Ï°∞\" }\r\n\r\n**B-tree**Îäî Balanced TreeÏùò ÏïΩÏûêÎ°ú Ï†ïÎ†¨Îêú Îç∞Ïù¥ÌÑ∞Î•º Í¥ÄÎ¶¨ÌïòÍ≥† `Log` ÏãúÍ∞ÑÏóêÏÑú Í≤ÄÏÉâ, ÏàúÏ∞®Ï†ëÍ∑º, ÏÇΩÏûÖ, ÏÇ≠Ï†úÍ∞Ä Í∞ÄÎä•Ìïú ÏûêÍ∞ÄÍ∑†Ìòï Ìä∏Î¶¨ ÏûêÎ£åÍµ¨Ï°∞Ïù¥Îã§.\r\nÎåÄÏö©Îüâ Îç∞Ïù¥ÌÑ∞Î•º Îã§Î£∞ Îïå ÏÇ¨Ïö©ÎêòÎ©∞ Îç∞Ïù¥ÌÑ∞ Î≤†Ïù¥Ïä§, ÌååÏùº ÏãúÏä§ÌÖú Îì± Îã§ÏñëÌïú Î∂ÑÏïºÏóêÏÑú ÏÇ¨Ïö©ÎêúÎã§.\r\n\r\n`B-tree`Îäî Ï∞®Ïàò(`Degree`)Î•º Í∞ÄÏßÄÎ©∞ Ïù¥ Í∞íÏóê Îî∞Îùº Íµ¨ÏÑ± Ï†ïÎ≥¥Í∞Ä Îã§ÏùåÍ≥º Í∞ôÏù¥ Îã¨ÎùºÏßÑÎã§:\r\n\r\n*degree: 4Ïù∏ Í≤ΩÏö∞*\r\n\r\n* ÏµúÎåÄ ÏûêÏãù Ïàò: 4\r\n* ÏµúÏÜå ÏûêÏãù Ïàò: (4 + 1) / 2 = 2\r\n* ÏµúÎåÄ ÌÇ§ Í∞úÏàò: 4 - 1 = 3\r\n\r\n>B-treeÎäî Ï∞®Ïàò(m)Ïóê Îî∞Îùº log~m~NÏùò ÏãúÍ∞Ñ Î≥µÏû°ÎèÑÎ•º Í∞ÄÏßÑÎã§.\r\n:{ \"type\": \"important\", \"icon\": \"warning-octagon\" }\r\n\r\n### Ï†ïÏùò::definition\r\n\r\nKnuth Ï†ïÎ¶¨Ïóê Îî∞Îùº, *m* Ï∞® B-treeÎäî Îã§ÏùåÏùò ÏÜçÏÑ±ÏùÑ ÎßåÏ°±ÌïòÎäî Ìä∏Î¶¨Ïù¥Îã§.\r\n\r\n1. Í∞Å ÎÖ∏ÎìúÎäî ÏµúÎåÄ *m* Í∞úÏùò ÏûêÏãùÏùÑ Í∞ñÎäîÎã§.\r\n2. Î£®Ìä∏ÏôÄ Î¶¨ÌîÑ ÎÖ∏ÎìúÎ•º Ï†úÏô∏Ìïú Í∞Å ÎÖ∏ÎìúÎäî ÏµúÏÜå *‚åàm/2‚åâ* Í∞úÏùò ÏûêÏãùÏùÑ Í∞ñÎäîÎã§.\r\n3. Î£®Ìä∏ÎÖ∏ÎìúÎäî Î¶¨ÌîÑÎÖ∏ÎìúÍ∞Ä ÏïÑÎãåÌïú ÏµúÏÜå ÎëêÍ∞úÏùò ÏûêÏãùÎÖ∏ÎìúÎ•º Í∞ñÎäîÎã§.\r\n4. Î™®Îì† Î¶¨ÌîÑÎÖ∏ÎìúÎäî ÎèôÏùºÌïú Î†àÎ≤®Ïóê Ï°¥Ïû¨ÌïúÎã§.\r\n5. *k* Í∞úÏùò ÏûêÏãùÎÖ∏ÎìúÎ•º Í∞ÄÏßÄÎäî ÎÖ∏ÎìúÎäî *k-1* Í∞úÏùò ÌÇ§Î•º Í∞ÄÏßÑÎã§.\r\n\r\nÍ∞Å ÎÇ¥Î∂Ä ÎÖ∏ÎìúÏùò ÌÇ§Îäî ÏÑúÎ∏åÌä∏Î¶¨Î•º Íµ¨Î∂ÑÌïòÎäî Î∂ÑÎ¶¨Í∞íÏúºÎ°ú ÏûëÏö©ÌïúÎã§. ÏòàÎ•ºÎì§Ïñ¥ ÎÇ¥Î∂Ä ÎÖ∏ÎìúÍ∞Ä 3Í∞úÏùò ÏûêÏãùÎÖ∏ÎìúÎ•º Í∞ñÍ≥† ÏûàÎã§Î©¥, 2Í∞úÏùò ÌÇ§Î•º Í∞ÄÏßÄÍ≥† ÏûàÏñ¥ÏïºÎßå ÌïúÎã§:  *a~1~* ÏôÄ *a~2~*.  \r\nÏ¢åÏ∏° ÏÑúÎ∏åÌä∏Î¶¨Ïùò Î™®Îì† Í∞íÏùÄ *a~1~* Î≥¥Îã§ ÏûëÍ≥†, Ï§ëÏïô ÏÑúÎ∏åÌä∏Î¶¨Ïùò Î™®Îì† Í∞íÏùÄ *a~1~* ÏôÄ *a~2~* ÏÇ¨Ïù¥Ïóê ÏûàÏúºÎ©∞, Ïö∞Ï∏° ÏÑúÎ∏åÌä∏Î¶¨Ïùò Î™®Îì† Í∞íÏùÄ *a~2~* Î≥¥Îã§ ÌÅ¨Îã§.\r\n\r\n**ÎÇ¥Î∂Ä ÎÖ∏Îìú**\r\n\r\nÎÇ¥Î∂Ä ÎÖ∏ÎìúÎäî Î£®Ìä∏ÎÖ∏ÎìúÏôÄ Î¶¨ÌîÑÎÖ∏ÎìúÎ•º Ï†úÏô∏Ìïú Î™®Îì† ÎÖ∏ÎìúÏù¥Îã§. Ïù¥Îäî ÏùºÎ∞òÏ†ÅÏúºÎ°ú ÏûêÏãù Ìè¨Ïù∏ÌÑ∞ÏôÄ ÌÇ§Ïùò ÏßëÌï©ÏúºÎ°ú Ï†ïÎ†¨ Îè†Ïñ¥ ÌëúÌòÑÎêúÎã§. \r\nÍ∞Å ÎÇ¥Î∂Ä ÎÖ∏ÎìúÎäî **ÏµúÎåÄ** *U* Í∞ú, **ÏµúÏÜå** *L* Í∞úÏùò ÏûêÏãùÎÖ∏ÎìúÎ•º Ìè¨Ìï®ÌïúÎã§. Îî∞ÎùºÏÑú, ÌÇ§Ïùò Í∞úÏàòÎäî Ìï≠ÏÉÅ ÏûêÏãùÎÖ∏Îìú(*L*-1 ÏóêÏÑú *U*-1 ÏÇ¨Ïù¥Ïùò ÌÇ§ Í∞úÏàò) Í∞úÏàò -1 Ïù¥Îã§.\r\n*U* Îäî 2*L* ÎòêÎäî 2*L* - 1Ï§ëÏóê ÌïòÎÇòÏó¨Ïïº ÌïúÎã§. Í∑∏Îü¨ÎØÄÎ°ú Í∞Å ÎÇ¥Î∂Ä ÎÖ∏ÎìúÎäî ÏµúÏÜåÌïú Ï†àÎ∞ò Ïù¥ÏÉÅ Ï±ÑÏõåÏßÑÎã§. *U* ÏôÄ *L* ÏÇ¨Ïù¥Ïùò Í¥ÄÍ≥ÑÎäî Îã§ÏùåÏùÑ ÎÇòÌÉÄÎÇ∏Îã§.\r\n\r\n* Ìï©Î≤ïÎÖ∏ÎìúÎ•º ÎßåÎì§Í∏∞ ÏúÑÌï¥ Í≤∞Ìï©Îê† Ïàò ÏûàÎäî Î∞òÎßå Ï±ÑÏõåÏßÑ ÎëêÍ∞úÏùò ÎÖ∏Îìú\r\n* ÎëêÍ∞úÏùò Ìï©Î≤ïÎÖ∏ÎìúÎ°ú Î∂ÑÎ¶¨Îê† ÏàòÏûàÎäî ÌïúÍ∞úÏùò ÍΩâÏ∞¨ ÎÖ∏Îìú (ÎßåÏïΩ ÌïúÍ∞úÏùò ÌÇ§Î•º Î∂ÄÎ™® ÎÖ∏ÎìúÎ°ú ÏÇΩÏûÖÌï†Ïàò ÏûàÎäî Í≥µÍ∞ÑÏù¥ ÏûàÎã§Î©¥)\r\n\r\n> **Ìï©Î≤ïÎÖ∏Îìú**ÎûÄ ÌÇ§Ïùò Í∞úÏàòÍ∞Ä ÏµúÏÜå Ïù¥ÏÉÅÏù¥Î©∞ ÏµúÎåÄ Ïù¥ÌïòÏù∏ ÎÖ∏ÎìúÎ•º ÎßêÌïúÎã§.\r\n:{ \"type\": \"tip\", \"icon\": \"lightbulb\" }\r\n\r\nÏù¥Îü¨Ìïú ÏÜçÏÑ±ÏùÄ B-treeÏóê ÏÉàÎ°úÏö¥ Í∞íÏùÑ Ï∂îÍ∞ÄÌïòÍ±∞ÎÇò ÏÇ≠Ï†úÍ∞Ä Í∞ÄÎä•ÌïòÍ≤å ÎßåÎì§Í≥† B-tree ÏÜçÏÑ±ÏùÑ ÏßÄÌÇ§Í∏∞ ÏúÑÌï¥ Ìä∏Î¶¨Î•º Ï°∞Ï†ïÌïúÎã§.\r\n\r\n**Î£®Ìä∏ ÎÖ∏Îìú**\r\n* Î£®Ìä∏ÎÖ∏ÎìúÏùò ÏûêÏãù Í∞úÏàòÎäî ÎÇ¥Î∂ÄÎÖ∏ÎìúÏôÄ ÎèôÏùºÌïú ÏÉÅÌïúÏùÄ ÏûàÏßÄÎßå, ÌïòÌïúÏùÄ ÏóÜÎã§. ÏòàÎ•ºÎì§Ïñ¥ Ï†ÑÏ≤¥ Ìä∏Î¶¨Ïóê ÌÇ§Ïùò Í∞úÏàòÍ∞Ä *L*-1 Î≥¥Îã§ Ï†ÅÏùÑ Îïå, Î£®Ìä∏ÎÖ∏ÎìúÎäî ÏûêÏãùÎÖ∏ÎìúÍ∞Ä ÏóÜÎäî Îã®Ïùº ÎÖ∏ÎìúÏù∏ ÏÉÅÌô©Ïù¥Îã§.\r\n\r\n**Î¶¨ÌîÑ ÎÖ∏Îìú**\r\n* Knuth Ïö©Ïñ¥Î°ú \"Î¶¨ÌîÑ\" ÎÖ∏ÎìúÎäî Ïã§Ï†ú Îç∞Ïù¥ÌÑ∞ Í∞ùÏ≤¥ / Ï≤≠ÌÅ¨Ïù¥Îã§. Îã§Î•∏ Ï†ÄÏûêÎì§Ïù¥ ÎßêÌïòÎäî \"Î¶¨ÌîÑ\"Îäî Î¶¨ÌîÑ ÎÖ∏Îìú Î∞îÎ°ú ÏúÑÏóêÏûàÎäî ÎÇ¥Î∂Ä ÎÖ∏ÎìúÏóê Ìï¥Îãπ:\r\n  * Ïù¥ ÎÖ∏Îìú Îì§ÏùÄ ÌÇ§(ÏµúÎåÄ *m*-1, Î£®Ìä∏Í∞Ä ÏïÑÎãàÎ©¥  ÏµúÏÜå *m*/2 -1Í∞ú)ÏôÄ Îç∞Ïù¥ÌÑ∞ Í∞ùÏ≤¥/Ï≤≠ÌÅ¨Î•º Í∞ÄÎ¶¨ÌÇ§Îäî Ìè¨Ïù∏ÌÑ∞Îßå Ï†ÄÏû•\r\n\r\n>ÌòÑÎåÄÏùò B-treeÎäî Ïù¥ Knuth Ï†ïÎ¶¨ÏóêÏÑú Î∞úÏ†ÑÌïòÏòÄÎã§.\r\n:{ \"type\": \"tip\", \"icon\": \"lightbulb\" }\r\n\r\n\r\n## ÎÖ∏Îìú (Node)::node\r\n\r\n![B-treeÏùò ÎÖ∏Îìú](/post/data-structure/b-tree/node-of-b-tree.png)\r\n:{ \"align\": \"center\", \"max-width\": \"500px\", \"description\": \"B-TreeÏùò ÎÖ∏Îìú\" }\r\n\r\nÎÖ∏ÎìúÎäî ÏûêÏãù ÎÖ∏ÎìúÎì§Ïùò Ìè¨Ïù∏ÌÑ∞Îì§Í≥º ÌÇ§Îì§Î°ú Íµ¨ÏÑ±ÎêúÎã§. Ïù¥ÎØ∏ÏßÄÏóêÏÑú Î≥¥Ïù¥Îäî p1, p2...pnÏùÄ ÏûêÏãùÎÖ∏Îìú Îì§Ïùò Ìè¨Ïù∏ÌÑ∞Î•º ÏùòÎØ∏ÌïúÎã§.\r\ns1, s2, s3Îäî ÌÇ§Î•º ÏùòÎØ∏ÌïúÎã§. Îç∞Ïù¥ÌÑ∞Î•º Í≤ÄÏÉâÌï† Îïå, ÌÇ§Îì§Ï§ëÏóêÏÑú ÎπÑÍµêÎ•º ÌïòÍ≥† ÏÇ¨Ïûá Í∞íÏù¥ÎùºÎ©¥ Ìï¥Îãπ Î≤îÏúÑÏùò ÏûêÏãùÎÖ∏ÎìúÎ°ú Ïù¥ÎèôÌïúÎã§.\r\n\r\n**ÎÖ∏ÎìúÏùò Íµ¨Ï°∞**\r\n\r\nÎã§Î•∏ Ìä∏Î¶¨Îì§Í≥º ÎßàÏ∞¨Í∞ÄÏßÄÎ°ú B-treeÎèÑ ÏÑ∏Í∞ÄÏßÄ ÌÉÄÏûÖÏùò ÎÖ∏ÎìúÎì§Î°ú ÌëúÌòÑÎê† Ïàò ÏûàÎã§: *Î£®Ìä∏, ÎÇ¥Î∂Ä, Î¶¨ÌîÑ*.\r\n\r\nÎÖ∏ÎìúÏùò Íµ¨ÏÑ±ÏöîÏÜåÎäî Îã§ÏùåÍ≥º Í∞ôÎã§:\r\n\r\n* *K*: B-treeÏùò Í∞Å ÎÖ∏ÎìúÏóêÎåÄÌïú Í≤ÄÏÉâ ÌÇ§Ïùò ÏµúÎåÄ Í∞úÏàò. (Ïù¥ Í∞íÏùÄ Ï†ÑÏ≤¥ Ìä∏Î¶¨ÏóêÏÑú ÎèôÏùºÌïòÎã§)\r\n* *pt~i~*: ÌïòÏúÑÌä∏Î¶¨Î•º ÏãúÏûëÌïòÎäî ÏûêÏãùÎÖ∏ÎìúÏóê ÎåÄÌïú Ìè¨Ïù∏ÌÑ∞.\r\n* *pr~i~*: Îç∞Ïù¥ÌÑ∞Î•º Ï†ÄÏû•ÌïòÎäî Î†àÏΩîÎìúÏóê ÎåÄÌïú Ìè¨Ïù∏ÌÑ∞.\r\n* *k~i~*: 0Î∂ÄÌÑ∞ ÏãúÏûëÌïòÎäî ÎÖ∏ÎìúÏù∏Îç±Ïä§ *i*Ïùò Í≤ÄÏÉâÌÇ§.\r\n\r\nB-treeÏóêÏÑúÎäî ÎÖ∏ÎìúÏóêÎåÄÌï¥ Îã§ÏùåÏùò ÏÜçÏÑ±Îì§Ïù¥ Í¥ÄÎ¶¨ÎêúÎã§.\r\n\r\n* B-treeÎÇ¥ *k~i~*(ÌÇ§)Í∞Ä Ï°¥Ïû¨ÌïúÎã§Î©¥ *k~i-1~*Îäî Ï°¥Ïû¨. (Ïò§Î¶Ñ Ï∞®Ïàú Ï†ïÎ†¨Ïóê ÎåÄÌïú Í∑†Ìòï Í¥ÄÎ¶¨Î•º ÏùòÎØ∏)\r\n* Î™®Îì† Î¶¨ÌîÑÎÖ∏ÎìúÎäî ÎèôÏùºÌïú Ï°∞ÏÉÅ ÎÖ∏ÎìúÏùò Í∞úÏàòÎ•º Í∞ÄÏßÑÎã§.(Ìä∏Î¶¨Ïùò ÎÜíÏù¥Î•º ÏùºÏ†ïÌïòÍ≤å Ïú†ÏßÄÌïòÎäî Í¥ÄÎ¶¨Î•º ÏùòÎØ∏)\r\n\r\nB-treeÏóêÏÑú ÎÇ¥Î∂Ä ÎÖ∏ÎìúÎäî Îã§ÏùåÏùò ÌòïÏãùÏùÑ Í∞ñÎäîÎã§:\r\n\r\n| pt~0~ | k~0~ | pt~1~ | pr~0~ | k~1~ | pt~2~ | pr~1~ | ... | k~K-1~ | pt~K~ | pr~K-1~ |\r\n|-------|------|-------|-------|------|-------|-------|------|--------|-------|---------|\r\n:{ \"align\": \"center\", \"max-width\": \"500px\", \"description\": \"ÎÇ¥Î∂ÄÎÖ∏Îìú Íµ¨Ï°∞\", \"type\": \"filled\" }\r\n\r\n| *k~0~* Ï°¥Ïû¨ Ïãú *pt~0~*             | *k~i-1~* , *k~i~* Ï°¥Ïû¨ Ïãú *pt~i~*                 | *k~i-1~* Ï°¥Ïû¨, *k~i~* ÎØ∏Ï°¥Ïû¨ Ïãú *pt~i~* | *k~i~* , *k~i-1~* ÎØ∏Ï°¥Ïû¨ Ïãú *pt~i~* | *k~i~* Ï°¥Ïû¨ Ïãú *pr~i~*       | *k~i~* ÎØ∏Ï°¥Ïû¨ Ïãú *pr~i~* |\r\n|---------------------------------|------------------------------------------------|-----------------------------------|---------------------------------|---------------------------|----------------------|\r\n| *k~0~* Î≥¥Îã§ ÏûëÏùÄ ÌÇ§Îì§ÏùÑ Í∞ÄÏßÑ ÏÑúÎ∏åÌä∏Î¶¨Î•º Í∞ÄÎ¶¨ÌÇ®Îã§. | *k~i-1~* Î≥¥Îã§ ÌÅ¨Í≥† *k~i~* Î≥¥Îã§ ÏûëÏùÄ ÌÇ§Îì§ÏùÑ Í∞ÄÏßÑ ÏÑúÎ∏åÌä∏Î¶¨Î•º Í∞ÄÎ¶¨ÌÇ®Îã§. | *k~i-1~* Î≥¥Îã§ ÌÅ∞ ÌÇ§Îì§ÏùÑ Í∞ÄÏßÑ ÏÑúÎ∏åÌä∏Î¶¨Î•º Í∞ÄÎ¶¨ÌÇ®Îã§.  | Ïó¨Í∏∞ÏÑú *pt~i~* Îäî ÎπÑÏñ¥ÏûàÎã§.             | *k~i~* ÏôÄ Í∞ôÏùÄ Í∞íÏù∏ Î†àÏΩîÎìúÎ•º Í∞ÄÎ¶¨ÌÇ®Îã§. | Ïó¨Í∏∞ÏÑú *pt~i~* Îäî ÎπÑÏñ¥ÏûàÎã§.  |\r\n:{ \"type\": \"filled\" }\r\n\r\n## Îç∞Ïù¥ÌÑ∞ Í≤ÄÏÉâ::search\r\n\r\n![B-tree ÎÖ∏Îìú ÎÇ¥ Í≤ÄÏÉâ](/post/data-structure/b-tree/b-tree-node-search.png)\r\n:{ \"align\": \"center\", \"max-width\": \"300px\", \"description\": \"B-tree ÎÖ∏Îìú ÎÇ¥ Í≤ÄÏÉâ\" }\r\n\r\nÍ≤ÄÏÉâÏùÄ Î£®Ìä∏ ÎÖ∏ÎìúÎ∂ÄÌÑ∞, Î¶¨ÌîÑÎÖ∏ÎìúÍπåÏßÄ ÏàúÏ∞®Ï†ÅÏúºÎ°ú Ïù¥Ïñ¥ÏßÄÎ©∞ log~m~NÏùò ÏãúÍ∞Ñ Î≥µÏû°ÎèÑÎ•º Í∞ÄÏßÑÎã§.\r\nÎÖ∏Îìú ÎÇ¥ÏóêÏÑú ÎπÑÍµêÎäî Ìï≠ÏÉÅ `Ï§ëÏïô(Ï§ëÍ∞Ñ Í∞í)`ÌïòÍ≥†Îßå Ïù¥Î£®Ïñ¥ÏßÄÎäîÎç∞, Í≤ÄÏÉâ Í≥ºÏ†ïÏóê Îî∞Îùº Ï§ëÏïôÏù¥ Î∞îÎÄêÎã§.\r\n\r\n>Ï§ëÏïô Ïù∏Îç±Ïä§Îäî Í∞Å Ïù∏Îç±Ïä§Ïùò (ÏãúÏûë + ÎÅù) / 2Î°ú Í≥ÑÏÇ∞ÎêúÎã§.  \r\n:{ \"type\": \"tip\", \"icon\": \"lightbulb\" }\r\n\r\n**(`ÏãúÏûë: 0, Ï§ëÏïô: 1, ÎÅù: 3`)**    \r\nÏúÑ Ïù¥ÎØ∏ÏßÄÏ≤òÎüº `ÏãúÏûë: 0, ÎÅù: 3`Ïù¥ÎùºÎ©¥ Ï§ëÏïôÏùÄ `(0 + 3) / 2 = 1`Ïù¥ ÎêúÎã§. Ïù¥ Í≥µÏãùÏúºÎ°ú **Î≤îÏúÑÍ∞Ä Ï†ïÌï¥Ïßà Îïå** ÎßàÎã§ Ï§ëÏïôÏù¥ Î∞îÎÄêÎã§.  \r\nÏ§ëÏïô Í∞íÏù¥ Ï†ïÌï¥ÏßÄÎ©¥, ÎπÑÍµêÎ•º ÏãúÏûëÌïòÍ≥† `Ï§ëÏïô < Ï∞æÎäî Í∞í`Ïù¥ÎùºÎ©¥, ÏãúÏûë Ìè¨Ïù∏ÌÑ∞Îäî `Ï§ëÏïô +1: 2`Í∞Ä ÎêúÎã§.\r\n\r\n>Î∞òÎåÄÎ°ú `Ï∞æÎäî Í∞í < Ï§ëÏïô`Ïù¥ÎùºÎ©¥, ÎÅù Ìè¨Ïù∏ÌÑ∞Îäî `Ï§ëÏïô -1: 1`Ïù¥ ÎêúÎã§.\r\n:{ \"type\": \"tip\", \"icon\": \"lightbulb\" }\r\n\r\nÍ∑∏Îüº Îã§Ïãú `(2 + 3) / 2 = 2`Í∞Ä Ï§ëÏïôÏù¥ ÎêòÍ≥† Îã§Ïãú ÎπÑÍµêÌïúÎã§.   \r\n**(`ÏãúÏûë: 2, Ï§ëÏïô: 2, ÎÅù: 3`)**  \r\nÏù¥Îïå `Ï∞æÎäî Í∞í < Ï§ëÏïô(2)`Ïù¥ÎùºÎ©¥ `ÏãúÏûë(2)`Î≥¥Îã§ ÏûëÏùÄ Í∞íÏù¥Í∏∞ ÎïåÎ¨∏Ïóê `44`ÏôÄ `79`ÏÇ¨Ïù¥Ïùò Ìè¨Ïù∏ÌÑ∞Î°ú Îã§Ïùå ÏûêÏãùÎÖ∏ÎìúÎ°ú Ïù¥ÎèôÌïòÍ≥†,\r\n`Ï§ëÏïô(2) < Ï∞æÎäî Í∞í` Ïù¥ÎùºÎ©¥ ÎòêÎã§Ïãú ÏãúÏûë Ìè¨Ïù∏ÌÑ∞Î•º `Ï§ëÏïô +1: 3`ÏúºÎ°ú Ïù¥ÎèôÌïúÎã§.\r\n\r\nÏù¥ Í≥ºÏ†ïÏóêÏÑú ÎßåÏïΩ Ï§ëÏïô Í∞íÍ≥º ÎπÑÍµêÌï† Îïå Í∞ôÎã§Î©¥, Ìï¥Îãπ Í∞í ÌÉêÏÉâÏóê ÏÑ±Í≥µÌïúÍ≤ÉÏù¥Îã§.\r\n\r\nÏù¥Îü∞ ÏãùÏúºÎ°ú Î£®Ìä∏ÎÖ∏ÎìúÎ∂ÄÌÑ∞ Í≤ÄÏÉâÏù¥ Ïù¥Î£®Ïñ¥ ÏßÄÎ©¥ ÏïÑÎûòÏôÄ Í∞ôÏù¥ Ï≤òÎ¶¨ÎêúÎã§.\r\n\r\n::image-group\r\n\r\n![Î£®Ìä∏ ÎÖ∏ÎìúÏóêÏÑú Í∞Å ÌÇ§Îì§Í≥º ÎπÑÍµêÌïòÏó¨ Ïù¥ÎèôÌï† ÏûêÏãùÎÖ∏ÎìúÏùò Ìè¨Ïù∏ÌÑ∞Î•º Ï∞æÎäîÎã§.](/post/data-structure/b-tree/b-tree-search-1.png)\r\n\r\n![Ï†ëÍ∑ºÌïú ÏûêÏãùÎÖ∏ÎìúÏóêÏÑúÎèÑ ÎèôÏùºÌïòÍ≤å Ìè¨Ïù∏ÌÑ∞Î•º Ï∞æÎäîÎã§.](/post/data-structure/b-tree/b-tree-search-2.png)\r\n\r\n![Î¶¨ÌîÑÎÖ∏ÎìúÏóêÏÑú ÌÉêÏÉâÌïòÎäî ÌÇ§Îì§Ï§ë Í≤ÄÏÉâÍ∞íÏùÑ Ï∞æÎäîÎã§.](/post/data-structure/b-tree/b-tree-search-3.png)\r\n\r\n::\r\n\r\n>Ìà¨ Ìè¨Ïù∏ÌÑ∞(ÏãúÏûë, ÎÅù)Î°ú Î≤îÏúÑ ÎÇ¥ Ïù¥Î∂ÑÌÉêÏÉâÏù¥ ÎêòÎ†§Î©¥ Î®ºÏ†Ä ÎÖ∏ÎìúÎÇ¥ Ï†ïÎ†¨Ïù¥ ÎêòÏñ¥Ïïº ÌïúÎã§. Ïù¥Îäî B-treeÍ∞Ä  Ï†ïÎ†¨ÏùÑ Ïú†ÏßÄÌïòÎäî ÏûêÍ∞ÄÍ∑†Ìòï Ìä∏Î¶¨ Ïù¥Í∏∞ ÎïåÎ¨∏Ïóê Í∞ÄÎä•ÌïòÎã§.\r\n:{ \"type\": \"note\", \"icon\": \"info\" }\r\n\r\n## Îç∞Ïù¥ÌÑ∞ ÏÇΩÏûÖ::insertion\r\n\r\nÍ≤ÄÏÉâÌï† ÎïåÏôÄ ÎßàÏ∞¨Í∞ÄÏßÄÎ°ú Î£®Ìä∏ÎÖ∏Îìú Î∂ôÏñ¥ Î¶¨ÌîÑÎÖ∏ÎìúÍπåÏßÄ Ïù¥ÎèôÌïòÎ©∞ ÏÇΩÏûÖÌï† ÏúÑÏπòÎ•º Ï∞æÎäîÎã§.  \r\nÏã§Ï†ú ÏÇΩÏûÖÏùÄ Î¶¨ÌîÑÎÖ∏ÎìúÏóêÏÑú Ï†úÏùº Î®ºÏ†Ä ÏùºÏñ¥ÎÇòÎ©∞, Í∑∏ Í≥ºÏ†ïÎì§ÏùÑ Îã§ÏùåÏóê ÏÑ§Î™ÖÌïúÎã§:\r\n\r\n**ÏùºÎ∞ò Ï†ÅÏù∏ Îç∞Ïù¥ÌÑ∞ Ï∂îÍ∞Ä**\r\n\r\n![Í∞í 11Ïù¥ Ï∂îÍ∞Ä ÎêòÎ©¥, Î£®Ìä∏ ÎÖ∏ÎìúÏóêÏÑú ÎπÑÍµêÌïòÏó¨ ÎÅù Ìè¨Ïù∏ÌÑ∞Î•º Ï∞æÏïÑ ÏûêÏãù ÎÖ∏ÎìúÎ°ú Ïù¥ÎèôÌïúÎã§.](/post/data-structure/b-tree/b-tree-add-1.png)\r\n:{ \"align\": \"center\", \"max-width\": \"300px\", \"description\": \"2Î≤à Ìè¨Ïù∏ÌÑ∞Î°ú Ïù¥Îèô\" }\r\n\r\nÏúÑÏùò Íµ¨Ï°∞ÏóêÏÑú Í∞í 11Ïù¥ Ï∂îÍ∞ÄÎêòÎ©¥ Î£®Ìä∏ ÎÖ∏ÎìúÏóêÏÑúÎäî ÏÇΩÏûÖ ÏúÑÏπòÎ•º Ï∞æÍ∏∞ÏúÑÌï¥ [Í≤ÄÏÉâ](#search)ÏóêÏÑú ÏÇ¨Ïö©Ìïú Î∞©Î≤ïÎåÄÎ°ú Ïù¥Î∂ÑÌÉêÏÉâÏúºÎ°ú Ïù¥ÎèôÌï† Ìè¨Ïù∏ÌÑ∞Î•º Ï∞æÎäîÎã§.\r\n\r\n![Î¶¨ÌîÑÎÖ∏ÎìúÍπåÏßÄ Ïù¥ÎèôÌïòÏó¨ ÏÇΩÏûÖ ÏúÑÏπòÎ•º Ï∞æÏïòÏúºÎØÄÎ°ú Ìï¥Îãπ ÏúÑÏπòÏóê ÏÇΩÏûÖÎêúÎã§.](/post/data-structure/b-tree/b-tree-add-2.png)\r\n:{ \"align\": \"center\", \"max-width\": \"300px\", \"description\": \"Î¶¨ÌîÑ ÎÖ∏ÎìúÍπåÏßÄ Ïù¥Îèô Î∞è ÏÇΩÏûÖ\" }\r\n\r\nÏûêÏãùÎÖ∏ÎìúÏùò Ìè¨Ïù∏ÌÑ∞Î°ú Ïù¥ÎèôÎêú Îí§, Í∏∞Ï°¥Ïùò ÌÇ§Îì§Í≥º ÎπÑÍµêÌïòÏó¨ ÏÇΩÏûÖÌï† ÏúÑÏπòÎ•º Ï∞æÍ≥† **ÏµúÎåÄ ÌÇ§ Í∞úÏàò**Î•º ÎÑòÏßÄ ÏïäÏïòÎã§Î©¥ Í∑∏ ÏûêÎ¶¨Î°ú ÏÇΩÏûÖÎêúÎã§.\r\n\r\n**Îç∞Ïù¥ÌÑ∞ Ï∂îÍ∞ÄÏóê ÎåÄÌïú ÎÖ∏Îìú ÌôïÏû•**\r\n\r\n![Í∞í 12Í∞Ä Ï∂îÍ∞Ä ÎêòÎ©¥ Ïù¥Ï†ÑÍ≥º ÎèôÏùºÌïòÍ≤å Ïù¥ÎèôÌï† Ìè¨Ïù∏ÌÑ∞Î•º Ï∞æÎäîÎã§.](/post/data-structure/b-tree/b-tree-add-3.png)\r\n:{ \"align\": \"center\", \"max-width\": \"300px\", \"description\": \"2Î≤à Ìè¨Ïù∏ÌÑ∞Î°ú Ïù¥Îèô\" }\r\n\r\nÍ∞í 12Í∞Ä Ï∂îÍ∞Ä ÎêòÎ©¥ Ïù¥Ï†ÑÍ≥º ÎèôÏùºÌïòÍ≤å Ïù¥ÎèôÌï† Ìè¨Ïù∏ÌÑ∞Î•º Ï∞æÎäîÎã§.\r\n\r\n![ÏÇΩÏûÖ ÏúÑÏπòÎ•º Ï∞æÏïòÏßÄÎßå 12Í∞Ä ÏÇΩÏûÖÎêòÎ©¥ ÏµúÎåÄ ÌÇ§ Í∞úÏàò ÏúÑÎ∞òÏù¥ÎØÄÎ°ú ÎÖ∏ÎìúÎ•º Î∂ÑÌï†ÌïúÎã§.](/post/data-structure/b-tree/b-tree-add-4.png)\r\n:{ \"align\": \"center\", \"max-width\": \"300px\", \"description\": \"ÏµúÎåÄ ÌÇ§ Í∞úÏàò ÏúÑÎ∞ò! ÎÖ∏Îìú Î∂ÑÌï†\" }\r\n\r\nÍ∏∞Ï°¥ `[8, 9, 10, 11]`ÏóêÏÑú `12`Í∞Ä Ï∂îÍ∞ÄÎêòÎ©¥ `[8 ,9, 10, 11, 12]`Í∞Ä ÎêòÏñ¥ **ÏµúÎåÄ ÌÇ§ Í∞úÏàò**Î•º ÏúÑÎ∞òÌïòÍ≤å ÎêúÎã§.\r\n\r\nÏù¥ Í≤ΩÏö∞ÏóêÎäî Ï§ëÍ∞Ñ Í∞í(`10`)ÏùÑ Í∏∞Ï§ÄÏúºÎ°ú ÎÖ∏ÎìúÎ•º Î∂ÑÌï†ÌïòÏó¨, Ï§ëÍ∞ÑÍ∞íÏùò ÏôºÏ™Ω Ìè¨Ïù∏ÌÑ∞Î•º `[8, 9]` ÎÖ∏ÎìúÏóê Ïó∞Í≤∞, Ïò§Î•∏Ï™Ω Ìè¨Ïù∏ÌÑ∞Î•º `[11, 12]` ÎÖ∏ÎìúÏóê Ïó∞Í≤∞ÌïúÎã§.\r\nÍ∑∏Î¶¨Í≥† Ï§ëÍ∞Ñ Í∞í`10`ÏùÄ Î∂ÄÎ™®ÎÖ∏ÎìúÎ°ú Ïù¥ÎèôÌïòÏó¨, Î∂ÄÎ™®ÎÖ∏ÎìúÏóêÏÑúÎèÑ ÏÇΩÏûÖÏùÑ ÏãúÎèÑÌïúÎã§.\r\n\r\nÎßåÏïΩ Î∂ÄÎ™®ÎÖ∏ÎìúÏóêÏÑúÎèÑ ÏµúÎåÄ ÌÇ§ Í∞úÏàòÎ•º ÎÑòÏñ¥Í∞ÄÎ©¥, Î∂ÄÎ™®ÎÖ∏ÎìúÎèÑ Î∂ÑÌï†ÌïòÏó¨ Ï§ëÍ∞ÑÍ∞íÏùÑ Î∂ÄÎ™®ÎÖ∏ÎìúÎ°ú Ïù¥ÎèôÌïòÍ≥†, Î∂ÄÎ™®ÎÖ∏ÎìúÏùò Î∂ÄÎ™®ÎÖ∏ÎìúÎ°ú Ïù¥ÎèôÌïòÏó¨ ÏÇΩÏûÖÏùÑ ÏãúÎèÑÌïúÎã§.\r\n\r\n>ÏùºÎ∞òÏ†ÅÏúºÎ°ú B-treeÎäî Îü∞ÌÉÄÏûÑÏóê Ï∞®ÏàòÎ•º ÏàòÏ†ïÌï†Ïàò ÏóÜÏúºÎØÄÎ°ú Ìï¥Îãπ Ï∞®ÏàòÏùò Ìä∏Î¶¨Í∞Ä Í∞ÄÏßàÏàò ÏûàÎäî Î™®Îì† ÌÇ§Ïùò Í∞úÏàòÏóê ÎèÑÎã¨ÌïúÎã§Î©¥, ÏÉàÎ°úÏö¥ Ï∞®ÏàòÏùò B-treeÎ•º ÏÉùÏÑ±ÌïòÏó¨ Îç∞Ïù¥ÌÑ∞Î•º Ïù¥ÎèôÏãúÌÇ®Îã§.\r\n:{ \"type\": \"important\", \"icon\": \"warning-diamond\" }\r\n\r\n## Îç∞Ïù¥ÌÑ∞ ÏÇ≠Ï†ú::deletion\r\n\r\nÏïûÏÑú ÏÑ§Î™ÖÌïú mÏ∞® B-treeÏùò ÎÖ∏Îìú Í∑úÏπôÏùÄ Îã§ÏùåÍ≥º Í∞ôÎã§.\r\n\r\n* ÏµúÎåÄ ÏûêÏãù Ïàò: `m`\r\n* ÏµúÏÜå ÏûêÏãù Ïàò: `m / 2`\r\n* ÏµúÎåÄ ÌÇ§ Í∞úÏàò: `m - 1`\r\n\r\n>ÏÇ≠Ï†úÎäî ÏÇΩÏûÖÍ≥º Ï°∞Í∏à Îã§Î•¥Í≤å ÏÇ≠Ï†úÍ∞Ä Îê† ÎïåÎßàÎã§ ÏúÑ Í∑úÏπôÏùÑ ÌôïÏù∏ÌïòÎ©∞ Ïù¥Ïóê Îî∞Î•∏ Ïû¨Î∂ÑÏû¨ÎÇò Î≥ëÌï©Ïù¥ Î∞úÏÉùÌïúÎã§.\r\n:{ \"type\": \"important\", \"icon\": \"warning-diamond\" }\r\n\r\nÏ†úÏïΩÏóê Í±∏Î¶¨ÏßÄ ÏïäÎäî Îã§Î©¥ ÏÇ≠Ï†úÌõÑ Î≥ÑÎã§Î•∏ Ï°∞ÏπòÍ∞Ä ÏóÜÎã§. Îç∞Ïù¥ÌÑ∞ ÏÇ≠Ï†úÏóê ÎåÄÌï¥ Ï≤òÎ¶¨ Ìï†Ïàò ÏûàÎäî Ï°∞ÏπòÎäî `Î≥ëÌï©`Í≥º `Ïû¨Î∂ÑÎ∞∞`Í∞Ä ÏûàÎã§.\r\n\r\n**Îç∞Ïù¥ÌÑ∞ ÏÇ≠Ï†úÏóê ÎåÄÌïú Ïû¨Î∂ÑÎ∞∞**\r\n\r\n![Ïû¨Î∂ÑÎ∞∞Îäî ÌòïÏ†ú ÎÖ∏ÎìúÏ§ë ÌÇ§Ïùò Í∞úÏàòÍ∞Ä Ïó¨Ïú† ÏûàÏùÑ ÎïåÎßå Í∞ÄÎä•ÌïòÎã§.](/post/data-structure/b-tree/condition-of-redistribution-in-b-tree.png)\r\n:{ \"align\": \"center\", \"max-width\": \"700px\", \"description\": \"Ïû¨Î∂ÑÎ∞∞Îäî ÌòïÏ†úÎÖ∏ÎìúÏùò Í∞úÏàòÏùò ÏòÅÌñ•ÏùÑ Î∞õÎäîÎã§.\" }\r\n\r\nÌÇ§Í∞Ä ÏÇ≠Ï†úÎêòÍ≥† ÏµúÏÜå ÌÇ§ Í∞úÏàò Í∑úÏπôÏóê ÏúÑÎ∞∞ ÎêòÏóàÎã§Î©¥, ÌòïÏ†ú ÎÖ∏ÎìúÏóê Ïó¨Ïú†Í∞Ä ÏûàÏùÑ Îïå Ïû¨Î∂ÑÎ∞∞Í∞Ä Í∞ÄÎä•ÌïòÎã§.\r\n\r\nÏòàÎ•º Ï≤´Î≤àÏß∏ `b-tree`Îäî `Node 3`Ïùò 6Î≤à ÌÇ§Í∞Ä ÏÇ≠Ï†ú ÎêòÎçîÎùºÎèÑ, `Node 4`Ïóê ÌÇ§Í∞Ä Ïó¨Ïú†(2 < 3) ÏûàÍ∏∞ ÎïåÎ¨∏Ïóê Ïû¨Î∂ÑÎ∞∞Í∞Ä Í∞ÄÎä•ÌïòÎã§.  \r\nÎ∞òÎåÄÎ°ú ÎëêÎ≤àÏß∏ `b-tree`Îäî `Node 3`Ïùò 6Î≤à ÌÇ§Í∞Ä ÏÇ≠Ï†ú ÎêòÎçîÎùºÎèÑ, `Node 2`ÏôÄ `Node 4`Ïóê ÌÇ§Í∞Ä Ïó¨Ïú†(2 < 2)ÏóÜÍ∏∞ ÎïåÎ¨∏Ïóê Ïû¨Î∂ÑÎ∞∞Í∞Ä Î∂àÍ∞ÄÎä•ÌïòÎã§.\r\n\r\n>4Ï∞® b-treeÎùºÎ©¥ ÏÇ≠Ï†ú ÎêòÎäî ÎÖ∏ÎìúÏùò ÌòïÏ†úÎÖ∏ÎìúÍ∞Ä ÏµúÏÜå ÌÇ§ Í∞úÏàò 2Ïù¥Ìïò ÎùºÎ©¥ Ïû¨Î∂ÑÎ∞∞Í∞Ä Î∂àÍ∞ÄÌïòÏó¨ Î≥ëÌï©ÏúºÎ°ú Ï≤òÎ¶¨ÎêúÎã§.\r\n:{ \"type\": \"caution\", \"icon\": \"x-circle\" }\r\n\r\nÎßåÏïΩ Ïû¨Î∂ÑÎ∞∞Í∞Ä Í∞ÄÎä•Ìïú Ï°∞Í±¥Ïù¥ÎùºÎ©¥ Îã§ÏùåÍ≥ºÍ∞ôÏù¥ Ï≤òÎ¶¨ÎêúÎã§.\r\n\r\n![ÌÇ§ÏÇ≠Ï†ú Ïù¥ÌõÑ Node 3ÏóêÏÑú ÏµúÏÜå ÌÇ§ Í∞úÏàò Í∑úÏπô ÏúÑÎ∞∞](/post/data-structure/b-tree/redistribution-in-key-deletions-1.png)\r\n:{ \"align\": \"center\", \"max-width\": \"700px\", \"description\": \"ÏµúÏÜå ÌÇ§ Í∞úÏàò Í∑úÏπô ÏúÑÎ∞∞\" }\r\n\r\nÏúÑ Ìä∏Î¶¨ÏóêÏÑú `6`ÏùÑ ÏÇ≠Ï†úÌïúÎã§Í≥† Ìï† Îïå, ÏÇ≠Ï†úÍ∞Ä Ïù¥Î£®Ïñ¥ÏßÄÍ≥† ÎÇòÏÑú `Node 3`Îäî **ÏµúÏÜå ÌÇ§ Í∞úÏàò Í∑úÏπôÏùÑ ÏúÑÎ∞∞**ÌïúÎã§.  \r\nÏù¥ Í≤ΩÏö∞ `Node 4`ÏóêÏÑú ÌÇ§Î•º ÌïòÎÇò Í∞ÄÏ†∏ÏôÄ `Node 3`Ïóê ÏÇΩÏûÖÌïòÎ©¥ ÏµúÏÜå ÌÇ§ Í∞úÏàò Í∑úÏπôÏùÑ ÏßÄÌÇ¨ Ïàò ÏûàÎã§.\r\n\r\n>Node 4Ïóê ÏµúÏÜå ÌÇ§ Í∞úÏàòÎ≥¥Îã§ 1Í∞úÎçî ÌÇ§Î•º Í∞ÄÏßÄÍ≥† ÏûàÍ∏∞ ÎïåÎ¨∏Ïóê **Ïû¨Î∂ÑÎ∞∞**Í∞Ä Í∞ÄÎä•ÌïòÎã§.\r\n:{ \"type\": \"tip\", \"icon\": \"check-circle\" }\r\n\r\n![Î∂ÄÎ™® ÎÖ∏ÎìúÏùò ÌÇ§Î•º Í∞ÄÏ†∏ÏôÄ ÎÖ∏ÎìúÎ•º Ïú†ÏßÄÌïòÍ≥†, Î∂ÄÎ™®ÎÖ∏ÎìúÎäî Ïû¨Î∂ÑÎ∞∞Îêú ÌÇ§Î•º Í∞ÄÏ†∏Ïò®Îã§.](/post/data-structure/b-tree/redistribution-in-key-deletions-2.png)\r\n:{ \"align\": \"center\", \"max-width\": \"700px\", \"description\": \"Ïû¨Î∂ÑÎ∞∞Îêú ÌÇ§Î•º Î∂ÄÎ™®ÎÖ∏ÎìúÎ°ú Ïù¥Îèô\" }\r\n\r\nÏû¨Î∂ÑÎ∞∞Í∞Ä Í∞ÄÎä•ÌïòÎã§Î©¥ Ïó¨Ïú†Î°úÏö¥ ÎÖ∏Îìú(Node 4)Î•º Í∞ÄÎ¶¨ÌÇ§Í≥† ÏûàÎäî Ìè¨Ïù∏ÌÑ∞Ïóê Î∂ôÏùÄ ÌÇ§Î•º ÏûêÏãùÎÖ∏ÎìúÎ°ú ÎÇ¥Î¶∞Îã§.\r\nÍ∑∏Î¶¨Í≥† Î∂ÄÎ™®ÎÖ∏ÎìúÏóêÏÑúÎäî Ïû¨Î∂ÑÎ∞∞Îêú ÌÇ§Î•º ÏÑ†Î≥ÑÌïòÍ∏∞ÏúÑÌï¥ Í∞ÄÏû• ÏûëÏùÄÌÇ§ (ÏôºÏ™ΩÏóêÏÑú Í∞ÄÏ†∏Ïò®Îã§Î©¥ Í∞ÄÏû• ÌÅ∞ ÌÇ§)Î•º Î∂ÄÎ™®ÎÖ∏ÎìúÎ°ú Ïù¥ÎèôÏãúÌÇ®Îã§.\r\n\r\nÏù¥Î†áÍ≤å ÎêòÎ©¥ Ïû¨Î∂ÑÎ∞∞Í∞Ä ÎêòÏñ¥ ÏµúÏÜå ÌÇ§ Í∞úÏàò Í∑úÏπôÏùÑ ÏßÄÌÇ¨ Ïàò ÏûàÍ≤å ÎêúÎã§.\r\n\r\n\r\n**Îç∞Ïù¥ÌÑ∞ ÏÇ≠Ï†úÏóê ÎåÄÌïú Î≥ëÌï©**\r\n\r\n![ÌÇ§Î•º ÏÇ≠Ï†úÌñàÏßÄÎßå, ÌòïÏ†ú ÎÖ∏Îìú Ï§ëÏóêÎäî Ïó¨Ïú†Î°úÏö¥ ÎÖ∏ÎìúÍ∞Ä ÏóÜÎã§.](/post/data-structure/b-tree/merge-in-key-deletions-1.png)\r\n:{ \"align\": \"center\", \"max-width\": \"700px\", \"description\": \"Ïû¨Î∞∞ÏπòÌï† ÌÇ§Í∞Ä ÏóÜÏùå\" }\r\n\r\nÏúÑÏôÄ Í∞ôÏùÄ 4Ï∞® B-treeÍ∞Ä ÏûàÏùÑ Îïå `Node 3`Ïùò 6Î≤à ÌÇ§Î•º ÏÇ≠Ï†úÌïòÎ©¥, `Node 3`Îäî UnderflowÍ∞Ä Î∞úÏÉùÌïúÎã§.\r\nÏù¥Îïå `Node 2`ÏôÄ `Node 4`Îäî Î™®Îëê ÏµúÏÜå ÌÇ§ Í∞úÏàòÎßåÌÅºÎßå Í∞ÄÏßÄÍ≥† ÏûàÍ∏∞ ÎïåÎ¨∏Ïóê Ïû¨Î∂ÑÎ∞∞Í∞Ä Î∂àÍ∞ÄÎä•ÌïòÎã§.\r\n\r\n![ÌòïÏ†ú ÎÖ∏ÎìúÎ•º Í≥®Îùº Ìï¥Îãπ ÌòïÏ†úÎÖ∏ÎìúÏôÄ Ïó∞Í≤∞ÎêòÏñ¥ ÏûàÎäî Î∂ÄÎ™®ÌÇ§Î•º Í∞ÄÏ†∏ÏôÄ Î≥ëÌï©ÌïúÎã§.](/post/data-structure/b-tree/merge-in-key-deletions-2.png)\r\n:{ \"align\": \"center\", \"max-width\": \"700px\", \"description\": \"ÌòïÏ†ú ÎÖ∏ÎìúÏôÄ Î≥ëÌï©\" }\r\n\r\nÏù¥Îü∞ Í≤ΩÏö∞ÏóêÎäî ÌòïÏ†ú ÎÖ∏ÎìúÎ•º Í≥®Îùº Ìï¥Îãπ ÌòïÏ†úÎÖ∏ÎìúÏôÄ Ïó∞Í≤∞ÎêòÏñ¥ ÏûàÎäî Î∂ÄÎ™®ÌÇ§Î•º Í∞ÄÏ†∏ÏôÄ Î≥ëÌï©ÌïúÎã§.\r\n\r\n>ÏÇ≠Ï†úÎê† ÎåÄÏÉÅÏù¥ ÎÇ¥Î∂Ä ÎÖ∏ÎìúÏóê ÏûàÎã§Î©¥ Î¶¨ÌîÑ ÎÖ∏ÎìúÍπåÏßÄ Ïù¥ÎèôÌïú Îí§Ïóê ÏÇ≠Ï†úÌïúÎã§.\r\n:{ \"type\": \"important\", \"icon\": \"warning-diamond\" }\r\n"
  },
  {
    "path": "/docs/software-design/decorator-pattern",
    "header": {
      "layout": "post",
      "title": "Îç∞ÏΩîÎ†àÏù¥ÌÑ∞ Ìå®ÌÑ¥ (Decorator Pattern)",
      "tags": [
        "Visitor Pattern",
        "Design Pattern",
        "Software Design"
      ],
      "date": 1631452920000,
      "thumbnail": "/post/software-design/decorator-pattern/index.png",
      "profile-image": "/post/profile/profile4.jpg",
      "current-company": "Herit Corporation",
      "current-position": "Backend Server Developer",
      "summary": "Îç∞ÏΩîÎ†àÏù¥ÌÑ∞ Ìå®ÌÑ¥",
      "excerpt-separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÏÜåÌîÑÌä∏Ïõ®Ïñ¥ ÏÑ§Í≥Ñ"
      ],
      "images": [],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "ÌïµÏã¨ Íµ¨ÏÑ±ÏöîÏÜå::key-components",
            "title": "ÌïµÏã¨ Íµ¨ÏÑ±ÏöîÏÜå",
            "fragment": "key-components",
            "children": []
          },
          {
            "rank": 2,
            "origin": "ÏòàÏ†ú::example",
            "title": "ÏòàÏ†ú",
            "fragment": "example",
            "children": [
              {
                "rank": 3,
                "origin": "Îã§ÏñëÌïú Ïª§Ìîº ÎßåÎì§Í∏∞::make-various-coffee",
                "title": "Îã§ÏñëÌïú Ïª§Ìîº ÎßåÎì§Í∏∞",
                "fragment": "make-various-coffee",
                "children": []
              }
            ]
          },
          {
            "rank": 2,
            "origin": "Ï†ÅÏö©::applicability",
            "title": "Ï†ÅÏö©",
            "fragment": "applicability",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Ïû•Îã®Ï†ê::pros-and-cons",
            "title": "Ïû•Îã®Ï†ê",
            "fragment": "pros-and-cons",
            "children": []
          }
        ]
      }
    },
    "description": "Îç∞ÏΩîÎ†àÏù¥ÌÑ∞Îäî Í∞ùÏ≤¥Î•º ÌïÑÏöîÌïú Í∏∞Îä•Îßå Ïú†Ïó∞ÌïòÍ≤å ÌôïÏû•Ìï† Ïàò ÏûàÎäî ÎîîÏûêÏù∏ Ìå®ÌÑ¥Ïù¥Îã§.\r\nÎã®Ïñ¥ Í∑∏ÎåÄÎ°ú Î¨¥Ïñ∏Í∞ÄÎ•º Íæ∏Î©∞(ÌôïÏû•)Ï£ºÍ∏∞ ÏúÑÌï¥ ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎã§.",
    "content": "\r\n\r\n## ÌïµÏã¨ Íµ¨ÏÑ±ÏöîÏÜå::key-components\r\n* **Component**: Í∏∞Ï§ÄÏù¥ ÎêòÎäî Í∏∞Î≥∏Í∏∞Îä•ÏùÑ ÎÇòÌÉÄÎÇ¥Îäî **Ïù∏ÌÑ∞ÌéòÏù¥Ïä§**\r\n* **ConcreteComponent**: Í∏∞Ï§ÄÏù¥ ÎêòÎäî Í∏∞Î≥∏ Íµ¨ÏÉÅ ÌÅ¥ÎûòÏä§\r\n* **Decorator**: Îã§ÏñëÌïú Í∏∞Îä•ÏúºÎ°ú Íæ∏ÎØ∏Í∏∞ ÏúÑÌï¥ Í∏∞Î≥∏Í∞ùÏ≤¥Î•º `Wrapping`ÌïòÎäî ÌÅ¥ÎûòÏä§\r\n* **ConcreteDecorator**: Ïã§Ï†ú ÌôïÏû•ÏùÑ Îã¥ÎãπÌïòÎäî Îç∞ÏΩîÎ†àÏù¥ÌÑ∞\r\n\r\n`Îç∞ÏΩîÎ†àÏù¥ÌÑ∞ Ìå®ÌÑ¥(Ïù¥Ìïò Îç∞ÏΩîÎ†àÏù¥ÌÑ∞)`Îäî [ÌîÑÎ°ùÏãú Ìå®ÌÑ¥]()Í≥º Ïú†ÏÇ¨ÌïòÎã§. Íµ¨ÌòÑÏùò Í∞úÎÖêÍ≥º, Ï∞∏Ï°∞Ïùò Í∞úÎÖêÎèÑ Ìè¨Ìï®ÎêòÏñ¥ ÏûàÎã§.\r\n\r\n```mermaid\r\n---\r\nconfig:\r\n    class:\r\n        hideEmptyMembersBox: true\r\n---\r\nclassDiagram\r\n    class Component {\r\n        <<interface>>\r\n        +operation(): void\r\n    }\r\n    class ConcreteComponent {\r\n        +operation(): void\r\n    }\r\n    class Decorator {\r\n        -component: Component\r\n        +operation(): void\r\n    }\r\n    class ConcreteDecorator {\r\n        +operation(): void\r\n    }\r\n    Component <|.. ConcreteComponent\r\n    Component <|.. Decorator\r\n    Component <--o Decorator\r\n    Decorator <|-- ConcreteDecorator\r\n    \r\n```\r\n\r\n## ÏòàÏ†ú::example\r\n\r\nÎç∞ÏΩîÎ†àÏù¥ÌÑ∞ Ìå®ÌÑ¥ÏùÑ ÏÇ¥Ìé¥Î≥¥Í∏∞ Ï†ÑÏóê Ïù¥Ìï¥Ìï† Íµ¨ÏÑ± ÏöîÏÜåÍ∞Ñ Ïó≠Ìï†Í≥º Ï±ÖÏûÑ:\r\n\r\n* **Component**\r\n    * **Ïó≠Ìï†**: Í∏∞Î≥∏ ÌñâÏúÑÎ•º ÎÇòÌÉÄÎÇ∏Îã§.\r\n    * **Ï±ÖÏûÑ**: Í∏∞Î≥∏ ÌñâÏúÑÎ•º Íµ¨ÌòÑÌïòÍ∏∞ ÏúÑÌï¥ ÌïÑÏöîÌïú Í∏∞Îä•Îì§ÏùÑ Ïù∏ÌÑ∞ÌéòÏù¥Ïä§ÌïúÎã§.\r\n* **ConcreteComponent**\r\n    * **Ïó≠Ìï†**: Ïã§Ï†ú Í∏∞Î≥∏ ÌñâÏúÑÏùò Í∏∞Ï§ÄÏù¥Îã§.\r\n    * **Ï±ÖÏûÑ**: Í∏∞Î≥∏ Ïó≠Ìï†Ïóê ÎåÄÌïú ÌïÑÏöîÌïú Í∏∞Îä•ÏùÑ Íµ¨ÌòÑÌïòÎ©∞, Ïù¥Î•º ÏàòÌñâÌïúÎã§.\r\n* **Decorator**\r\n    * **Ïó≠Ìï†**: Ïó¨Îü¨ Îç∞ÏΩîÎ†àÏù¥ÌÑ∞ÏóêÏÑú ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎèÑÎ°ù Í∏∞Î≥∏ Í∞ùÏ≤¥Î•º ÎûòÌïëÌïúÎã§.\r\n    * **Ï±ÖÏûÑ**: Í≥µÌÜµÏ†ÅÏù∏ Ï∂îÍ∞ÄÍ∏∞Îä•ÏùÑ ÏàòÌñâÌïòÎ©∞, ÌôïÏû• Í∞ùÏ≤¥Í∞Ä Ïò¨Î∞îÎ•¥Í≤å ÏàòÌñâÎê†Ïàò ÏûàÎèÑÎ°ù Í∏∞Î≥∏ ÌñâÏúÑÎ•º Ï≤òÎ¶¨ÌïúÎã§. \r\n* **ConcreteDecorator**\r\n    * **Ïó≠Ìï†**: Ïã§Ï†ú ÌôïÏû•ÏùÑ Îã¥ÎãπÌïúÎã§.\r\n    * **Ï±ÖÏûÑ**: ÎûòÌïë Í∞ùÏ≤¥Ïóê ÎåÄÌïú Ïã§Ï†ú ÌôïÏû•Í∏∞Îä•ÏùÑ ÏàòÌñâÌïòÎ©∞, Í∏∞Î≥∏ Í∏∞Îä•ÏùÄ ÎûòÌïë Í∞ùÏ≤¥Ïóê ÏúÑÏûÑÌïúÎã§.\r\n\r\n### Îã§ÏñëÌïú Ïª§Ìîº ÎßåÎì§Í∏∞::make-various-coffee\r\n\r\nÏª§ÌîºÎ•º ÎßåÎìúÎ†§ÌïúÎã§. Ïó¨Îü¨Í∞ÄÏßÄ Ïª§ÌîºÏôÄ, ÌÜ†ÌïëÏùÑ Ï∂îÍ∞ÄÌïòÍ∏∞ ÏúÑÌï¥ ÌÜ†ÌïëÏùÑ Ï†ïÏùòÌïòÍ≥†, Í∏∞Î≥∏ Ïª§ÌîºÏóê Ï∂îÍ∞ÄÌïòÏó¨ ÏÉàÎ°úÏö¥ Ïª§ÌîºÎ•º ÎßåÎì§Ïûê.\r\n\r\n**Component**\r\n\r\n::code-group\r\n```java::Ïª§Ìîº\r\n// Component\r\npublic interface Coffee {\r\n    double getCost();\r\n    String getDescription();\r\n\r\n    default void print() {\r\n        System.out.printf(\"Ï£ºÎ¨∏: %s\\nÍ∞ÄÍ≤©: %.2fÏõê\\n\", getDescription(), getCost());\r\n    }\r\n}\r\n```\r\n\r\n```java::ÏóêÏä§ÌîÑÎ†àÏÜå\r\n// ConcreteComponent\r\npublic class Espresso implements Coffee {\r\n\r\n    @Override\r\n    public double getCost() {\r\n        return 1500;\r\n    }\r\n\r\n    @Override\r\n    public String getDescription() {\r\n        return \"ÏóêÏä§ÌîÑÎ†àÏÜå\";\r\n    }\r\n}\r\n```\r\n\r\n```java::ÏïÑÎ©îÎ¶¨Ïπ¥ÎÖ∏\r\n// ConcreteComponent\r\npublic class Americano implements Coffee {\r\n\r\n    private final Espresso espresso;\r\n\r\n    public Americano(Espresso espresso) {\r\n        this.espresso = espresso;\r\n    }\r\n\r\n    @Override\r\n    public double getCost() {\r\n        return espresso.getCost() + 500;\r\n    }\r\n\r\n    @Override\r\n    public String getDescription() {\r\n        return \"ÏïÑÎ©îÎ¶¨Ïπ¥ÎÖ∏\";\r\n    }\r\n```\r\n\r\n::\r\n\r\n**Decorator**\r\n\r\n::code-group\r\n```java::ÌÜ†Ìïë\r\n// Decorator\r\npublic class CoffeeDecorator implements Coffee {\r\n\r\n    protected final Coffee decoratedCoffee;\r\n\r\n    public CoffeeDecorator(Coffee decoratedCoffee) {\r\n        this.decoratedCoffee = decoratedCoffee;\r\n    }\r\n\r\n    @Override\r\n    public double getCost() {\r\n        return this.decoratedCoffee.getCost();\r\n    }\r\n\r\n    @Override\r\n    public String getDescription() {\r\n        return this.decoratedCoffee.getDescription();\r\n    }\r\n}\r\n```\r\n\r\n```java::Ï∂îÍ∞Ä ÏÉ∑\r\npublic class ExtraShot extends CoffeeDecorator {\r\n\r\n    public ExtraShot(Coffee decoratedCoffee) {\r\n        super(decoratedCoffee);\r\n    }\r\n\r\n    @Override\r\n    public double getCost() {\r\n        return super.getCost() + 1500;\r\n    }\r\n\r\n    @Override\r\n    public String getDescription() {\r\n        return super.getDescription() + \", ÏÉ∑ Ï∂îÍ∞Ä\";\r\n    }\r\n}\r\n```\r\n\r\n```java::Î∞îÎãêÎùº ÏãúÎüΩ\r\npublic class Vanilla extends io.alloc.structure.decorator.coffee.decorator.CoffeeDecorator {\r\n\r\n    public Vanilla(Coffee decoratedCoffee) {\r\n        super(decoratedCoffee);\r\n    }\r\n\r\n    @Override\r\n    public double getCost() {\r\n        return super.getCost() + 1000;\r\n    }\r\n\r\n    @Override\r\n    public String getDescription() {\r\n        return super.getDescription() + \", Î∞îÎãêÎùº ÏãúÎüΩ\";\r\n    }\r\n}\r\n```\r\n\r\n```java::ÌúòÌïë ÌÅ¨Î¶º\r\npublic class WhippedCream extends io.alloc.structure.decorator.coffee.decorator.CoffeeDecorator {\r\n\r\n    public WhippedCream(Coffee decoratedCoffee) {\r\n        super(decoratedCoffee);\r\n    }\r\n\r\n    @Override\r\n    public double getCost() {\r\n        return super.getCost() + 800;\r\n    }\r\n\r\n    @Override\r\n    public String getDescription() {\r\n        return super.getDescription() + \", ÌúòÌïë ÌÅ¨Î¶º\";\r\n    }\r\n}\r\n```\r\n::\r\n\r\n```java::ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ ÏΩîÎìú\r\nEspresso espresso = new Espresso();\r\n\r\n// ÏïÑÎ©îÎ¶¨Ïπ¥ÎÖ∏\r\nCoffee americano = new Americano(espresso);\r\namericano.print();\r\n\r\n// ÏÉ∑Ïù¥ Ï∂îÍ∞ÄÎêú ÏïÑÎ©îÎ¶¨Ïπ¥ÎÖ∏ Ï£ºÎ¨∏\r\nCoffee doubleShot = new ExtraShot(americano);\r\ndoubleShot.print();\r\n\r\n//Ìä∏Î¶¨ÌîåÏÉ∑\r\nCoffee tripleShot = new ExtraShot(doubleShot);\r\ntripleShot.print();\r\n\r\n//Î∞îÎãêÎùº ÏãúÎüΩ, ÌúòÌïëÌÅ¨Î¶ºÏù¥ Ï∂îÍ∞ÄÎêú  ÏïÑÎ©îÎ¶¨Ïπ¥ÎÖ∏ Ï£ºÎ¨∏\r\nVanilla vanillaAdded = new Vanilla(americano);\r\nCoffee whippedVanillaAmericano = new WhippedCream(vanillaAdded);\r\nwhippedVanillaAmericano.print();\r\n```\r\n\r\nÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Îäî ÌïÑÏöîÌïú ÌôïÏû• Í∏∞Îä•ÏùÑ ÏÇ¨Ïö©ÌïòÏó¨, Ïú†Ïó∞ÌïòÍ≤å ÏµúÏ¢Ö Í∏∞Îä•ÏùÑ Íµ¨ÌòÑÌï† Ïàò ÏûàÏúºÎ©∞, ÏõêÎ≥∏ÏóêÎåÄÌïú Î∂àÎ≥ÄÏÑ±ÍπåÏßÄ Î≥¥Ïû•Ìï† Ïàò ÏûàÎã§.\r\n\r\n> ÏßÄÏÜçÏ†ÅÏù∏ ÌôïÏû•ÏùÑ ÏúÑÌï¥ ÏõêÎ≥∏ÏùÑ Ïû¨ÏÇ¨Ïö©Ìï† Ïàò ÎèÑ ÏûàÎã§.\r\n:{ \"type\": \"tip\", \"icon\": \"lightbulb\" }\r\n\r\n\r\n```text::Í≤∞Í≥º\r\nÏ£ºÎ¨∏: ÏïÑÎ©îÎ¶¨Ïπ¥ÎÖ∏\r\nÍ∞ÄÍ≤©: 2000.00Ïõê\r\nÏ£ºÎ¨∏: ÏïÑÎ©îÎ¶¨Ïπ¥ÎÖ∏, ÏÉ∑ Ï∂îÍ∞Ä\r\nÍ∞ÄÍ≤©: 3500.00Ïõê\r\nÏ£ºÎ¨∏: ÏïÑÎ©îÎ¶¨Ïπ¥ÎÖ∏, ÏÉ∑ Ï∂îÍ∞Ä, ÏÉ∑ Ï∂îÍ∞Ä\r\nÍ∞ÄÍ≤©: 5000.00Ïõê\r\nÏ£ºÎ¨∏: ÏïÑÎ©îÎ¶¨Ïπ¥ÎÖ∏, Î∞îÎãêÎùº ÏãúÎüΩ, ÌúòÌïë ÌÅ¨Î¶º\r\nÍ∞ÄÍ≤©: 3800.00Ïõê\r\n```\r\n\r\n## Ï†ÅÏö©::applicability\r\n\r\n`Îç∞ÏΩîÎ†àÏù¥ÌÑ∞`Îäî Îã§ÏùåÍ≥º Í∞ôÏùÄ ÏÉÅÌô©ÏóêÏÑú Ï†ÅÏö© Í∞ÄÎä•ÌïòÎã§.\r\n\r\n* ÏõêÎ≥∏Ïùò ÏΩîÎìúÎ•º ÌõºÏÜêÌïòÏßÄ ÏïäÏúºÎ©¥ÏÑú Îü∞ÌÉÄÏûÑÏóê Ïú†Ïó∞Ìïú ÌôïÏû•Ïù¥ ÌïÑÏöîÌïú Í≤ΩÏö∞\r\n* ÏÉÅÏÜçÏúºÎ°úÏùò ÌôïÏû•Ïù¥ Î∂àÍ∞ÄÎä• ÌïòÍ±∞ÎÇò Ïñ¥ÏÉâÌïú Í≤ΩÏö∞\r\n\r\n## Ïû•Îã®Ï†ê::pros-and-cons\r\n\r\n**Ïû•Ï†ê**\r\n\r\n* [Îã®Ïùº Ï±ÖÏûÑ ÏõêÏπô](): Îã§ÏñëÌïú Í∏∞Îä•ÏùÑ Î∂ÑÎ¶¨ÌïòÏó¨, Í∞ÅÍ∞ÅÏùò ÌÅ¥ÎûòÏä§Í∞Ä ÌïòÎÇòÏùò Ï±ÖÏûÑÏùÑ Í∞ñÎèÑÎ°ù ÌïúÎã§.\r\n* ÏÉàÎ°úÏö¥ ÏûêÏãùÌÅ¥ÎûòÏä§Î•º ÎßåÎì§ÏßÄ ÏïäÍ≥†ÎèÑ, Í∏∞Ï°¥ ÌÅ¥ÎûòÏä§Ïùò Í∏∞Îä•ÏùÑ ÌôïÏû•Ìï† Ïàò ÏûàÎã§.\r\n* Îü∞ÌÉÄÏûÑÏóê Í∞ùÏ≤¥Îì§Ïùò Ï±ÖÏûÑÏùÑ Ï∂îÍ∞ÄÌïòÍ±∞ÎÇò, Ï†úÍ±∞ Í∞ÄÎä•ÌïòÎã§.\r\n\r\n**Îã®Ï†ê**\r\n\r\n* ÎûòÌçºÎì§Ïùò Ïä§ÌÉùÏóêÏÑú ÌäπÏ†ï ÎûòÌçºÎ•º Ï†úÍ±∞ÌïòÍ∏∞Í∞Ä Ïñ¥Î†µÎã§. (Ï§ëÍ∞ÑÎßå ÎπºÎ†§Î©¥ Îã§Ïãú ÎßåÎì§Ïñ¥Ïïº ÌïúÎã§.)\r\n* Îç∞ÏΩîÎ†àÏù¥ÌÑ∞Ïùò ÌñâÎèôÏù¥ Ïä§ÌÉùÎÇ¥Ïùò ÏàúÏÑúÏóê ÏùòÏ°¥ÌïòÏßÄ ÏïäÎäî Î∞©ÏãùÏúºÎ°ú Íµ¨ÌòÑÌïòÍ∏∞Í∞Ä Ïñ¥Î†µÎã§.\r\n  * Ï¶â Îç∞ÏΩîÎ†àÏù¥ÌÑ∞Ïùò ÏàúÏÑúÍ∞Ä Ï§ëÏöîÌïú Í≤ΩÏö∞, Îç∞ÏΩîÎ†àÏù¥ÌÑ∞Ïùò ÏàúÏÑúÎ•º Î≥¥Ïû•ÌïòÍ∏∞ Ïñ¥Î†µÎã§.\r\n"
  },
  {
    "path": "/docs/computer-science/operating-system/linkers-and-loaders",
    "header": {
      "layout": "wiki",
      "date": 1628985300000,
      "title": "ÎßÅÏª§ÏôÄ Î°úÎçî (Linkers and Loaders)",
      "tags": [
        "Operating System",
        "Linker",
        "Loader"
      ],
      "summary": "ÎßÅÏª§ÏôÄ Î°úÎçî",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "Ïª¥Ìì®ÌÑ∞",
        "operating-system"
      ],
      "images": [],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "Í∞úÏöî::overview",
            "title": "Í∞úÏöî",
            "fragment": "overview",
            "children": []
          },
          {
            "rank": 2,
            "origin": "ÎèôÏûë Í≥ºÏ†ï::workflow",
            "title": "ÎèôÏûë Í≥ºÏ†ï",
            "fragment": "workflow",
            "children": []
          },
          {
            "rank": 2,
            "origin": "ÎèôÏ†Å ÎßÅÌÅ¨ ÎùºÏù¥Î∏åÎü¨Î¶¨::dynamic-link-library",
            "title": "ÎèôÏ†Å ÎßÅÌÅ¨ ÎùºÏù¥Î∏åÎü¨Î¶¨",
            "fragment": "dynamic-link-library",
            "children": []
          }
        ]
      }
    },
    "description": "",
    "content": "\r\n## Í∞úÏöî::overview\r\n\r\nÏùºÎ∞ò Ï†ÅÏù∏ Ïã§ÌñâÌååÏùºÏùÄ Î∞îÏù¥ÎÑàÎ¶¨Î°ú ÎîîÏä§ÌÅ¨Ïóê Ï°¥Ïû¨ÌïúÎã§.\r\n`Unix/Linux`ÏóêÏÑú Ïã§ÌñâÍ∞ÄÎä•Ìïú `.out(c/c++ Ïª¥ÌååÏùºÎü¨Í∞Ä ÏÉùÏÑ±Ìïú Ïã§ÌñâÌååÏùº)`Ïù¥ÎÇò `Windows`ÏóêÏÑú Ïã§ÌñâÍ∞ÄÎä•Ìïú `.exe` ÌååÏùºÏù¥ Í∑∏ ÏòàÏù¥Îã§.\r\n\r\nÎßÅÏª§ÏôÄ Î°úÎçîÎäî Ïª¥ÌååÏùºÍ≥ºÏ†ïÏóêÏÑú ÏÉùÏÑ±Îêú Ïã§ÌñâÌååÏùºÏùÑ Î©îÎ™®Î¶¨Ïóê Î°úÎìúÌïòÍ≥† Ïã§ÌñâÍ∞ÄÎä•Ìïú ÌòïÌÉúÎ°ú ÎßåÎìúÎäî Ïó≠Ìï†ÏùÑ ÌïúÎã§.\r\n\r\n## ÎèôÏûë Í≥ºÏ†ï::workflow\r\n\r\n[`CPU`](/wiki/central-processing-unit)ÏóêÏÑú Ïã§ÌñâÌïòÎ†§Î©¥ ÌîÑÎ°úÍ∑∏Îû®ÏùÑ Î©îÎ™®Î¶¨Î°ú Í∞ÄÏ†∏ÏôÄ ÌîÑÎ°úÏÑ∏Ïä§ ÌòïÌÉúÎ°ú Î∞∞ÏπòÎêòÏñ¥Ïïº ÌïúÎã§.  \r\nÏïÑÎûòÎäî ÌîÑÎ°úÍ∑∏Îû®ÏùÑ Ïª¥ÌååÏùº ÌïòÍ≥† Î©îÎ™®Î¶¨Ïóê Î∞∞ÏπòÌïòÏó¨ ÏÇ¨Ïö©Í∞ÄÎä•Ìïú `CPU` ÏΩîÏñ¥ÏóêÏÑú Ïã§ÌñâÌï† Ïàò ÏûàÎäî Í≥ºÏ†ïÏùÑ Îã®Í≥ÑÎ≥ÑÎ°ú ÏÑ§Î™ÖÌïúÎã§.\r\n\r\n\r\n```mermaid\r\nflowchart\r\n    id1((ÏÜåÏä§\r\n    ÌîÑÎ°úÍ∑∏Îû®\r\n    main.c)) \r\n    id2([Ïª¥ÌååÏùºÎü¨])\r\n    id3((Ïò§Î∏åÏ†ùÌä∏\r\n    ÌååÏùº\r\n    main.o))\r\n    id4([ÎßÅÏª§])\r\n    id5((Ïã§Ìñâ ÌååÏùº\r\n    main))\r\n    id6([Î°úÎçî])\r\n    id7((Î©îÎ™®Î¶¨Ïùò\r\n    ÌîÑÎ°úÍ∑∏Îû®))\r\n    id8((Îã§Î•∏\r\n    Ïò§Î∏åÏ†ùÌä∏\r\n    ÌååÏùº))\r\n    id9((ÎèôÏ†Å ÎßÅÌÅ¨\r\n    ÎùºÏù¥Î∏åÎü¨Î¶¨))\r\n    id1 -- \"`**gcc -c main.c**`\" --> id2\r\n    id2 --> id3\r\n    id3 --> id4\r\n    id4 -- \"`**gcc -o main main.o -lm**`\" --> id5\r\n    id5 -- \"` Ïã§Ìñâ **./main**`\" --> id6\r\n    id6 --> id7\r\n    id8 -.-> id4\r\n    id9 -.-> id7\r\n```\r\n\r\n`main.c` ÌååÏùºÏùÄ Ïª¥ÌååÏùºÎü¨Ïóê ÏùòÌï¥ `main.o` ÌååÏùºÎ°ú Ïª¥ÌååÏùº ÎêòÎ©∞ Ïù¥Îäî ÏûÑÏùòÏùò Î©îÎ™®Î¶¨Ïóê Ï†ÅÏû¨ÎêòÎèÑÎ°ù ÏÑ§Í≥ÑÎêú Ïò§Î∏åÏ†ùÌä∏ ÌååÏùºÏù¥Îã§.\r\nÏù¥Îü¨Ìïú ÌòïÏãùÏùÑ **Ïû¨Î∞∞Ïπò Í∞ÄÎä• Ïò§Î∏åÏ†ùÌä∏ ÌååÏùº**(**R**elocatable **O**bject **F**ile)Ïù¥ÎùºÍ≥† ÌïúÎã§.  \r\n\r\n`ÎßÅÏª§`Îäî Ïù¥Îü¨Ìïú `ROF`Î•º ÌïòÎÇòÏùò Î∞îÏù¥ÎÑàÎ¶¨ `Ïã§Ìñâ`ÌååÏùºÎ°ú Í≤∞Ìï©ÌïúÎã§. Ïù¥ Í≥ºÏ†ïÏùÑ ÎßÅÌÇπÏù¥Îùº ÌïòÎ©∞, Ïù¥ Îã®Í≥ÑÏóêÏÑúÎäî ÌëúÏ§Ä C ÎòêÎäî ÏàòÌïô ÎùºÏù¥Î∏åÎü¨Î¶¨ (flag `-lm`)ÏôÄ Í∞ôÏùÄ Îã§Î•∏ Ïò§Î∏åÏ†ùÌä∏ ÌååÏùºÏùÑ Ìè¨Ìï® ÏãúÌÇ¨ Ïàò ÏûàÎã§.\r\n\r\n`Î°úÎçî`Îäî Ïù¥ÏßÑ Ïã§ÌñâÌååÏùºÏùÑ Î©îÎ™®Î¶¨Ïóê Ïû≠Ïû¨(load)ÌïòÎäî Îç∞ ÏÇ¨Ïö©ÎêòÎ©∞, `CPU` ÏΩîÏñ¥ÏóêÏÑú Ïã§ÌñâÌï† Ïàò ÏûàÎäî ÏÉÅÌÉúÍ∞Ä ÎêúÎã§. ÎßÅÌÅ¨ Î∞è Î°úÎìúÏôÄ Í¥ÄÎ†πÎêú ÌôúÎèôÏùÄ Ïû¨Î∞∞Ïπò(relocation)Î°ú, \r\nÌîÑÎ°úÍ∑∏Îû® Î∂ÄÎ∂ÑÏóê ÏµúÏ¢Ö Ï£ºÏÜåÎ•º Ìï†Îãπ ÌïòÍ≥† ÌîÑÎ°úÍ∑∏Îû® ÏΩîÎìúÏôÄ Îç∞Ïù¥ÌÑ∞Î•º Ìï¥Îãπ Ï£ºÏÜåÏôÄ ÏùºÏπòÌïòÎèÑÎ°ù Ï°∞Ï†ïÌïòÏó¨ ÌîÑÎ°úÍ∑∏Îû®Ïù¥ Ïã§ÌñâÎê† Îïå ÏΩîÎìúÍ∞Ä ÎùºÏù¥Î∏åÎü¨Î¶¨ Ìï®ÏàòÎ•º Ìò∏Ï∂úÌïòÍ≥† Î≥ÄÏàòÏóê Ï†ëÍ∑ºÌï† Ïàò ÏûàÍ≤å ÌïúÎã§. \r\n\r\n> ÎßÅÏª§Îäî Ïó¨Îü¨ Ïò§Î∏åÏ†ùÌä∏ ÌååÏùºÏóê ÎåÄÌïú Î¨ºÎ¶¨Ï†ÅÏù∏ Î∞îÏù¥ÎÑàÎ¶¨Î•º Ïû¨Î∞∞Ïπò ÌïòÎäîÍ≤ÉÏù¥Í≥† Î°úÎçîÎäî Ïù¥Îü¨Ìïú Î∞îÏù¥ÎÑàÎ¶¨Î•º Î©îÎ™®Î¶¨Î°ú Î°úÎìúÌï† Îïå ÎÖºÎ¶¨Ï†ÅÏù∏ Î©îÎ™®Î¶¨ Ï£ºÏÜå(Í∞ÄÏÉÅÎ©îÎ™®Î¶¨ Ï£ºÏÜå)Î•º\r\n> Ïã§Ï†ú Î¨ºÎ¶¨Ï†Å Î©îÎ™®Î¶¨ Ï£ºÏÜåÎ°ú Î≥ÄÌôòÌïòÎ©∞ Ï£ºÏÜåÏóê ÎåÄÌïú Ïû¨Î∞∞ÏπòÎ•º ÏàòÌñâÌïúÎã§.\r\n:{ \"type\": \"tip\", \"icon\": \"lightbulb\" }\r\n\r\n> Î¨ºÎ¶¨Ï†Å ÏµúÏ¢Ö Ï£ºÏÜåÎäî ÌîÑÎ°úÏÑ∏Ïä§Í∞Ä Ìï†ÎãπÎ∞õÎäî Î©îÎ™®Î¶¨Í≥µÍ∞Ñ(ÏΩîÎìú, Îç∞Ïù¥ÌÑ∞, Ïä§ÌÉù, Ìûô)ÏúºÎ°ú ÌîÑÎ°úÏÑ∏Ïä§Í∞Ä Ï†ëÍ∑ºÌï† Ïàò ÏûàÎã§Îäî ÏùòÎØ∏Ïù¥Îã§.\r\n:{ \"type\": \"note\", \"icon\": \"info\" }\r\n\r\nUnix ÏãúÏä§ÌÖú CLI(Command Line Interface)Ïóê ÌîÑÎ°úÍ∑∏Îû® Ïù¥Î¶Ñ(./main)ÏùÑ ÏûÖÎ†•ÌïòÎ©¥ Shell ÌîÑÎ°úÍ∑∏Îû®ÏùÄ `fork()` ÏãúÏä§ÌÖú ÏΩúÏùÑ ÏÇ¨Ïö©ÌïòÏó¨ ÌîÑÎ°úÍ∑∏Îû® Ïã§ÌñâÏùÑ ÏúÑÌïú, ÌîÑÎ°úÏÑ∏Ïä§Î•º ÏÉùÏÑ±ÌïúÎã§.\r\nÍ∑∏ÌõÑ `exec()`Ïóê Ïã§ÌñâÌååÏùº Ïù¥Î¶ÑÍ≥º Ìï®Íªò Î°úÎçîÎ•º Ìò∏Ï∂úÌïúÎã§. Î°úÎçîÎäî ÌîÑÎ°úÏÑ∏Ïä§ Ï£ºÏÜåÏóê ÌîÑÎ°úÍ∑∏Îû® Ï†ÅÏû¨ÌïúÎã§.\r\n\r\nÏò§Î∏åÏ†ùÌä∏ ÌååÏùºÍ≥º Ïã§Ìñâ ÌååÏùºÏùÄ ÏùºÎ∞òÏ†ÅÏúºÎ°ú ÌëúÏ§ÄÌôîÎêú ÌòïÏãùÏùÑ Í∞ÄÏßÄÎäîÎç∞, \r\nÏù¥Îäî Ïª¥ÌååÏùºÎêú Í∏∞Í≥Ñ ÏΩîÎìú Î∞è ÌîÑÎ°úÍ∑∏Îû®ÏóêÏÑú Ï∞∏Ï°∞ÎêòÎäî Ìï®Ïàò Î∞è Î≥ÄÏàòÏóêÎåÄÌïú Î©îÌÉÄÎç∞Ïù¥ÌÑ∞Î•º Ìè¨Ìï® ÌïòÎäî Í∏∞Ìò∏ ÌÖåÏù¥Î∏îÏùÑ Ìè¨Ìï®ÌïúÎã§. \r\nÏù¥Îäî Î≥ÄÏàòÏôÄ Ìï®ÏàòÏóê ÎåÄÌïú Î©îÌÉÄÎç∞Ïù¥ÌÑ∞Î•º Î™®ÏïÑÎëî Ïã¨Î≥º ÌÖåÏù¥Î∏î(symbol table)Ïù¥ Ìè¨Ìï®ÎêòÏñ¥ ÏûàÎã§. Ïù¥Îü¨Ìïú Ïã¨Î≥ºÎì§ÏùÑ ÎßÅÏª§Í∞Ä Ïó∞Í≤∞ÌïúÎã§.\r\n\r\nUnix/Linux ÏãúÏä§ÌÖúÏóêÏÑúÎäî Ïù¥ ÌëúÏ§Ä ÌòïÏãùÏùÑ ELF(**E**xecutable and **L**inkable **F**ormat)ÎùºÍ≥†, \r\nWindows ÏãúÏä§ÌÖúÏóêÏÑúÎäî PE(**P**ortable **E**xecutable)ÎùºÍ≥†, macOS ÏãúÏä§ÌÖúÏóêÏÑúÎäî Mach-O ÎùºÍ≥†ÌïúÎã§.\r\n\r\n\r\n## ÎèôÏ†Å ÎßÅÌÅ¨ ÎùºÏù¥Î∏åÎü¨Î¶¨::dynamic-link-library\r\n\r\nÎßÅÌÅ¨Í≥ºÏ†ïÏóêÏÑú Î™®Îì†ÎùºÏù¥Î∏åÎü¨Î¶¨Î•º Ìè¨Ìï®ÌïòÎäî Í≤ÉÏùÄ ÎπÑÌö®Ïú®Ï†ÅÏù¥Îã§. Ïù¥Îü¨Ìïú Î¨∏Ï†úÎ•º Ìï¥Í≤∞ÌïòÍ∏∞ ÏúÑÌï¥ ÎèôÏ†Å ÎßÅÌÅ¨ ÎùºÏù¥Î∏åÎü¨Î¶¨Í∞Ä Îì±Ïû•ÌïòÏòÄÎã§.\r\nÏö∞Î¶¨Í∞Ä ÌùîÌûà ÏïåÍ≥† ÏûàÎäî `.so` ÎòêÎäî `.dll` ÌååÏùºÏù¥ Ïù¥Ïóê Ìï¥ÎãπÌïúÎã§. Windows Ïö¥ÏòÅÏ≤¥Ï†úÎäî Ïù¥(**D**ynamically **L**inked **L**ibrary)Î•º ÏßÄÏõêÌïúÎã§.\r\n\r\nDLLÏùò Ïû•Ï†êÏùÄ Ïã§ÌñâÌååÏùºÏóêÏÑú ÏÇ¨Ïö©ÎêòÏßÄ ÏïäÏùÑ Ïàò ÏûàÎäî ÎùºÏù¥Î∏åÎü¨Î¶¨Î•º ÎßÅÌÅ¨ÎßåÌïòÍ≥† Î°úÎìúÎäî ÌïòÏßÄ ÏïäÏïÑÎèÑ ÎêúÎã§.\r\nÏù¥Îü¨Ìïú DLLÏùÄ Îü∞ÌÉÄÏûÑÏóê ÌïÑÏöîÌïú Í≤ΩÏö∞ Ï°∞Í±¥Î∂ÄÎ°ú Î°úÎìúÎêúÎã§. ÎåÄÏã† ÎèôÏ†Å ÎßÅÌÅ¨Î•º ÏÇ¨Ïö©Ìï† ÏûàÎèÑÎ°ù ÎßÅÏª§Îäî Ïû¨Î∞∞Ïπò Ï†ïÎ≥¥Î•º ÌîÑÎ°úÍ∑∏Îû®Ïóê Ï∂îÍ∞ÄÌïúÎã§.\r\n\r\nÏù¥Îü¨Ìïú ÎèôÏ†Å ÎßÅÌÅ¨ ÎùºÏù¥Î∏åÎü¨Î¶¨Îäî Îã§ÏùåÏùò Î∞©Î≤ïÏúºÎ°ú Ïó¨Îü¨ ÌîÑÎ°úÏÑ∏Ïä§ÏóêÏÑú Í≥µÏú†Ìï† Ïàò ÏûàÍ∏∞ ÎïåÎ¨∏Ïóê Î©îÎ™®Î¶¨ ÏÇ¨Ïö©Ïù¥ ÌÅ¨Í≤å Ï†àÏïΩÎêúÎã§:\r\n\r\n1. ÌîÑÎ°úÏÑ∏Ïä§Í∞Ä DLL/so ÎùºÏù¥Î∏åÎü¨Î¶¨ Ìï®Ïàò Ìò∏Ï∂ú\r\n2. ÎßÅÏª§Í∞Ä Ìï¥Îãπ ÎùºÏù¥Î∏åÎü¨Î¶¨ Ï†ÅÏû¨ Ïó¨Î∂Ä ÌôïÏù∏\r\n3. Ïù¥ÎØ∏ Î¨ºÎ¶¨ Î©îÎ™®Î¶¨Ïóê Î°úÎìúÎêòÏñ¥ ÏûàÎã§Î©¥\r\n   * Ìï¥Îãπ Î¨ºÎ¶¨ Î©îÎ™®Î¶¨ ÏòÅÏó≠ÏùÑ ÏûêÏã†Ïùò Í∞ÄÏÉÅÎ©îÎ™®Î¶¨ Ï£ºÏÜå Í≥µÍ∞ÑÏóê Îß§Ìïë\r\n   * Ï∞∏Ï°∞ Ïπ¥Ïö¥Ìä∏ Ï¶ùÍ∞Ä\r\n4. Í∑∏Î†áÏßÄ ÏïäÎã§Î©¥\r\n   * ÎùºÏù¥Î∏åÎü¨Î¶¨Î•º Î¨ºÎ¶¨ Î©îÎ™®Î¶¨Ïóê Î°úÎìú\r\n   * ÏûêÏã†Ïùò Í∞ÄÏÉÅÎ©îÎ™®Î¶¨ Ï£ºÏÜå Í≥µÍ∞ÑÏóê Îß§Ìïë\r\n   * Ï∞∏Ï°∞ Ïπ¥Ïö¥Ìä∏ Ï¥àÍ∏∞Ìôî\r\n\r\n> ÎßÅÏª§Îäî ÎùºÏù¥Î∏åÎü¨Î¶¨Î•º Î°úÎìúÌï† Îïå Ïù¥Ï†ÑÏóê ÌîÑÎ°úÍ∑∏Îû®Ïóê Ï∂îÍ∞ÄÌñàÎçò Ïû¨Î∞∞Ïπò Ï†ïÎ≥¥Î•º ÏÇ¨Ïö©ÌïòÏó¨ ÎùºÏù¥Î∏åÎü¨Î¶¨Î•º Î°úÎìúÌïúÎã§. \r\n:{ \"type\": \"note\", \"icon\": \"info\" }\r\n\r\n> Í∞Å Ïö¥ÏòÅÏ≤¥Ï†úÎäî ÎèôÏ†Å ÎßÅÌÅ¨ ÎùºÏù¥Î∏åÎü¨Î¶¨Ïóê ÎåÄÌïú Ï∞∏Ï°∞Î•º Í¥ÄÎ¶¨ÌïòÎ©∞, Ï∞∏Ï°∞ Ïπ¥Ïö¥Ìä∏Í∞Ä 0Ïù¥ ÎêòÎ©¥ Ìï¥Îãπ ÎùºÏù¥Î∏åÎü¨Î¶¨Î•º Ïñ∏Î°úÎìúÌïúÎã§.\r\n:{ \"type\": \"important\", \"icon\": \"warning-octagon\" }\r\n"
  },
  {
    "path": "/docs/computer-science/operating-system/system-service",
    "header": {
      "layout": "wiki",
      "date": 1628985300000,
      "title": "ÏãúÏä§ÌÖú ÏÑúÎπÑÏä§ (System Service)",
      "tags": [
        "Operating System",
        "System Service",
        "System Utility",
        "Daemon"
      ],
      "summary": "ÏãúÏä§ÌÖú ÏÑúÎπÑÏä§",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "Ïª¥Ìì®ÌÑ∞",
        "operating-system"
      ],
      "images": [
        {
          "src": "/post/computer/macos-activity-monitor.png",
          "alt": "macOS Ïö¥ÏòÅÏ≤¥Ï†úÏùò ÏãúÏä§ÌÖú ÏÑúÎπÑÏä§(ÌôúÏÑ± ÏÉÅÌÉú Î≥¥Í∏∞)"
        }
      ],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "ÏãúÏä§ÌÖú ÏÑúÎπÑÏä§ÎûÄ?::what-is-system-service",
            "title": "ÏãúÏä§ÌÖú ÏÑúÎπÑÏä§ÎûÄ?",
            "fragment": "what-is-system-service",
            "children": []
          },
          {
            "rank": 2,
            "origin": "ÏãúÏä§ÌÖú ÏÑúÎπÑÏä§Ïùò Ï¢ÖÎ•ò::types-of-system-service",
            "title": "ÏãúÏä§ÌÖú ÏÑúÎπÑÏä§Ïùò Ï¢ÖÎ•ò",
            "fragment": "types-of-system-service",
            "children": [
              {
                "rank": 3,
                "origin": "Ìè¨Í∑∏ÎùºÏö¥Îìú ÏÑúÎπÑÏä§::foreground-service",
                "title": "Ìè¨Í∑∏ÎùºÏö¥Îìú ÏÑúÎπÑÏä§",
                "fragment": "foreground-service",
                "children": []
              },
              {
                "rank": 3,
                "origin": "Î∞±Í∑∏ÎùºÏö¥Îìú ÏÑúÎπÑÏä§::background-service",
                "title": "Î∞±Í∑∏ÎùºÏö¥Îìú ÏÑúÎπÑÏä§",
                "fragment": "background-service",
                "children": []
              }
            ]
          },
          {
            "rank": 2,
            "origin": "ÏÑúÎ∏å ÏãúÏä§ÌÖú::sub-system",
            "title": "ÏÑúÎ∏å ÏãúÏä§ÌÖú",
            "fragment": "sub-system",
            "children": []
          }
        ]
      }
    },
    "description": "",
    "content": "\r\n## ÏãúÏä§ÌÖú ÏÑúÎπÑÏä§ÎûÄ?::what-is-system-service\r\n\r\n![macOS Ïö¥ÏòÅÏ≤¥Ï†úÏùò ÏãúÏä§ÌÖú ÏÑúÎπÑÏä§(ÌôúÏÑ± ÏÉÅÌÉú Î≥¥Í∏∞)](/post/computer/macos-activity-monitor.png)\r\n:{ \"description\": \"macOS Ïö¥ÏòÅÏ≤¥Ï†úÏùò ÏãúÏä§ÌÖú ÏÑúÎπÑÏä§(ÌôúÏÑ± ÏÉÅÌÉú Î≥¥Í∏∞)\" }\r\n\r\nÏãúÏä§ÌÖú ÏÑúÎπÑÏä§(System Service)Îäî ÏãúÏä§ÌÖú Ïú†Ìã∏Î¶¨Ìã∞(System Utility)Î°úÎèÑ ÏïåÎ†§ÏßÑ ÏãúÏä§ÌÖú ÌîÑÎ°úÍ∑∏Îû®(System Program)Ïù¥Îã§.\r\nÏãúÏä§ÌÖú ÏÇ¨Ïö©ÏùÑ ÏúÑÌï¥ Ìé∏Î¶¨ÌïòÍ≤å Ï†úÍ≥µÎêòÎ©∞ ÎÇ¥Î∂Ä Íµ¨ÌòÑÏùÄ Î≥µÏû°Ìïú ÌîÑÎ°úÍ∑∏Îû®Ïù¥Îã§. ÏùºÎ∂ÄÎäî Ïö∞Î¶¨Í∞Ä ÏïåÍ≥† ÏûàÎäî [ÏãúÏä§ÌÖú API](/wiki/system-call#api-and-system-call)Ïù¥Îã§.\r\n\r\nÏÇ¨Ïö©ÏûêÎäî **ÎÖ∏ÎûòÎ•º Îì§ÏúºÎ©∞**, Í≤åÏûÑÏùÑ Ïñ¥ÎñªÍ≤å Ìï† Ïàò ÏûàÎäîÏßÄ Ïïå ÌïÑÏöîÍ∞Ä ÏóÜÎã§. ÏÇ¨Ïö©ÏûêÍ∞Ä ÏõêÌïòÎäî Í≤ÉÏùÑ ÏâΩÍ≤å ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎèÑÎ°ù Ïö¥ÏòÅÏ≤¥Ï†úÍ∞Ä ÏãúÏä§ÌÖú ÏÑúÎπÑÏä§Î•º Ï†úÍ≥µÌïúÎã§.\r\nÏòàÎ•º Îì§Ïñ¥ ÌÅ¨Î°¨ Î∏åÎùºÏö∞Ï†ÄÏóêÏÑú Ïú†ÌäúÎ∏å ÎÆ§ÏßÅÏùÑ Ïû¨ÏÉùÌïòÍ≥† Stream Ïï±ÏúºÎ°ú Í≤åÏûÑÏùÑ Ïã§ÌñâÌïòÍ≥† ÏûàÏñ¥ÎèÑ ÎÖ∏ÎûòÍ∞Ä Ï†ïÏßÄÎêòÏßÄ ÏïäÎäîÎã§.\r\n\r\nÍ∑ºÎ≥∏Ï†ÅÏúºÎ°úÎäî ÎÖ∏ÎûòÍ∞Ä Ïû¨ÏÉùÎêòÍ≥† ÏûàÎäî `Chrome` Ïï±Ïù¥ Î∞±Í∑∏ÎùºÏö¥ÎìúÎ°ú Ï†ÑÌôò Îê†Îïå Ïò§ÎîîÏò§ ÏãúÏä§ÌÖúÍ≥º ÌÜµÏã†ÌïòÎäî Îç∞Î™¨ÏùÑ Ïã§ÌñâÌïòÍ∏∞ ÎïåÎ¨∏Ïóê ÏÇ¨Ïö©ÏûêÎäî ÎààÏπòÏ±ÑÏßÄ Î™ªÌïúÎã§.\r\n\r\n> macOSÏùò Í≤ΩÏö∞ Chrome Ïï±Ïù¥ Î∞±Í∑∏ÎùºÏö¥ÎìúÎ°ú Ï†ÑÌôòÎêòÎ©¥ `coreaudiod` Îç∞Î™¨Ïù¥ Ïã§ÌñâÎêòÎ©∞ ÌïòÎìúÏõ®Ïñ¥ ÎìúÎùºÏù¥Î≤ÑÎ•º Ï†úÏñ¥ÌïúÎã§.\r\n: { \"type\": \"tip\", \"icon\": \"lightbulb\" }\r\n\r\n## ÏãúÏä§ÌÖú ÏÑúÎπÑÏä§Ïùò Ï¢ÖÎ•ò::types-of-system-service\r\n\r\nÏãúÏä§ÌÖú ÏÑúÎπÑÏä§Îäî Ìè¨Í∑∏ÎùºÏö¥Îìú ÏÑúÎπÑÏä§(Foreground Service)ÏôÄ Î∞±Í∑∏ÎùºÏö¥Îìú ÏÑúÎπÑÏä§(Background Service)Î°ú ÎÇòÎâúÎã§.\r\n`Foreground`Îäî ÌòÑÏû¨ ÏÇ¨Ïö©ÏûêÏôÄ ÏßÅÏ†ëÏ†ÅÏù∏ ÏÉÅÌò∏ÏûëÏö©ÏùÑ ÌïòÎäî ÏÑúÎπÑÏä§Î•º ÎßêÌïòÍ≥†, `Background`Îäî ÌîÑÎ°úÏÑ∏Ïä§Ïùò ÏÉÅÌÉúÎ°ú ÏÇ¨Ïö©ÏûêÏôÄ ÏßÅÏ†ëÏ†ÅÏù∏ ÏÉÅÌò∏ÏûëÏö©ÏùÑ ÌïòÏßÄ ÏïäÎäî ÏÑúÎπÑÏä§Î•º ÎßêÌïúÎã§.\r\n\r\nÍ∞Å Ïö¥ÏòÅÏ≤¥Ï†úÎ≥Ñ ÏãúÏä§ÌÖú ÏÑúÎπÑÏä§Ïùò Ï¢ÖÎ•òÎäî Îã§ÏùåÍ≥º Í∞ôÎã§:\r\n\r\n| Ïö¥ÏòÅÏ≤¥Ï†ú |          Ìè¨Í∑∏ÎùºÏö¥Îìú ÏÑúÎπÑÏä§           |                   Î∞±Í∑∏ÎùºÏö¥Îìú ÏÑúÎπÑÏä§                    |\r\n|:---:|:----------------------------:|:----------------------------------------------:|\r\n| Windows |        `ÏûëÏóÖ Í¥ÄÎ¶¨Ïûê`, `Ïó£ÏßÄ`        |      `ÏûëÏóÖ Ïä§ÏºÄÏ§ÑÎü¨`, `ÏúàÎèÑÏö∞ ÎîîÌéúÎçî`, `ÏúàÎèÑÏö∞ ÏóÖÎç∞Ïù¥Ìä∏ ÏÑúÎπÑÏä§`      |\r\n| macOS   |    `ÌôúÏÑ± ÏÉÅÌÉú Î≥¥Í∏∞`, `ÏãúÏä§ÌÖú ÌôòÍ≤ΩÏÑ§Ï†ï`    | `coreaudiod`, `ÏïåÎ¶º ÏÑºÌÑ∞`, `bird (iCloud Îç∞Ïù¥ÌÑ∞ ÎèôÍ∏∞Ìôî)` |\r\n| Linux   | `vim ÏóêÎîîÌÑ∞`, `top (ÌîÑÎ°úÏÑ∏Ïä§ Í¥ÄÎ¶¨ÎèÑÍµ¨)` |           `systemd`, `cron`, `sshd (SSH Îç∞Î™¨)`           |\r\n\r\n### Ìè¨Í∑∏ÎùºÏö¥Îìú ÏÑúÎπÑÏä§::foreground-service\r\n\r\n**ÌååÏùº Í¥ÄÎ¶¨**\r\n\r\nÌååÏùºÍ≥º ÎîîÎ†âÌÜ†Î¶¨Î•º ÏÉùÏÑ±ÌïòÎ©∞, ÏÇ≠Ï†ú, Î≥µÏÇ¨, Î™ÖÎ™Ö, Ï∂úÎ†•, Î™©Î°ùÌôî Î∞è ÏùºÎ∞òÏ†ÅÏù∏ Ï°∞ÏûëÏùÑ ÏàòÌñâÌïúÎã§.\r\n\r\n**ÏÉÅÌÉú Ï†ïÎ≥¥**\r\n\r\nÏãúÏä§ÌÖúÏùò ÏÉÅÌÉúÏ†ïÎ≥¥Î•º Ï†úÍ≥µÌïúÎã§. ÏòàÎ•ºÎì§Ïñ¥ ÎÇ†Ïßú, ÏãúÍ∞Ñ, Í∞ÄÏö© Î©îÎ™®Î¶¨ Î∞è ÎîîÏä§ÌÅ¨, ÏÇ¨Ïö©Ïûê Ïàò Îì±Í≥º Í∞ôÏùÄ ÏÉÅÌÉúÏ†ïÎ≥¥Î•º Ï†úÍ≥µÌïúÎã§. Ïù¥Îü¨Ìïú Í∏∞Îä•ÏùÑ Ï†úÍ≥µÌïòÎäî ÏÑúÎπÑÏä§Îì§ÏùÄ ÌôòÍ≤ΩÏÑ§Ï†ï Ï†ïÎ≥¥Î•º Ï†ÄÏû•ÌïòÍ≥† Í≤ÄÏÉâÌï† Ïàò ÏûàÎäî Îì±Î°ù(registry) Í∏∞Îä•ÏùÑ ÏßÄÏõêÌïòÍ∏∞ÎèÑ ÌïúÎã§.\r\n\r\n**ÌååÏùº Î≥ÄÍ≤Ω**\r\n\r\nÏïûÏÑú ÏÑ§Î™ÖÌïú ÌååÏùºÍ¥ÄÎ¶¨ÏôÄ ÎπÑÏä∑ÌïòÏßÄÎßå, Í∏∞Îä•ÏùÑ Ïó∞Í≥ÑÌïòÏó¨ ÌååÏùºÏùÑ Î≥ÄÍ≤Ω(Ïòà: `text editor`)ÌïòÍ±∞ÎÇò ÌååÏùºÏùò ÏÜçÏÑ±ÏùÑ Î≥ÄÍ≤ΩÌïòÎäî Í∏∞Îä•ÏùÑ Ï†úÍ≥µÌïúÎã§.\r\n\r\n**ÌîÑÎ°úÍ∑∏ÎûòÎ∞ç Ïñ∏Ïñ¥ ÏßÄÏõê**\r\n\r\nÏùºÎ∞òÏ†ÅÏù∏ ÌîÑÎ°úÍ∑∏ÎûòÎ∞ç Ïñ∏Ïñ¥Î•º ÏßÄÏõêÌïòÍ∏∞ ÏúÑÌï¥ Ïª¥ÌååÏùºÎü¨, ÎßÅÏª§, ÎîîÎ≤ÑÍ±∞, Îü∞ÌÉÄÏûÑ ÎùºÏù¥Î∏åÎü¨Î¶¨ Îì±ÏùÑ Ï†úÍ≥µÌïúÎã§. ÏòàÎ•ºÎì§Ïñ¥ Î¶¨ÎàÖÏä§Ïùò Í≤ΩÏö∞ Í∏∞Î≥∏Ï†ÅÏúºÎ°ú `gcc` Ïª¥ÌååÏùºÎü¨Î•º Ï†úÍ≥µÌïúÎã§.\r\n\r\n**ÌîÑÎ°úÍ∑∏Îû® Ï†ÅÏû¨ÏôÄ ÏàòÌñâ**\r\n\r\nÏª¥ÌååÏùº Îêú ÌîÑÎ°úÍ∑∏Îû®ÏùÑ ÎßÅÌÅ¨ÌïòÎäî `ÎßÅÌÇ§ÏßÄ ÏóêÎîîÌÑ∞`(linkage editor)ÏôÄ Ïã§ÌñâÍ∞ÄÎä•Ìïú Î∞îÏù¥ÎÑàÎ¶¨Î•º Î©îÎ™®Î¶¨Ïóê Ï†ÅÏû¨ÌïòÎäî Î°úÎçî(loader)Î•º Ï†úÍ≥µÌïúÎã§.\r\n* Î°úÎçîÎäî Î©îÎ™®Î¶¨Ïùò Ï†àÎåÄ Ï£ºÏÜåÏóê Î°úÎìúÌïòÎäî `Ï†àÎåÄ Î°úÎçî`(Absolute Loader)ÏôÄ ÎèôÏ†ÅÏù∏ Ï£ºÏÜåÏóê Î°úÎìúÌïòÎäî `Ïû¨Î∞∞Ïπò Í∞ÄÎä• Î°úÎçî`(Relocatable Loader)Î°ú ÎÇòÎâòÎ©∞, ÌÅ∞ ÌîÑÎ°úÍ∑∏Îû®ÏùÑ Î∂ÄÎ∂ÑÏ†ÅÏúºÎ°ú Î©îÎ™®Î¶¨Ïóê Î°úÎìúÌïòÎäî `Ï§ëÏ≤© Î°úÎçî`(Overlay Loader)ÎèÑ ÏûàÎã§.\r\n\r\n**ÌÜµÏã†**\r\n\r\nÏÇ¨Ïö©Ïûê ÏôÄ Îã§Î•∏ ÏãúÏä§ÌÖú Í∞ÑÏóê Í∞ÄÏÉÅÏ†ëÏÜçÏùÑ Íµ¨ÌòÑÌïòÎäî ÌÜµÏã† ÏÑúÎπÑÏä§Î•º Ï†úÍ≥µÌïúÎã§. ÏòàÎ•º Îì§Ïñ¥ Î¶¨ÎàÖÏä§Ïùò `ls | grep text`ÏôÄ Í∞ôÏùÄ Î™ÖÎ†πÏñ¥Îäî `|`Î•º ÌÜµÌï¥ Îëê ÌîÑÎ°úÍ∑∏Îû®ÏùÑ Ïó∞Í≤∞ÌïúÎã§.\r\n\r\n\r\n### Î∞±Í∑∏ÎùºÏö¥Îìú ÏÑúÎπÑÏä§::background-service\r\n\r\nÌîÑÎ°úÍ∑∏Îû®ÏùÄ ÏûêÏã†Ïùò Ìï†ÏùºÏùÑ ÏôÑÏàòÌïòÎ©¥ Ï¢ÖÎ£åÎêòÎäî ÌîÑÎ°úÍ∑∏Îû®ÎèÑ ÏûàÎäî Î∞òÎ©¥Ïóê, ÏãúÏä§ÌÖúÏù¥ Ï¢ÖÎ£åÎê† Îïå ÍπåÏßÄ Í≥ÑÏÜç Ïã§ÌñâÎêòÎäî ÌîÑÎ°úÍ∑∏Îû®ÎèÑ ÏûàÎã§.\r\nÏù¥Îü¨Ìïú ÌîÑÎ°úÍ∑∏Îû®ÏùÑ **Î∞±Í∑∏ÎùºÏö¥Îìú ÏÑúÎπÑÏä§(Background Service)** ÎòêÎäî **Îç∞Î™¨(Daemon)** Ïù¥ÎùºÍ≥† ÌïúÎã§.\r\n\r\nÏïûÏÑú `coreaudiod` Îç∞Î™¨ÏùÄ `macOS`ÏóêÏÑú Ïò§ÎîîÏò§ ÏãúÏä§ÌÖúÏùÑ Ï†úÏñ¥ÌïúÎã§Í≥† ÌñàÏóàÎã§. Ïù¥Ïô∏ÏóêÎèÑ ÎÑ§Ìä∏ÏõåÌÅ¨ Ïó∞Í≤∞ÏùÑ Ï≤≠Ï∑®(Listen)ÌïòÎäî ÎÑ§Ìä∏ÏõåÌÅ¨ Îç∞Î™¨Ïù¥ ÏûàÍ≥†, \r\nÏãúÏä§ÌÖú Ïó∞Í≤∞ÏöîÏ≤≠ÏùÑ Ïò¨Î∞îÎ•∏ ÌîÑÎ°úÏÑ∏Ïä§Ïóê Ïó∞Í≤∞Ìï¥Ï£ºÎäî Ïó≠Ìï†ÏùÑ ÏàòÌñâÌïúÎã§. \r\n\r\nÎòê Îã§Î•∏ ÏòàÎ°ú ÌîÑÎ°úÏÑ∏Ïä§Î•º ÏãúÏûëÏãúÌÇ§Îäî ÌîÑÎ°úÏÑ∏Ïä§ Ïä§ÏºÄÏ§ÑÎü¨, ÏãúÏä§ÌÖú Ïò§Î•ò Í∞êÏãú ÏÑúÎπÑÏä§ Î∞è Ï∂úÎ†•ÏÑúÎ≤Ñ Îì±Ïù¥ ÏûàÎã§. \r\nÎòêÌïú OSÍ∞Ä Ï§ëÏöîÌïú ÌôúÎèôÏùÑ Ïª§ÎÑê Ïª®ÌÖçÏä§Ìä∏(Kernel Context)ÏóêÏÑúÍ∞Ä ÏïÑÎãàÎùº ÏÇ¨Ïö©Ïûê Ïª®ÌÖçÏä§Ìä∏(User Context)ÏóêÏÑú ÏàòÌñâ Ìï¥ÏïºÌïòÎäî Í≤ΩÏö∞, Îç∞Î™¨ÏùÑ Ïù¥Ïö©Ìï¥ÏÑú Ïù¥ ÏûëÏóÖÏùÑ ÏàòÌñâÌï† Ïàò ÏûàÎã§.\r\n\r\n\r\n## ÏÑúÎ∏å ÏãúÏä§ÌÖú::sub-system\r\n\r\nOSÏùò ÌïµÏã¨ Í∏∞Îä•ÏùÑ ÎÜÄÎ¶¨Ï†ÅÏúºÎ°ú Î∂ÑÌï†Ìïú ÏûëÏùÄ Îã®ÏúÑÏùò ÏãúÏä§ÌÖúÏù¥Í≥† ÏÑúÎπÑÏä§ÏôÄÎäî Îã§Î•∏ Í∞úÎÖêÏù¥Îã§.  \r\nÏòàÎ•º Îì§Ïñ¥ Í≥ÑÏ∏µÏúºÎ°ú Î∂ÑÎ•òÎ•º ÌïòÎ©¥ ÏïÑÎûòÏôÄ Í∞ôÎã§:\r\n\r\n```\r\nÏö¥ÏòÅÏ≤¥Ï†ú\r\n‚îú‚îÄ‚îÄ ÌååÏùºÏãúÏä§ÌÖú ÏÑúÎ∏åÏãúÏä§ÌÖú (File System Subsystem)\r\n‚îÇ   ‚îî‚îÄ‚îÄ VFS ‚Üí Ïã§Ï†ú ÌååÏùºÏãúÏä§ÌÖú ‚Üí Î∏îÎ°ù ÎîîÎ∞îÏù¥Ïä§ ÎìúÎùºÏù¥Î≤Ñ ‚Üí Î¨ºÎ¶¨Ïû•Ïπò\r\n‚îú‚îÄ‚îÄ Î©îÎ™®Î¶¨ Í¥ÄÎ¶¨ ÏÑúÎ∏åÏãúÏä§ÌÖú (Memory Management Subsystem)\r\n‚îÇ   ‚îî‚îÄ‚îÄ Í∞ÄÏÉÅÎ©îÎ™®Î¶¨ ‚Üí ÌéòÏù¥ÏßÄÌÖåÏù¥Î∏î ‚Üí Î¨ºÎ¶¨Î©îÎ™®Î¶¨\r\n‚îú‚îÄ‚îÄ ÌîÑÎ°úÏÑ∏Ïä§ Í¥ÄÎ¶¨ ÏÑúÎ∏åÏãúÏä§ÌÖú (Process Management Subsystem)\r\n‚îÇ   ‚îî‚îÄ‚îÄ Ïä§ÏºÄÏ§ÑÎü¨ ‚Üí ÌîÑÎ°úÏÑ∏Ïä§/Ïä§Î†àÎìú Í¥ÄÎ¶¨ ‚Üí CPU\r\n‚îî‚îÄ‚îÄ I/O ÏÑúÎ∏åÏãúÏä§ÌÖú (I/O Subsystem)\r\n    ‚îî‚îÄ‚îÄ I/O Ïä§ÏºÄÏ§ÑÎü¨ ‚Üí ÎîîÎ∞îÏù¥Ïä§ ÎìúÎùºÏù¥Î≤Ñ ‚Üí Î¨ºÎ¶¨Ïû•Ïπò\r\n```\r\nÏù¥Îäî ÌäπÏ†ï Í∏∞Îä• Ïó≠Ïó≠ Ï†ÑÏ≤¥Î•º Í¥ÄÎ¶¨ÌïòÎäî ÏÉÅÏúÑ Í∞úÎÖêÏù¥Î©∞, Í∑∏ ÏïÑÎûò ÏûàÎäî Ïó¨Îü¨ Í≥ÑÏ∏µ Íµ¨Ï°∞ÏôÄ Íµ¨ÏÑ±ÏöîÏÜåÎì§ÏùÑ Ìè¨Ìï®ÌïúÎã§.\r\n\r\n> `ÏÑúÎ∏å ÏãúÏä§ÌÖú`ÏùÄ ÏãúÏä§ÌÖúÏùò ÌïµÏã¨ Í∏∞Îä•ÏùÑ Ï†úÍ≥µÌïòÍ∏∞ ÏúÑÌï¥ Ï°¥Ïû¨ÌïòÎäî ÏûëÏùÄ Îã®ÏúÑÏùò ÏãúÏä§ÌÖúÏù¥Îã§.\r\n: { \"type\": \"tip\", \"icon\": \"lightbulb\" }\r\n"
  },
  {
    "path": "/docs/network/media-type",
    "header": {
      "layout": "wiki",
      "title": "ÎØ∏ÎîîÏñ¥ ÌÉÄÏûÖ (Media Type)",
      "date": 1616235000000,
      "tags": [
        "Network",
        "HTTP",
        "Media Type",
        "MIME Type"
      ],
      "summary": "ÎØ∏ÎîîÏñ¥ ÌÉÄÏûÖ",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÎÑ§Ìä∏ÏõåÌÅ¨"
      ],
      "images": [],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "ÎØ∏ÎîîÏñ¥ ÌÉÄÏûÖÏù¥ÎûÄ?::what-is-media-type",
            "title": "ÎØ∏ÎîîÏñ¥ ÌÉÄÏûÖÏù¥ÎûÄ?",
            "fragment": "what-is-media-type",
            "children": []
          }
        ]
      }
    },
    "description": "",
    "content": "\r\n## ÎØ∏ÎîîÏñ¥ ÌÉÄÏûÖÏù¥ÎûÄ?::what-is-media-type\r\n\r\n**ÎØ∏ÎîîÏñ¥ ÌÉÄÏûÖ**(Media Type)ÏùÄ ÏõπÏóêÏÑú Ï†ÑÏÜ°ÎêòÎäî Îç∞Ïù¥ÌÑ∞Ïùò ÌòïÏãùÏùÑ ÎÇòÌÉÄÎÇ¥Îäî Î©îÌÉÄ Ï†ïÎ≥¥Ïù¥Îã§.\r\nÏõπÏóêÏÑúÎäî Ï£ºÎ°ú **MIME**(**M**ultipurpose **I**nternet **M**ail **E**xtensions) ÌÉÄÏûÖÏù¥ÎùºÍ≥† Î∂àÎ¶¨Î©∞, Îç∞Ïù¥ÌÑ∞Ïùò ÌòïÏãùÏùÑ ÎÇòÌÉÄÎÇ¥Îäî Î¨∏ÏûêÏó¥Ïù¥Îã§.\r\n\r\n`MIME`Îäî Ïù¥Î©îÏùºÏùÑ ÏúÑÌïú ÌëúÏ§Ä Ìè¨Îß∑ÏùÑ Ï†ïÏùòÌïòÏòÄÏúºÎ©∞, Ïù¥Î•º ÌôïÏû•ÌïòÏó¨ ÏõπÏóêÏÑúÎèÑ ÏÇ¨Ïö©ÎêòÍ≥† ÏûàÎã§.\r\nÏÑúÎ≤ÑÏóêÏÑúÎäî Ï†ÑÎã¨Ìï† ÏûêÏõêÏùò ÌôïÏû•ÏûêÎ•º Ïù¥Ïö©Ìï¥ ÎØ∏ÎîîÏñ¥ ÌÉÄÏûÖÏùÑ Í≤∞Ï†ïÌïòÎ©∞, Î∏åÎùºÏö∞Ï†ÄÎäî Ïù¥Î•º ÌÜµÌï¥ Ïñ¥Îñ§ Î∞©ÏãùÏúºÎ°ú ÏûêÏõêÏùÑ Ï≤òÎ¶¨Ìï†ÏßÄ Í≤∞Ï†ïÌïúÎã§.\r\n\r\n>Ïù¥Îü¨Ìïú ÎØ∏ÎîîÏñ¥ ÌÉÄÏûÖÏùÄ ÌëúÌòÑ Í≥ÑÏ∏µÏúºÎ°úÏÑúÏùò Íµ¨ÌòÑÏù¥Îã§. \r\n: { \"type\": \"note\", \"icon\": \"info\" }\r\n\r\n(ÌÉÄÏûÖ)/(ÏÑúÎ∏åÌÉÄÏûÖ)Ïùò ÌòïÏãùÏúºÎ°ú Ïù¥Î£®Ïñ¥Ï†∏ ÏûàÏúºÎ©∞, ÏÑúÎ∏åÌÉÄÏûÖÏùÄ ÌÉÄÏûÖÏóê Îî∞Îùº Îã§ÏñëÌïòÍ≤å ÎÇòÎâúÎã§.\r\n\r\n| MIME Type |                                       ÏÑ§Î™Ö                                        | ÏùºÎ∞ò Ï†ÅÏù∏ ÏÑúÎ∏åÌÉÄÏûÖ ÏòàÏãú |\r\n|:---:|:-------------------------------------------------------------------------------:|:---:|\r\n| text |                    ÌÖçÏä§Ìä∏Î•º Ìè¨Ìï®ÌïòÎäî Î™®Îì† Î¨∏ÏÑúÎ•º ÎÇòÌÉÄÎÇ¥Î©∞ Ïù¥Î°†ÏÉÅ Ïù∏Í∞ÑÏù¥ ÏùΩÏùÑÏàò ÏûàÏñ¥Ïïº ÌïúÎã§.                    | plain, html, css, javascript |\r\n| image | Î™®Îì† Ï¢ÖÎ•òÏùò Ïù¥ÎØ∏ÏßÄÎ•º ÎÇòÌÉÄÎÇ¥Î©∞, Ïï†ÎãàÎ©îÏù¥ÏÖòÎêòÎäî Ïù¥ÎØ∏ÏßÄ(animated gif Ï≤òÎüº)Í∞Ä Ïù¥ÎØ∏ÏßÄÌÉÄÏûÖÏóê Ìè¨Ìï®ÎêòÍ∏¥ ÌïòÏßÄÎßå, ÎπÑÎîîÏò§Îäî Ìè¨Ìï®ÎêòÏßÄ ÏïäÎäîÎã§. | jpeg, png, gif, svg |\r\n| audio |                                Î™®Îì† Ï¢ÖÎ•òÏùò Ïò§ÎîîÏò§ ÌååÏùºÏùÑ ÎÇòÌÉÄÎÇ∏Îã§.                                | mp3, wav, ogg |\r\n| video |                                Î™®Îì† Ï¢ÖÎ•òÏùò ÎπÑÎîîÏò§ ÌååÏùºÏùÑ ÎÇòÌÉÄÎÇ∏Îã§.                                | mp4, webm, ogg |\r\n| application |                         Î™®Îì† Ï¢ÖÎ•òÏùò Î∞îÏù¥ÎÑàÎ¶¨ Îç∞Ïù¥ÌÑ∞Î•º ÎÇòÌÉÄÎÇ∏Îã§.                         | octet-stream, json, pdf, zip |\r\n\r\n\r\n\r\n"
  },
  {
    "path": "/docs/network/http",
    "header": {
      "layout": "post",
      "title": "HTTP (HyperText Transfer Protocol)",
      "tags": [
        "Network",
        "TCP/IP",
        "HTTP"
      ],
      "date": 1616160120000,
      "thumbnail": "/post/network/http/index.png",
      "profile-image": "/post/profile/profile1.jpg",
      "current-company": "Cubic INC",
      "current-position": "SI Researcher",
      "summary": "HTTP",
      "excerpt-separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÎÑ§Ìä∏ÏõåÌÅ¨"
      ],
      "images": [
        {
          "src": "/post/network/http/index.png",
          "alt": "HTTP ÌÜµÏã†"
        },
        {
          "src": "/post/network/http/request-format.png",
          "alt": "HTTP ÏöîÏ≤≠ Î©îÏÑ∏ÏßÄ"
        },
        {
          "src": "/post/network/http/response-format.png",
          "alt": "HTTP ÏùëÎãµ Î©îÏÑ∏ÏßÄ"
        },
        {
          "src": "/post/network/http/http-message.png",
          "alt": "HTTP Î©îÏÑ∏ÏßÄ Ï†ÑÎ¨∏"
        },
        {
          "src": "/post/network/http/keep-alive.png",
          "alt": "Keep-Alive"
        }
      ],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "HTTPÎûÄ?::what-is-http",
            "title": "HTTPÎûÄ?",
            "fragment": "what-is-http",
            "children": []
          },
          {
            "rank": 2,
            "origin": "HTTP Î©îÏÑ∏ÏßÄ Íµ¨Ï°∞::message-structure",
            "title": "HTTP Î©îÏÑ∏ÏßÄ Íµ¨Ï°∞",
            "fragment": "message-structure",
            "children": [
              {
                "rank": 3,
                "origin": "ÏöîÏ≤≠ Î©îÏÑ∏ÏßÄ::request-message",
                "title": "ÏöîÏ≤≠ Î©îÏÑ∏ÏßÄ",
                "fragment": "request-message",
                "children": []
              },
              {
                "rank": 3,
                "origin": "ÏùëÎãµ Î©îÏÑ∏ÏßÄ::response-message",
                "title": "ÏùëÎãµ Î©îÏÑ∏ÏßÄ",
                "fragment": "response-message",
                "children": []
              }
            ]
          },
          {
            "rank": 2,
            "origin": "Î©îÏÑ∏ÏßÄ Î≥∏Î¨∏::message-body",
            "title": "Î©îÏÑ∏ÏßÄ Î≥∏Î¨∏",
            "fragment": "message-body",
            "children": []
          },
          {
            "rank": 2,
            "origin": "HTTP Header Options::header-options",
            "title": "HTTP Header Options",
            "fragment": "header-options",
            "children": [
              {
                "rank": 3,
                "origin": "Keep-Alive::keep-alive",
                "title": "Keep-Alive",
                "fragment": "keep-alive",
                "children": []
              }
            ]
          }
        ]
      }
    },
    "description": "HTTPÎäî HyperText Transfer ProtocolÏùò ÏïΩÏûêÎ°ú, Ïõπ ÏÑúÎ≤ÑÏôÄ Ïõπ ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ Í∞ÑÏùò ÌÜµÏã†ÏùÑ ÏúÑÌïú ÌîÑÎ°úÌÜ†ÏΩúÏù¥Îã§.\r\nTCP ÏúÑÏóêÏÑú, ÏöîÏ≤≠/ÏùëÎãµ Î∞©ÏãùÏúºÎ°ú ÎèôÏûëÌïúÎã§.",
    "content": "\r\n## HTTPÎûÄ?::what-is-http\r\n\r\n**HTTP**(HyperText Transfer Protocol)Îäî Ïõπ ÏÑúÎ≤ÑÏôÄ Ïõπ ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ Í∞ÑÏùò ÌÜµÏã†ÏùÑ ÏúÑÌïú ÌîÑÎ°úÌÜ†ÏΩúÏù¥Îã§.\r\nÍ∏∞Î≥∏Ï†ÅÏúºÎ°ú ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Í∞Ä ÏÑúÎ≤ÑÏóê ÏöîÏ≤≠ÏùÑ Î≥¥ÎÇ¥Í≥†, ÏÑúÎ≤ÑÎäî ÏöîÏ≤≠Ïóê ÎåÄÌïú ÏùëÎãµÏùÑ Î≥¥ÎÇ¥Îäî Î∞©ÏãùÏúºÎ°ú ÎèôÏûëÌïúÎã§.\r\n\r\n![HTTP ÌÜµÏã†](/post/network/http/index.png)\r\n:{ \"align\": \"center\", \"max-width\": \"400px\", \"description\": \"HTTP ÌÜµÏã†\" }\r\n\r\nHTTPÏùò ÏùºÎ∞òÏ†ÅÏù∏ ÎèôÏûëÏùÄ Ïù¥ÎØ∏ÏßÄÏ≤òÎüº  [TCP](/docs/network/tcp-ip/transport-layer#tcp-3-way-handshake) ÏúÑÏóêÏÑú ÏàòÌñâÎêúÎã§.\r\nÏù¥ÎØ∏ Ïó∞Í≤∞Ïù¥ Îß∫Ïñ¥Ï°åÎã§Îäî Í∞ÄÏ†ïÌïòÏóê, Î©îÏÑ∏ÏßÄÎ•º ÍµêÌôòÌïòÎäî Î∞©ÏãùÏù¥Îã§.\r\n\r\nÍ∞Å Ïû•ÏπòÏóêÏÑúÎäî TCP ÏÑ∏Í∑∏Î®ºÌä∏Ïùò ÌéòÏù¥Î°úÎìúÎ•º HTTP Î©îÏÑ∏ÏßÄÎ°ú, ÌëúÏ§ÄÌôîÎêú Í∑úÍ≤©Ïóê ÎßûÍ≤å Ìï¥ÏÑùÌïòÏó¨ Ï≤òÎ¶¨ÌïúÎã§.\r\n[HTTP/1.1](https://www.rfc-editor.org/info/rfc2616)ÏùÄ 1999ÎÖÑÏóê ÌëúÏ§ÄÌôîÎêòÏóàÏúºÎ©∞, ÌòÑÏû¨Îäî [HTTP/2](https://www.rfc-editor.org/info/rfc7540) Îì± ÏÉÅÏúÑ Î≤ÑÏ†ÑÎèÑ ÎÇòÏôÄÏûàÎã§.\r\n\r\n## HTTP Î©îÏÑ∏ÏßÄ Íµ¨Ï°∞::message-structure\r\n\r\nHTTPÎäî ÏÉÅÌÉúÍ∞Ä ÏóÜÎäî(Stateless) ÌîÑÎ°úÌÜ†ÏΩúÏù¥Í∏∞ ÎñÑÎ¨∏Ïóê ÏÑúÎ≤ÑÏóêÏÑú Ïù¥Ï†Ñ ÏöîÏ≤≠Îì§Ïùò ÏÉÅÌÉúÎ•º Ï†ÄÏû•ÌïòÏßÄ ÏïäÎäîÎã§. \r\nÎ©îÏÑ∏ÏßÄÎäî ÌÅ¨Í≤å ÏöîÏ≤≠(Request) Î©îÏÑ∏ÏßÄÏôÄ ÏùëÎãµ(Response) Î©îÏÑ∏ÏßÄÎ°ú ÎÇòÎâòÎ©∞ Í∞Å Î©îÏÑ∏ÏßÄÎäî ÌëúÏ§Ä Í∑úÍ≤©ÏùÑ Îî∞Î•∏Îã§.\r\n\r\n### ÏöîÏ≤≠ Î©îÏÑ∏ÏßÄ::request-message\r\n\r\n![HTTP ÏöîÏ≤≠ Î©îÏÑ∏ÏßÄ](/post/network/http/request-format.png)\r\n:{ \"align\": \"center\", \"max-width\": \"600px\", \"description\": \"HTTP ÏöîÏ≤≠ Î©îÏÑ∏ÏßÄ\" }\r\n\r\nHTTP Î©îÏÑ∏ÏßÄÎäî ÏöîÏ≤≠ ÎùºÏù∏, Ìó§Îçî, Î≥∏Î¨∏ÏúºÎ°ú Íµ¨ÏÑ±ÎêúÎã§. ÏòàÏ†úÏóêÏÑúÎäî Ïù¥Ìï¥Î•º ÏúÑÌï¥ ÏöîÏ≤≠ ÎùºÏù∏Í≥º Ìó§ÎçîÎ•º ÏïåÏïÑÎ≥¥Ïûê.\r\n\r\n*Request Line*\r\n\r\n* **Method**: ÏöîÏ≤≠ Î∞©ÏãùÏùÑ ÎÇòÌÉÄÎÇ∏Îã§. (GET, POST, PUT, DELETE Îì±)\r\n* **Request-URI**: ÏöîÏ≤≠ ÎåÄÏÉÅÏùò Î¶¨ÏÜåÏä§Î•º ÎÇòÌÉÄÎÇ∏Îã§.\r\n* **Protocol**: HTTP ÌîÑÎ°úÌÜ†ÏΩúÏùò Î≤ÑÏ†ÑÏùÑ ÎÇòÌÉÄÎÇ∏Îã§.\r\n\r\nÏöîÏ≤≠ ÎùºÏù∏ÏóêÏÑúÎäî ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Í∞Ä ÏöîÏ≤≠ÌïòÎäî Î¶¨ÏÜåÏä§Ïóê ÎåÄÌïòÏó¨ Ïñ¥Îñ§ Î∞©ÏãùÏúºÎ°ú ÏöîÏ≤≠ÌïòÎäîÏßÄ ÏôÄ Ïñ¥Îñ§ ÌîÑÎ°úÌÜ†ÏΩúÏùò Î≤ÑÏ†ÑÏúºÎ°ú Ï≤òÎ¶¨Ïóê ÎåÄÌï¥ ÏöîÏ≤≠ÌïòÎäîÏßÄÎ•º ÎÇòÌÉÄÎÇ∏Îã§. \r\n\r\n*Header*\r\n\r\n* **Host**: ÏöîÏ≤≠ ÎåÄÏÉÅÏùò Ìò∏Ïä§Ìä∏Î•º ÎÇòÌÉÄÎÇ∏Îã§.\r\n* **User-Agent**: ÏöîÏ≤≠ÏùÑ Î≥¥ÎÇ¥Îäî ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Ïùò Ï†ïÎ≥¥Î•º ÎÇòÌÉÄÎÇ∏Îã§.\r\n* **Accept**: ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Í∞Ä Î∞õÏïÑÎì§Ïùº Ïàò ÏûàÎäî Ïª®ÌÖêÏ∏† ÌÉÄÏûÖÏùÑ ÎÇòÌÉÄÎÇ∏Îã§.\r\n* **Content-Type**: ÏöîÏ≤≠ Î≥∏Î¨∏Ïùò ÌÉÄÏûÖÏùÑ ÎÇòÌÉÄÎÇ∏Îã§.\r\n* **Content-Length**: ÏöîÏ≤≠ Î≥∏Î¨∏Ïùò Í∏∏Ïù¥Î•º ÎÇòÌÉÄÎÇ∏Îã§.\r\n\r\nÌó§ÎçîÏóêÏÑúÎäî ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Í∞Ä ÏöîÏ≤≠ÌïòÎäî Î¶¨ÏÜåÏä§Ïóê ÎåÄÌïòÏó¨ Ï∂îÍ∞ÄÏ†ÅÏù∏ Ï†ïÎ≥¥Î•º Îã¥Í≥† ÏûàÎã§. \r\nÏù¥ÎØ∏ÏßÄÏóêÏÑúÎäî ÏùºÎ∂Ä Ìó§ÎçîÍ∞Ä ÏÉùÎûµ ÎêòÏóàÏßÄÎßå, Ïã§Ï†úÎ°ú Content-Length Í∞ôÏù¥ ÏöîÏ≤≠Ïùò ÎÅùÏùÑ Ïïå Ïàò ÏóÜÏñ¥ Î©îÏÑ∏ÏßÄ Ìï¥ÏÑùÏù¥ Ïñ¥Î†§Ïö¥ Í≤ΩÏö∞ TCP Ïó∞Í≤∞Ï¢ÖÎ£å ÎÅùÏùÑ ÌåêÎã®ÌïúÎã§.\r\nÎî∞ÎùºÏÑú ÎåÄÎ∂ÄÎ∂ÑÏùÄ HTTP ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Îäî Í∏∞Î≥∏Ï†ÅÏù∏ Ìó§ÎçîÎ•º Ìè¨Ìï®ÎêòÍ≤å ÎêòÏñ¥ÏûàÎã§.\r\n\r\n\r\n### ÏùëÎãµ Î©îÏÑ∏ÏßÄ::response-message\r\n\r\n![HTTP ÏùëÎãµ Î©îÏÑ∏ÏßÄ](/post/network/http/response-format.png)\r\n:{ \"align\": \"center\", \"max-width\": \"600px\", \"description\": \"HTTP ÏùëÎãµ Î©îÏÑ∏ÏßÄ\" }\r\n\r\nHTTP ÏùëÎãµ Î©îÏÑ∏ÏßÄÎäî ÏÉÅÌÉú ÎùºÏù∏, Ìó§Îçî, Î≥∏Î¨∏ÏúºÎ°ú Íµ¨ÏÑ±ÎêúÎã§. ÏòàÏ†úÏóêÏÑúÎäî Ïù¥Ìï¥Î•º ÏúÑÌï¥ ÏÉÅÌÉú ÎùºÏù∏Í≥º Ìó§ÎçîÎ•º ÏïåÏïÑÎ≥¥Ïûê.\r\n\r\n*Status Line*\r\n\r\n* **Protocol**: HTTP ÌîÑÎ°úÌÜ†ÏΩúÏùò Î≤ÑÏ†ÑÏùÑ ÎÇòÌÉÄÎÇ∏Îã§.\r\n* **Status-Code**: ÏöîÏ≤≠Ïóê ÎåÄÌïú ÏùëÎãµ ÏÉÅÌÉú ÏΩîÎìúÎ•º ÎÇòÌÉÄÎÇ∏Îã§.\r\n  * | Ï†ÑÏ≤¥ Î≤îÏúÑ | Ï†ïÏùòÎêú Î≤îÏúÑ | Î∂ÑÎ•ò |\r\n    |:---:|:---:|:---:|\r\n    | 1xx | 100 ~ 101 | Ï†ïÎ≥¥ |\r\n    | 2xx | 200 ~ 206 | ÏÑ±Í≥µ |\r\n    | 3xx | 300 ~ 305 | Î¶¨Îã§Ïù¥Î†âÏÖò |\r\n    | 4xx | 400 ~ 415 | ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ ÏóêÎü¨ |\r\n    | 5xx | 500 ~ 505 | ÏÑúÎ≤Ñ ÏóêÎü¨ |\r\n* **Reason-Phrase**: ÏÉÅÌÉú ÏΩîÎìúÏóê ÎåÄÌïú ÏÑ§Î™ÖÏùÑ ÎÇòÌÉÄÎÇ∏Îã§.\r\n  * | ÏÉÅÌÉú ÏΩîÎìú | ÏÇ¨Ïú† Íµ¨Ï†à | ÏùòÎØ∏ |\r\n    |:---:|:---:|:---:|\r\n    | 200 | OK | ÏöîÏ≤≠Ïù¥ ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ï≤òÎ¶¨ÎêòÏóàÏùå |\r\n    | 404 | Not Found | ÏöîÏ≤≠Ìïú Î¶¨ÏÜåÏä§Î•º Ï∞æÏùÑ Ïàò ÏóÜÏùå |\r\n    | 500 | Internal Server Error | ÏÑúÎ≤Ñ ÎÇ¥Î∂Ä ÏóêÎü¨Î°ú ÏöîÏ≤≠ÏùÑ Ï≤òÎ¶¨Ìï† Ïàò ÏóÜÏùå |\r\n\r\nÏÉÅÌÉú ÎùºÏù∏ÏóêÏÑúÎäî ÏÑúÎ≤ÑÍ∞Ä ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ÏóêÍ≤å ÏùëÎãµÌïòÎäî ÏÉÅÌÉú ÏΩîÎìúÏôÄ Í∑∏Ïóê ÎåÄÌïú ÏÑ§Î™ÖÏùÑ ÎÇòÌÉÄÎÇ∏Îã§.  \r\n\r\nÏÉÅÌÉú ÏΩîÎìúÎäî [RFC9110](https://www.rfc-editor.org/rfc/rfc9110.html#name-status-codes)Ïóê Ï†ïÏùòÎêòÏñ¥ ÏûàÏúºÎ©∞, ÏÉÅÌÉú ÏΩîÎìúÏóê Îî∞Îùº ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Îäî Ïñ¥ÎñªÍ≤å Ï≤òÎ¶¨Ìï¥Ïïº ÌïòÎäîÏßÄ Ïïå Ïàò ÏûàÎã§.\r\nÏù¥Îäî ÏÇ¨Ïú†Íµ¨Ï†àÍ≥º ÌïúÍ∞úÏùò ÏÉÅÌÉú Ï†ïÎ≥¥Î°ú ÏÇ¨Ïö©ÎêúÎã§. \r\n\r\n*Header*\r\n\r\n* **Server**: ÏÑúÎ≤ÑÏùò Ï†ïÎ≥¥Î•º ÎÇòÌÉÄÎÇ∏Îã§.\r\n* **Content-Type**: ÏùëÎãµ Î≥∏Î¨∏Ïùò ÌÉÄÏûÖÏùÑ ÎÇòÌÉÄÎÇ∏Îã§.\r\n* **Content-Length**: ÏùëÎãµ Î≥∏Î¨∏Ïùò Í∏∏Ïù¥Î•º ÎÇòÌÉÄÎÇ∏Îã§.\r\n* **Date**: ÏùëÎãµÏùÑ Î≥¥ÎÇ∏ ÏãúÍ∞ÑÏùÑ ÎÇòÌÉÄÎÇ∏Îã§.\r\n* **Connection**: ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ÏôÄ ÏÑúÎ≤ÑÏùò Ïó∞Í≤∞ ÏÉÅÌÉúÎ•º ÎÇòÌÉÄÎÇ∏Îã§.\r\n\r\n## Î©îÏÑ∏ÏßÄ Î≥∏Î¨∏::message-body\r\n\r\n![HTTP Î©îÏÑ∏ÏßÄ Ï†ÑÎ¨∏](/post/network/http/http-message.png)\r\n:{ \"align\": \"center\", \"max-width\": \"600px\", \"description\": \"HTTP Î©îÏÑ∏ÏßÄ Ï†ÑÎ¨∏\" }\r\n\r\n`HTTP` Î©îÏÑ∏ÏßÄÏùò **ÏöîÏ≤≠ÎùºÏù∏Í≥º ÏÉÅÌÉúÎùºÏù∏ Í∑∏Î¶¨Í≥† Ìó§Îçî**Í∞Ä Î©îÏÑ∏ÏßÄÏóê ÎåÄÌïú ÏÑ§Ï†ï Ï†ïÎ≥¥ÎùºÎ©¥ Î≥∏Î¨∏ÏùÄ Ïã§Ï†ú Îç∞Ïù¥ÌÑ∞Î•º Îã¥Í≥† ÏûàÎäî Î∂ÄÎ∂ÑÏù¥Îã§.\r\n\r\nHTTP Î©îÏÑ∏ÏßÄ Ìï¥ÏÑùÏãú Î≥∏Î¨∏ÏùÑ ÏïåÍ∏∞ ÏúÑÌï¥ÏÑúÎäî, Î©îÏÑ∏ÏßÄ Ï†ÑÏ≤¥Î•º Î≥º ÌïÑÏöîÍ∞ÄÏûàÎã§. \r\nÎ®ºÏ†Ä Î©îÏÑ∏ÏßÄ ÏãúÏûëÏùÑ ÏïåÍ∏∞ÏúÑÌï¥ `Header`ÏôÄ `Body`Î•º Íµ¨Î∂ÑÌïòÎäî Í∞úÌñâÏù¥ ÌïÑÏöîÌïòÎã§. http Î©îÏÑ∏ÏßÄÎäî ÌëúÏ§Ä Ïä§Ìä∏Î¶ºÏúºÎ°ú ÏùΩÍ∏∞ ÎïåÎ¨∏Ïóê ÎÅùÏùÑ ÏïåÏàòÍ∞Ä ÏóÜÎã§.\r\n\r\nÎî∞ÎùºÏÑú Î©îÏÑ∏ÏßÄ Ìó§ÎçîÏùò `Content-Length`Î•º ÌÜµÌï¥ Î≥∏Î¨∏Ïùò Í∏∏Ïù¥Î•º Ïïå Ïàò ÏûàÏúºÎ©∞, Ïù¥Î•º ÌÜµÌï¥ Î≥∏Î¨∏Ïùò ÎÅùÏùÑ Ïïå Ïàò ÏûàÎã§.\r\n\r\nÏù¥ÎØ∏ÏßÄÏóêÎäî ÏöîÏ≤≠ Î≥∏Î¨∏Ïù¥ `application/x-www-form-urlencoded`ÌòïÏãùÏúºÎ°ú ÎêòÏñ¥ÏûàÍ≥†, ÏùëÎãµ Î≥∏Î¨∏ÏóêÎäî `application/html`ÌòïÏãùÏúºÎ°ú ÎêòÏñ¥ÏûàÎäîÍ±∏ Ïïå Ïàò ÏûàÎã§.\r\nÎ©îÏÑ∏ÏßÄÎ•º Î∞õÎäî ÎåÄÏÉÅÏù¥ Ïò¨Î∞îÎ•¥Í≤å Ìï¥ÏÑùÌï† Ïàò ÏûàÎèÑÎ°ù `Content-Type`ÏùÑ ÌÜµÌï¥ Î≥∏Î¨∏Ïùò ÌÉÄÏûÖÏùÑ ÏïåÎ†§Ï§ÄÎã§.\r\n\r\n\r\n## HTTP Header Options::header-options\r\n\r\nHTTPÎäî TCP ÏúÑÏóêÏÑú ÎèôÏûëÌïòÍ∏∞ ÎïåÎ¨∏Ïóê, HTTP Ìó§Îçî ÏòµÏÖòÏúºÎ°ú TCPÏùò Í∏∞Îä•ÏùÑ ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎã§.\r\nÏòàÎ•º Îì§Ïñ¥ `Keep-Alive` Ìó§ÎçîÎäî ÌäπÏ†ï ÏãúÍ∞ÑÎèôÏïà ÏöîÏ≤≠Ïùò ÏÑ∏ÏÖòÏùÑ Ïû¨ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎèÑÎ°ù ÏßÄÏõêÌïúÎã§.  \r\n\r\n### Keep-Alive::keep-alive\r\n\r\n`Keep-Alive`Îäî TCP Ïä§ÌéôÏùò ÏßÄÏÜç Ïó∞Í≤∞(`Persistent Connection`)ÏùÑ Ïù¥Ïö©ÌïòÏó¨, ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ÏôÄ ÏÑúÎ≤ÑÍ∞ÑÏùò Ïó∞Í≤∞ÏùÑ Ïú†ÏßÄÌïòÎäî Í∏∞Îä•Ïù¥Îã§.\r\n\r\n```http\r\nGET /index.html HTTP/1.1\r\nHost: www.example.com\r\nConnection: Keep-Alive\r\nKeep-Alive: timeout=60, max=1000\r\n...\r\n```\r\n\r\n![Keep-Alive](/post/network/http/keep-alive.png)\r\n:{ \"align\": \"center\", \"max-width\": \"400px\", \"description\": \"Keep-AliveÎ•º 1Î∂ÑÏúºÎ°ú ÏÑ§Ï†ï\" }\r\n\r\nÏòàÎ•º Îì§Ïñ¥ ÏúÑÏôÄ Í∞ôÏù¥ `Connection`ÏùÄ `Keep-Alive`Î°ú ÏÑ§Ï†ïÎêòÏñ¥ ÏûàÍ≥†, `Keep-Alive` Ìó§ÎçîÏóêÎäî `timeout`Í≥º `max`Î•º ÏÑ§Ï†ïÌïòÏòÄÎã§.\r\nÏù¥ Í≤ΩÏö∞ 60Ï¥à ÎèôÏïà ÏÑ∏ÏÖòÏùÑ Ïú†ÏßÄÌïòÍ≥†, ÏµúÎåÄ 1000Í∞úÏùò ÏöîÏ≤≠ÏùÑ Ï≤òÎ¶¨Ìï† Ïàò ÏûàÏúºÎ©∞ Îëò Ï§ë ÌïòÎÇòÍ∞Ä Î®ºÏ†Ä ÎèÑÎã¨ÌïòÎ©¥ ÏÑ∏ÏÖòÏùÑ Ï¢ÖÎ£åÌïúÎã§.\r\n\r\n> Ïù¥Î†áÍ≤å ÏßÄÏõêÎêòÎäî `Keep-Alive`Îäî ÏÑ∏ÏÖò Í≥ÑÏ∏µÏúºÎ°úÏÑúÏùò Íµ¨ÌòÑÏù¥Îã§.\r\n: { \"type\": \"note\", \"icon\": \"info\" }\r\n"
  },
  {
    "path": "/docs/network/tcp-ip/transport-layer",
    "header": {
      "layout": "post",
      "title": "Ï†ÑÏÜ° Í≥ÑÏ∏µ (Transport Layer)",
      "tags": [
        "Network",
        "Transport Layer",
        "OSI",
        "OSI 7 Layer",
        "TCP/IP"
      ],
      "date": 1614864120000,
      "thumbnail": "/post/network/tcp-ip/transport-layer/tcp-segment-structure.png",
      "profile-image": "/post/profile/profile1.jpg",
      "current-company": "Cubic INC",
      "current-position": "SI Researcher",
      "summary": "Ï†ÑÏÜ° Í≥ÑÏ∏µ",
      "excerpt-separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÎÑ§Ìä∏ÏõåÌÅ¨",
        "TCP/IP"
      ],
      "images": [
        {
          "src": "/post/network/tcp-ip/transport-layer/udp-datagram-structure.png",
          "alt": "UDP Îç∞Ïù¥ÌÑ∞Í∑∏Îû® Íµ¨Ï°∞"
        },
        {
          "src": "/post/network/tcp-ip/transport-layer/tcp-segment-structure.png",
          "alt": "TCP ÏÑ∏Í∑∏Î®ºÌä∏ Íµ¨Ï°∞"
        },
        {
          "src": "/post/network/tcp-ip/transport-layer/syn-diagram-in-tcp.png",
          "alt": "ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ÏóêÏÑú Ïó∞Í≤∞ÏùÑ Îß∫Í∏∞ÏúÑÌï¥ SYNÏùÑ Î≥¥ÎÇ∏Îã§."
        },
        {
          "src": "/post/network/tcp-ip/transport-layer/captured-segment-of-syn.png",
          "alt": "WireSharkÎ°ú Ï∫°Ï≥êÎêú SYN ÏÑ∏Í∑∏Î®ºÌä∏"
        },
        {
          "src": "/post/network/tcp-ip/transport-layer/syn+ack-diagram-in-tcp.png",
          "alt": "ÏÑúÎ≤ÑÏóêÏÑúÎäî Ïó∞Í≤∞ÏùÑ ÏàòÎùΩÌïòÍ∏∞ ÏúÑÌï¥ SYN+ACKÎ•º Î≥¥ÎÇ∏Îã§."
        },
        {
          "src": "/post/network/tcp-ip/transport-layer/captured-segment-of-syn+ack.png",
          "alt": "WireSharkÎ°ú Ï∫°Ï≥êÎêú SYN + ACK ÏÑ∏Í∑∏Î®ºÌä∏"
        },
        {
          "src": "/post/network/tcp-ip/transport-layer/ack-diagram-in-tcp.png",
          "alt": "ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ÏóêÏÑúÎäî ÏÑúÎ≤ÑÏùò ÏùëÎãµÏùÑ ÌôïÏù∏ÌïòÍ∏∞ ÏúÑÌï¥ ACKÎ•º Î≥¥ÎÇ∏Îã§."
        },
        {
          "src": "/post/network/tcp-ip/transport-layer/captured-segment-of-ack.png",
          "alt": "WireSharkÎ°ú Ï∫°Ï≥êÎêú ACK ÏÑ∏Í∑∏Î®ºÌä∏"
        },
        {
          "src": "/post/network/tcp-ip/transport-layer/data-send-diagram-in-tcp.png",
          "alt": "ÏÑúÎ≤ÑÏôÄ ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Îäî Îç∞Ïù¥ÌÑ∞Î•º Ï†ÑÏÜ°ÌïúÎã§."
        },
        {
          "src": "/post/network/tcp-ip/transport-layer/captured-segment-of-data.png",
          "alt": "WireSharkÎ°ú Ï∫°Ï≥êÎêú Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ° ÏÑ∏Í∑∏Î®ºÌä∏"
        },
        {
          "src": "/post/network/tcp-ip/transport-layer/fin-diagram-in-tcp.png",
          "alt": "ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ÏôÄ ÏÑúÎ≤ÑÎäî ÏÑ∏ÏÖòÏùÑ Ï¢ÖÎ£åÌïòÍ∏∞ÏúÑÌï¥ FINÏùÑ Î≥¥ÎÇ∏Îã§."
        }
      ],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "Ï†ÑÏÜ° Í≥ÑÏ∏µÏù¥ÎûÄ?::what-is-transport-layer",
            "title": "Ï†ÑÏÜ° Í≥ÑÏ∏µÏù¥ÎûÄ?",
            "fragment": "what-is-transport-layer",
            "children": []
          },
          {
            "rank": 2,
            "origin": "UDP Îç∞Ïù¥ÌÑ∞Í∑∏Îû® Íµ¨Ï°∞::datagram-structure",
            "title": "UDP Îç∞Ïù¥ÌÑ∞Í∑∏Îû® Íµ¨Ï°∞",
            "fragment": "datagram-structure",
            "children": []
          },
          {
            "rank": 2,
            "origin": "TCP ÏÑ∏Í∑∏Î®ºÌä∏ Íµ¨Ï°∞::segment-structure",
            "title": "TCP ÏÑ∏Í∑∏Î®ºÌä∏ Íµ¨Ï°∞",
            "fragment": "segment-structure",
            "children": []
          },
          {
            "rank": 2,
            "origin": "TCP 3-way Handshake::tcp-3-way-handshake",
            "title": "TCP 3-way Handshake",
            "fragment": "tcp-3-way-handshake",
            "children": [
              {
                "rank": 3,
                "origin": "SYN::synchronize",
                "title": "SYN",
                "fragment": "synchronize",
                "children": []
              },
              {
                "rank": 3,
                "origin": "SYN + ACK::synchronize-acknowledgment",
                "title": "SYN + ACK",
                "fragment": "synchronize-acknowledgment",
                "children": []
              },
              {
                "rank": 3,
                "origin": "ACK::acknowledgment",
                "title": "ACK",
                "fragment": "acknowledgment",
                "children": []
              },
              {
                "rank": 3,
                "origin": "Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ°::data-send",
                "title": "Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ°",
                "fragment": "data-send",
                "children": []
              },
              {
                "rank": 3,
                "origin": "FIN::finish",
                "title": "FIN",
                "fragment": "finish",
                "children": []
              }
            ]
          }
        ]
      }
    },
    "description": "Ï†ÑÏÜ° Í≥ÑÏ∏µÏùÄ OSI 7 Layer Î™®Îç∏ÏóêÏÑú L4Ïóê Íµ¨ÌòÑÎêòÎ©∞, TCPÏôÄ UDP ÌîÑÎ°úÌÜ†ÏΩúÏùÑ ÏÇ¨Ïö©ÌïòÎ©∞, Í∞Å ÌîÑÎ°úÌÜ†ÏΩúÏóê ÎßûÍ≤å ÌïÑÏöîÌïú Ï≤òÎ¶¨Î•º Ï†úÍ≥µÌïúÎã§.",
    "content": "\r\n## Ï†ÑÏÜ° Í≥ÑÏ∏µÏù¥ÎûÄ?::what-is-transport-layer\r\n\r\nL4Îäî ÏÜ°Ïã†ÏûêÏôÄ ÏàòÏã†Ïûê Í∞ÑÏùò Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ°ÏùÑ Í¥ÄÎ¶¨ÌïòÎ©∞, Ï¢ÖÎã® Í∞Ñ(End-to-End) ÌÜµÏã†ÏùÑ Ï†úÍ≥µÌïúÎã§.\r\nÌè¨Ìä∏Î≤àÌò∏Î•º Ïù¥ÏöúÌïòÍ∏∞ ÎïåÎ¨∏Ïóê, ÌäπÏ†ï Ïñ¥ÌîåÎ¶¨ÏºÄÏù¥ÏÖòÏù¥ÎÇò ÌîÑÎ°úÏÑ∏Ïä§Î•º ÏãùÎ≥Ñ Ìï† Ïàò ÏûàÎã§.\r\n\r\nÏó¨Îü¨ ÌîÑÎ°úÌÜ†ÏΩúÏ§ëÏóêÎäî `QUIC`, `RUDP`, `DCCP`, `SCTP` Îì±Ïù¥ ÏûàÏßÄÎßå, ÎåÄÌëúÏ†ÅÏúºÎ°úÎäî `TCP`ÏôÄ `UDP`Í∞Ä ÏûàÎã§. \r\nL4Îäî Ïö¥ÏòÅÏ≤¥Ï†ú Ïª§ÎÑêÏóê Íµ¨ÌòÑÎêòÎ©∞ ÎÑ§Ìä∏ÏõåÌÅ¨ ÌÜµÏã†Ïùò ÌïµÏã¨ÏúºÎ°úÏÑú Îç∞Ïù¥ÌÑ∞Ïùò Ïã†Î¢∞ÏÑ±, Ï†ÑÏÜ° ÏÜçÎèÑ, Ïñ¥ÌîåÎ¶¨ÏºÄÏù¥ÏÖò ÏãùÎ≥ÑÏùÑ Îã¥ÎãπÌïúÎã§.\r\n\r\n## UDP Îç∞Ïù¥ÌÑ∞Í∑∏Îû® Íµ¨Ï°∞::datagram-structure\r\n\r\n![UDP Îç∞Ïù¥ÌÑ∞Í∑∏Îû® Íµ¨Ï°∞](/post/network/tcp-ip/transport-layer/udp-datagram-structure.png)\r\n: { \"align\": \"center\", \"max-width\": \"700px\", \"description\": \"UDP Îç∞Ïù¥ÌÑ∞Í∑∏Îû® Íµ¨Ï°∞\" }\r\n\r\n**UDP**(User Datagram Protocol)Îäî Ï†ÑÏÜ° Í≥ÑÏ∏µ ÌîÑÎ°úÌÜ†ÏΩúÎ°ú, Îç∞Ïù¥ÌÑ∞Í∑∏Îû® Î∞©ÏãùÏúºÎ°ú Îç∞Ïù¥ÌÑ∞Î•º Ï†ÑÏÜ°ÌïúÎã§.\r\n\r\nÎπÑÏó∞Í≤∞Ìòï Îç∞Ïù¥ÌÑ∞Í∑∏Îû® ÌîÑÎ°úÌÜ†ÏΩúÎ°ú Í∞ÑÎã®ÌïòÍ≥† Îπ†Î•∏ Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ°ÏùÑ ÏúÑÌïú ÌîÑÎ°úÌÜ†ÏΩúÏù¥Îã§.\r\nÏó∞Í≤∞Ïóê ÎåÄÌïú ÏÑ§Ï†ïÍ≥º TCP 3way handshake Í≥ºÏ†ïÏù¥ ÏóÜÍ∏∞ ÎïåÎ¨∏Ïóê Ïò§Î≤ÑÌó§Îìú ÏóÜÏù¥ Îπ†Î•∏ Ï†ÑÏÜ°Ïù¥ Í∞ÄÎä•ÌïòÎã§.\r\n\r\nÎïåÎ¨∏Ïóê, Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ°Ïùò Ïã†Î¢∞ÏÑ±ÏùÄ Î≥¥Ïû•ÌïòÏßÄ ÏïäÏßÄÎßå, Ïã§ÏãúÍ∞Ñ Ïä§Ìä∏Î¶¨Î∞çÏù¥ÎÇò DNS Îì±ÏóêÏÑú ÏÇ¨Ïö©ÎêúÎã§.\r\n\r\n\r\n## TCP ÏÑ∏Í∑∏Î®ºÌä∏ Íµ¨Ï°∞::segment-structure\r\n\r\n![TCP ÏÑ∏Í∑∏Î®ºÌä∏ Íµ¨Ï°∞](/post/network/tcp-ip/transport-layer/tcp-segment-structure.png)\r\n: { \"align\": \"center\", \"max-width\": \"700px\", \"description\": \"TCPÏùò ÏÑ∏Í∑∏Î®ºÌä∏ Íµ¨Ï°∞\" }\r\n\r\n**TCP**(Transmission Control Protocol)Îäî Ï†ÑÏÜ° Í≥ÑÏ∏µ ÌîÑÎ°úÌÜ†ÏΩúÎ°ú, Ïó∞Í≤∞Ìòï ÌîÑÎ°úÌÜ†ÏΩúÎ°ú Îç∞Ïù¥ÌÑ∞Î•º Ï†ÑÏÜ°ÌïúÎã§.\r\n\r\nÍ∞Å ÌïÑÎìúÎäî Îã§ÏùåÏùÑ ÏùòÎØ∏ÌïúÎã§:\r\n\r\n* **Source Port**: ÏÜ°Ïã†ÏßÄÏùò Ìè¨Ìä∏ Î≤àÌò∏\r\n* **Destination Port**: ÏàòÏã†ÏßÄÏùò Ìè¨Ìä∏ Î≤àÌò∏\r\n* **Initial Sequence Number**: TCP Ïó∞Í≤∞Ïùò Ï≤´Î≤àÏß∏ Ìå®ÌÇ∑Ïóê Ìï†ÎãπÎêú ÏãúÌÄÄÏä§ Î≤àÌò∏Î•º ÏùòÎØ∏ (SYN)\r\n* **Acknowledgment Number**: Ïó∞Í≤∞ÏãúÏóêÎäî ISN +1, Ïã§Ï†ú Îç∞Ïù¥ÌÑ∞ ÏàòÏã†ÏãúÏóêÎäî + Îç∞Ïù¥ÌÑ∞ ÌÅ¨Í∏∞ (Bytes Size)\r\n* **Data Offset**: TCP Ìó§ÎçîÏùò Í∏∏Ïù¥Î•º 4Î∞îÏù¥Ìä∏ Îã®ÏúÑÎ°ú ÌëúÌòÑÌïú Í∞í\r\n  * Ïù¥ ÌïÑÎìúÎäî Option ÌïÑÎìúÎ•º Ìè¨Ìï®Ìïú Ìó§ÎçîÏùò Í∏∏Ïù¥Î•º Í≥ÑÏÇ∞ÌïòÍ∏∞ ÏúÑÌï¥ ÏÇ¨Ïö©ÎêúÎã§. \r\n  * 32ÎπÑÌä∏ Ï≤¥Í≥ÑÏóêÏÑú 1 wordÎäî 4Î∞îÏù¥Ìä∏Ïù¥ÎØÄÎ°ú 4ÎπÑÌä∏Î°ú ÌëúÌòÑÌï† Ïàò ÏûàÎäî Í∞íÏù∏ 0000 ~ 1111ÏùÄ 0 ~ 15Î•º ÏùòÎØ∏ÌïòÍ≥† Ïù¥Ïóê *4Î•º ÌïòÏó¨ 0 ~ 60Î∞îÏù¥Ìä∏ÎùºÎäî ÏùòÎØ∏Ïù¥Îã§.\r\n  * ÌïòÏßÄÎßå TCP Ìó§ÎçîÏùò ÌïÑÏàò ÌëúÌòÑ Í∞íÏù¥ 20Î∞îÏù¥Ìä∏Ïù¥ÎØÄÎ°ú ÏµúÏÜå 20(01000) ~ ÏµúÎåÄ 60(1111)Ïù¥Îã§.\r\n*  **Reserved**: ÏòàÏïΩÎêú ÌïÑÎìúÎ°ú, ÏÇ¨Ïö©ÎêòÏßÄ ÏïäÎäîÎã§.\r\n* **Flags**: TCP Ï†úÏñ¥ÌîåÎ†àÍ∑∏Ïù¥Îã§. (Ïó¨Í∏∞ÏÑúÎäî ÌïÑÏàò ÌîåÎûòÍ∑∏Îßå Îã§Î£¨Îã§.)\r\n    * **SYN**(Synchronize Sequence Number): ÏÑ∏ÏÖò ÏÉùÏÑ±Ïãú ÏãúÌÄÄÏä§ Î≤àÌò∏ ÎèôÍ∏∞ÌôîÎ•º ÏúÑÌïú ÏÑ∏Í∑∏Î®ºÌä∏Î•º ÏùòÎØ∏ÌïúÎã§.\r\n    * **ACK**(Acknowledgment): Acknowledgment Number ÌïÑÎìúÍ∞Ä Ïú†Ìö®Ìïú Í∞íÏùÑ Í∞ÄÏßÄÍ≥† ÏûàÏùåÏùÑ ÏùòÎØ∏ÌïúÎã§.\r\n    * **FIN**(Finish): ÏÑ∏ÏÖò Ï¢ÖÎ£å ÏöîÏ≤≠Ïùò ÏÑ∏Í∑∏Î®ºÌä∏Î•º ÏùòÎØ∏ÌïúÎã§.\r\n* **Window Size**: ÏàòÏã†ÏûêÍ∞Ä ÏàòÏã†Ìï† Ïàò ÏûàÎäî Îç∞Ïù¥ÌÑ∞Ïùò ÏñëÏùÑ ÏùòÎØ∏ÌïúÎã§. (ÏàòÏã†Ï∏°, Î∞úÏã†Ï∏° Î™®Îëê Îã§ÏùåÏóê Î∞õÍ≤åÎê† ÏÑ∏Í∑∏Î®ºÌä∏Ïóê ÎåÄÌïòÏó¨ ÏûêÏã†Ïùò Î≤ÑÌçºÏÉÅÌÉúÎ•º Ìè¨Ìï®ÌïúÎã§.)\r\n* **Checksum**: TCP ÏÑ∏Í∑∏Î®ºÌä∏Ïùò Ïò§Î•ò Í≤ÄÏ∂úÏùÑ ÏúÑÌïú ÌïÑÎìúÎ°ú, ÏÑ∏Í∑∏Î®ºÌä∏Ïùò Îç∞Ïù¥ÌÑ∞Î•º Ìè¨Ìï®Ìïú Î™®Îì† ÌïÑÎìúÏùò Ï≤¥ÌÅ¨ÏÑ¨ÏùÑ Í≥ÑÏÇ∞ÌïòÏó¨ Ï†ÄÏû•ÌïúÎã§.\r\n* **Urgent Pointer**: Í∏¥Í∏â Îç∞Ïù¥ÌÑ∞Ïùò ÎßàÏßÄÎßâ Î∞îÏù¥Ìä∏Î•º Í∞ÄÎ¶¨ÌÇ§Îäî Ìè¨Ïù∏ÌÑ∞Ïù¥Îã§.\r\n\r\n\r\n## TCP 3-way Handshake::tcp-3-way-handshake\r\n\r\n`TCP`Îäî Ïó∞Í≤∞ ÏßÄÌñ•Ìòï ÌîÑÎ°úÌÜ†ÏΩúÏù¥Í∏∞ ÎïåÎ¨∏Ïóê, Ïó∞Í≤∞Ïóê ÎåÄÌïú Ïã†Î¢∞ÏÑ±ÏùÑ Î≥¥Ïû•ÌïòÍ∏∞ÏúÑÌï¥ Ìï∏ÎìúÏâêÏù¥ÌÅ¨(ÏïÖÏàò)ÎùºÎäî Í∞úÎÖêÏùÑ ÏÇ¨Ïö©ÌïúÎã§.\r\nÌï∏ÎìúÏâêÏù¥ÌÅ¨Îäî ÎßêÍ∑∏ÎåÄÎ°ú ÏÑ∏ÏÖò Ïó∞Í≤∞ÏùÑ ÌïòÍ∏∞Ï†ÑÏóê, ÏÉÅÎåÄÎ∞©Í≥ºÏùò Ïó∞Í≤∞ÏùÑ ÌôïÏù∏ÌïòÎäî Í≥ºÏ†ïÏù¥Îã§.\r\n\r\nÌï∏ÎìúÏâêÏù¥ÌÅ¨Îäî `SYN`, `SYN + ACK`, `ACK` ÏÑ∏Í∑∏Î®ºÌä∏Î•º ÌÜµÌï¥ 3Í∞ÄÏßÄÏùò Í≥ºÏ†ïÏúºÎ°ú Ïù¥Î£®Ïñ¥Ï†∏ÏÑú `3-way Handshake`ÎùºÍ≥† Î∂àÎ¶∞Îã§.\r\n\r\n### SYN::synchronize\r\n\r\n![ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ÏóêÏÑú Ïó∞Í≤∞ÏùÑ Îß∫Í∏∞ÏúÑÌï¥ SYNÏùÑ Î≥¥ÎÇ∏Îã§.](/post/network/tcp-ip/transport-layer/syn-diagram-in-tcp.png)\r\n: { \"align\": \"center\", \"max-width\": \"400px\", \"description\": \"SYN Ï†ÑÏÜ°\" }\r\n\r\nÏòàÎ•º Îì§Ïñ¥ `:58660` **ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏**ÏóêÏÑú `:8955` **ÏÑúÎ≤Ñ**Î°ú ÏÑ∏ÏÖòÏùÑ Îß∫Í∏∞ ÏúÑÌï¥ Îã§ÏùåÍ≥ºÍ∞ôÏù¥ ÏöîÏ≤≠ÏùÑ Î≥¥ÎÇ∏Îã§.\r\n\r\nÍ∏∞Î≥∏Ï†ÅÏúºÎ°ú ÏïÑÎ¨¥ Ïó∞Í≤∞ÏùÑ Îß∫ÏßÄ ÏïäÏùÄ ÏÉÅÌÉúÎäî `Closed` ÏÉÅÌÉúÏù¥Îã§. ÏÑúÎ≤ÑÎäî ÏöîÏ≤≠ÏùÑ ÏàòÏã†ÌïòÍ∏∞ÏúÑÌï¥ `Listen` ÏÉÅÌÉúÎ°ú ÎåÄÍ∏∞ÌïúÎã§. \r\nÏ†úÏùº Î®ºÏ†Ä Î∞úÏã†ÏßÄÏóêÏÑúÎäî Î™©Ï†ÅÏßÄÎ°ú ÏÑ∏ÏÖòÏùÑ Îß∫Í∏∞ÏúÑÌï¥ `SYN` ÏÑ∏Í∑∏Î®ºÌä∏Î•º Ï†ÑÏÜ°ÌïúÎã§.\r\n\r\n![WireSharkÎ°ú Ï∫°Ï≥êÎêú SYN ÏÑ∏Í∑∏Î®ºÌä∏](/post/network/tcp-ip/transport-layer/captured-segment-of-syn.png)\r\n: { \"description\": \"WireSharkÎ°ú Ï∫°Ï≥êÎêú SYN ÏÑ∏Í∑∏Î®ºÌä∏\" }\r\n\r\nÏúÑ Ïù¥ÎØ∏ÏßÄÎäî `WireShark`Î°ú Ï∫°Ï≥êÎêú `SYN` ÏÑ∏Í∑∏Î®ºÌä∏Ïù¥Îã§.\r\nÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ÏóêÏÑú ÏÑúÎ≤ÑÎ°ú `4248590219`ÎùºÎäî ÏûÑÏùòÏùò ÏãúÌÄÄÏä§ Î≤àÌò∏Î•º Í∞ÄÏßÑ `SYN` ÏÑ∏Í∑∏Î®ºÌä∏Î•º Ï†ÑÏÜ° ÌïòÎäî Î™®ÏäµÏùÑ Î≥º Ïàò ÏûàÎã§.\r\n\r\nÏù¥Îïå ÏÑúÎ≤ÑÏùò ÏÉÅÌÉúÎäî `SYN_SENT` ÏÉÅÌÉúÏù¥Îã§.\r\n\r\n### SYN + ACK::synchronize-acknowledgment\r\n\r\n![ÏÑúÎ≤ÑÏóêÏÑúÎäî Ïó∞Í≤∞ÏùÑ ÏàòÎùΩÌïòÍ∏∞ ÏúÑÌï¥ SYN+ACKÎ•º Î≥¥ÎÇ∏Îã§.](/post/network/tcp-ip/transport-layer/syn+ack-diagram-in-tcp.png)\r\n: { \"align\": \"center\", \"max-width\": \"400px\", \"description\": \"SYN + ACK Ï†ÑÏÜ°\" }\r\n\r\nÏÑúÎ≤ÑÎäî ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Î°úÎ∂ÄÌÑ∞ `SYN` ÏÑ∏Í∑∏Î®ºÌä∏Î•º Î∞õÏúºÎ©¥, ÏÑ∏ÏÖòÏùÑ Îß∫Í∏∞ÏúÑÌï¥ `SYN + ACK` ÏÑ∏Í∑∏Î®ºÌä∏Î•º Ï†ÑÏÜ°ÌïúÎã§.\r\nÏù¥Îäî Ïó∞Í≤∞ÏàòÎùΩÏùÑ ÏùòÎØ∏ÌïòÎäî ÏÑ∏Í∑∏Î®ºÌä∏Ïù¥Îã§.\r\n\r\n![WireSharkÎ°ú Ï∫°Ï≥êÎêú SYN + ACK ÏÑ∏Í∑∏Î®ºÌä∏](/post/network/tcp-ip/transport-layer/captured-segment-of-syn+ack.png)\r\n: { \"description\": \"WireSharkÎ°ú Ï∫°Ï≥êÎêú SYN + ACK ÏÑ∏Í∑∏Î®ºÌä∏\" }\r\n\r\nÏÑúÎ≤ÑÎäî Ï†ïÌôïÌïòÍ≤å `SYN`Ïùò ISN +1ÏùÑ `ACK`Î°ú Ï†ÑÏÜ°ÏùÑ ÌïúÍ≤ÉÏù¥ Î≥¥Ïù∏Îã§. \r\nÏÑúÎ≤ÑÎäî `1595116508`Ïù¥ÎùºÎäî SYNÏùÑ Î≥¥ÎÇ¥Î©∞, Ïù¥Îïå ÏÑúÎ≤ÑÏùò ÏÉÅÌÉúÎäî `SYN_RECV` ÏÉÅÌÉúÏù¥Îã§.\r\n\r\n>ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Ïùò ISNÏù∏ `4248590219`Ïóê `1`ÏùÑ ÎçîÌïú `4248590220`ÏùÑ `ACK`Î°ú Ï†ÑÏÜ°ÌïúÍ≤ÉÏùÑ ÌôïÏù∏Ìï† Ïàò ÏûàÎã§.\r\n: { \"type\": \"note\", \"icon\": \"info\" }\r\n\r\n### ACK::acknowledgment\r\n\r\n![ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ÏóêÏÑúÎäî ÏÑúÎ≤ÑÏùò ÏùëÎãµÏùÑ ÌôïÏù∏ÌïòÍ∏∞ ÏúÑÌï¥ ACKÎ•º Î≥¥ÎÇ∏Îã§.](/post/network/tcp-ip/transport-layer/ack-diagram-in-tcp.png)\r\n: { \"align\": \"center\", \"max-width\": \"400px\", \"description\": \"ACK Ï†ÑÏÜ°\" }\r\n\r\nÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Îäî SYN + ACK ÏÑ∏Í∑∏Î®ºÌä∏Î•º Î∞õÏúºÎ©¥, ÏÑ∏ÏÖòÏùÑ Îß∫Í∏∞ÏúÑÌï¥ `ACK` ÏÑ∏Í∑∏Î®ºÌä∏Î•º Ï†ÑÏÜ°ÌïúÎã§.\r\n\r\n![WireSharkÎ°ú Ï∫°Ï≥êÎêú ACK ÏÑ∏Í∑∏Î®ºÌä∏](/post/network/tcp-ip/transport-layer/captured-segment-of-ack.png)\r\n: { \"description\": \"WireSharkÎ°ú Ï∫°Ï≥êÎêú ACK ÏÑ∏Í∑∏Î®ºÌä∏\" }\r\n\r\nÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Îäî ÏÑúÎ≤ÑÏùò ISN +1ÏùÑ `ACK`Î°ú Ï†ÑÏÜ°ÌïòÎ©∞, Ïù¥Îïå ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Ïùò ÏÉÅÌÉúÎäî `ESTABLISHED` ÏÉÅÌÉúÏù¥Îã§.\r\n\r\n>ÏÑúÎ≤ÑÏùò ISNÏù∏ `1595116508`Ïóê `1`ÏùÑ ÎçîÌïú `1595116509`ÏùÑ `ACK`Î°ú Ï†ÑÏÜ°ÌïúÍ≤ÉÏùÑ ÌôïÏù∏Ìï† Ïàò ÏûàÎã§.\r\n: { \"type\": \"note\", \"icon\": \"info\" }\r\n\r\n### Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ°::data-send\r\n\r\n![ÏÑúÎ≤ÑÏôÄ ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Îäî Îç∞Ïù¥ÌÑ∞Î•º Ï†ÑÏÜ°ÌïúÎã§.](/post/network/tcp-ip/transport-layer/data-send-diagram-in-tcp.png)\r\n: { \"align\": \"center\", \"max-width\": \"400px\", \"description\": \"Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ°\" }\r\n\r\n`ACK`Î°ú ÏÑ∏ÏÖòÏù¥ Îß∫Ïñ¥ÏßÄÎäî ÏàúÍ∞ÑÎ∂ÄÌÑ∞ Îç∞Ïù¥ÌÑ∞Î•º Ï†ÑÏÜ°Ìï† Ïàò ÏûàÍ≥†, Îç∞Ïù¥ÌÑ∞Î•º Ï†ÑÏÜ°Ìï† ÎïåÎßàÎã§ `ACK`Î•º Î∞õÏïÑÏïº ÌïúÎã§.\r\nÏù¥Îäî ÏàòÏã†Ï∏°Í≥º Î∞úÏã†Ï∏° Î™®ÎëêÏóê Ìï¥ÎãπÎêòÎäî ÎÇ¥Ïö©Ïù¥Îã§.\r\n\r\n![WireSharkÎ°ú Ï∫°Ï≥êÎêú Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ° ÏÑ∏Í∑∏Î®ºÌä∏](/post/network/tcp-ip/transport-layer/captured-segment-of-data.png)\r\n: { \"description\": \"WireSharkÎ°ú Ï∫°Ï≥êÎêú Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ° ÏÑ∏Í∑∏Î®ºÌä∏\" }\r\n\r\nÏúÑ ÎÑ§ Í∞úÏùò Í∞Å ÏÑ∏Í∑∏Î®ºÌä∏Îäî ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ÏôÄ ÏÑúÎ≤ÑÍ∞Ä Îç∞Ïù¥ÌÑ∞Î•º Ï£ºÍ≥†Î∞õÎäî Í≥ºÏ†ïÏùÑ Î≥¥Ïó¨Ï§ÄÎã§.\r\n[HTTP]()Îäî `ÏöîÏ≤≠/ÏùëÎãµ` Î∞©ÏãùÏù¥Í∏∞ ÎïåÎ¨∏Ïóê ÏúÑÏ≤òÎüº ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Í∞Ä ÏöîÏ≤≠ÏùÑ Î≥¥ÎÇ¥Í≥†, ÏÑúÎ≤ÑÍ∞Ä ÏùëÎãµÏùÑ Î≥¥ÎÇ¥Îäî Î∞©ÏãùÏúºÎ°ú ÎèôÏûëÌïúÎã§.\r\n\r\nÍ∑∏Î†áÍ∏∞ ÎïåÎ¨∏Ïóê `1`Î≤àÏóêÏÑú ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Í∞Ä `GET /greeting`ÏùÑ ÏöîÏ≤† ÌñàÏùÑ Îïå `2`Î≤à ÏÑúÎ≤ÑÍ∞Ä ACKÎ•º Î≥¥ÎÇ¥Îäî Í≤ÉÏùÑ Î≥º Ïàò ÏûàÎã§.\r\nÎ∞òÎåÄÎ°ú ÏÑúÎ≤ÑÍ∞Ä `3`Î≤àÏóêÏÑú `200 OK`Î•º ÏùëÎãµÌïòÎ©¥, ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Í∞Ä `4`Î≤àÏóêÏÑú ACKÎ•º Î≥¥ÎÇ¥Îäî Í≤ÉÏùÑ ÌôïÏù∏Ìï† Ïàò ÏûàÎã§.\r\n\r\n>ÏöîÏ≤≠/ÏùëÎãµ Íµ¨Ï°∞Îäî HTTP Ïä§ÌéôÏù¥ÎØÄÎ°ú TCP Í∏∞Ï§ÄÏúºÎ°úÎßå Î¥§ÏùÑÎïåÎäî Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ°ÏóêÎåÄÌïú ÏùëÎãµÏúºÎ°ú ACKÎ•º Î≥¥ÎÇ¥Îäî Í≤ÉÏù¥Îã§.\r\n:{ \"type\": \"important\", \"icon\": \"warning-octagon\" }\r\n\r\n\r\n### FIN::finish\r\n\r\nÏó∞Í≤∞ Ï¢ÖÎ£åÎ•º ÏúÑÌïú ÌÜµÏã†Í≥ºÏ†ïÏùÄ `4-way Handshake`Î°ú Ïù¥Î£®Ïñ¥ ÏßÄÎ©∞, `FIN`, `ACK`, `FIN`, `ACK` ÏÑ∏Í∑∏Î®ºÌä∏Î•º ÌÜµÌï¥ Ï≤òÎ¶¨ÎêúÎã§.\r\n`FIN`ÏùÄ ÏÑ∏ÏÖòÏùÑ Ï¢ÖÎ£åÌïòÍ∏∞ ÏúÑÌó§ Î≥¥ÎÇ¥Îäî ÏÑ∏Í∑∏Î®ºÌä∏Ïù¥Îã§.\r\n\r\n![ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ÏôÄ ÏÑúÎ≤ÑÎäî ÏÑ∏ÏÖòÏùÑ Ï¢ÖÎ£åÌïòÍ∏∞ÏúÑÌï¥ FINÏùÑ Î≥¥ÎÇ∏Îã§.](/post/network/tcp-ip/transport-layer/fin-diagram-in-tcp.png)\r\n: { \"align\": \"center\", \"max-width\": \"400px\", \"description\": \"FIN Ï†ÑÏÜ°\" }\r\n\r\nÏúÑÏùò Ïù¥ÎØ∏ÏßÄÏôÄ Î≥¥Îäî Î≥¥ÏôÄ Í∞ôÏù¥ ÏÑ∏ÏÖòÏù¥ Ïó∞Í≤∞ Ï§ëÏù∏ ÏÉÅÌÉú(`ESTABLISHED`)ÏóêÏÑú Ïó∞Í≤∞ÏùÑ Ï¢ÖÎ£åÍ∞Ä ÌïÑÏöîÌïú Ïû•ÏπòÏóêÏÑú `FIN` ÏÑ∏Í∑∏Î®ºÌä∏Î•º Ï†ÑÏÜ°ÌïúÎã§.\r\nÏã§Ï†úÎ°úÎäî ÏÑúÎ≤ÑÏôÄ ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ Ïñ¥ÎîîÏ™ΩÏóêÏÑúÎì†ÏßÄ Î®ºÏ†Ä Ïó∞Í≤∞Ï¢ÖÎ£å ÏöîÏ≤≠ÏùÑ Ìï†Ïàò ÏûàÏßÄÎßå, Ïó¨Í∏∞ÏÑúÎäî ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Í∞Ä Î®ºÏ†Ä `FIN` ÏÑ∏Í∑∏Î®ºÌä∏Î•º Ï†ÑÏÜ°ÌïòÏòÄÎã§.\r\n\r\n1. ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ÏóêÏÑú Ïó∞Í≤∞Ï¢ÖÎ£åÎ•º ÏúÑÌï¥ ÏÑúÎ≤ÑÎ°ú `FIN` ÏÑ∏Í∑∏Î®ºÌä∏Î°ú Ï†ÑÏÜ°ÌïòÎ©∞, Ïù¥Îïå ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Ïùò ÏÉÅÌÉúÎäî `FIN_WAIT_1` ÏÉÅÌÉúÏù¥Îã§.\r\n2. ÏÑúÎ≤ÑÎäî `FIN` ÏÑ∏Í∑∏Î®ºÌä∏Î•º Î∞õÏúºÎ©¥, `ACK` ÏÑ∏Í∑∏Î®ºÌä∏Î°ú ÏùëÎãµÏùÑ Ï†ÑÏÜ°ÌïòÎ©∞, Ïù¥Îïå ÏÑúÎ≤ÑÏùò ÏÉÅÌÉúÎäî `CLOSE_WAIT` ÏÉÅÌÉúÏù¥Îã§.\r\n3. ÏÑúÎ≤ÑÍ∞Ä Ïó∞Í≤∞Ï¢ÖÎ£åÏóê ÎåÄÌïú Ï§ÄÎπÑÎ•º Î™®Îëê ÎÅùÎÇ∏ÌõÑ ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ÏóêÍ≤å `FIN` ÏÑ∏Í∑∏Î®ºÌä∏Î•º Ï†ÑÏÜ°ÌïòÎ©∞, Ïù¥Îïå ÏÑúÎ≤ÑÏùò ÏÉÅÌÉúÎäî `LAST_ACK` ÏÉÅÌÉúÏù¥Îã§.\r\n4. ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Îäî `FIN` ÏÑ∏Í∑∏Î®ºÌä∏Î•º Î∞õÏúºÎ©¥, `ACK` ÏÑ∏Í∑∏Î®ºÌä∏Î°ú ÏùëÎãµÏùÑ Ï†ÑÏÜ°ÌïòÎ©∞, Ïù¥Îïå ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Ïùò ÏÉÅÌÉúÎäî `TIME_WAIT` ÏÉÅÌÉúÏù¥Îã§.\r\n5. ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Îäî `TIME_WAIT` ÏÉÅÌÉúÏóêÏÑú `2MSL(Maximum Segment Lifetime)` ÏãúÍ∞ÑÎèôÏïà ÎåÄÍ∏∞ÌïòÍ≥†, Ïù¥ÌõÑÏóê Ïó∞Í≤∞Ïù¥ Ï¢ÖÎ£åÎêòÎ©∞, Ïù¥Îïå ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Ïùò ÏÉÅÌÉúÎäî `CLOSED` ÏÉÅÌÉúÏù¥Îã§.\r\n\r\n\r\n>TCPÎäî Ïó∞Í≤∞Ïùò Ïã†Î¢∞ÏÑ±ÏùÑ Î≥¥Ïû•ÌïòÍ∏∞ ÏúÑÌï¥ÏÑúÎäî ÎßéÏùÄ ÎÑ§Ìä∏ÏõåÌÅ¨ ÎπÑÏö©Ïù¥ ÌïÑÏöîÌïòÎã§.\r\n: { \"type\": \"important\", \"icon\": \"warning-octagon\" }\r\n"
  },
  {
    "path": "/docs/network/tcp-ip/network-layer",
    "header": {
      "layout": "post",
      "title": "ÎÑ§Ìä∏ÏõåÌÅ¨ Í≥ÑÏ∏µ (Network Layer)",
      "tags": [
        "Network",
        "Network Layer",
        "OSI",
        "OSI 7 Layer",
        "TCP/IP"
      ],
      "date": 1614599400000,
      "thumbnail": "/post/network/tcp-ip/network-layer/ip-packet-structure.png",
      "profile-image": "/post/profile/profile1.jpg",
      "current-company": "Cubic INC",
      "current-position": "SI Researcher",
      "summary": "ÎÑ§Ìä∏ÏõåÌÅ¨ Í≥ÑÏ∏µ",
      "excerpt-separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÎÑ§Ìä∏ÏõåÌÅ¨",
        "TCP/IP"
      ],
      "images": [
        {
          "src": "/post/network/tcp-ip/network-layer/ip-packet-structure.png",
          "alt": "IP Ìå®ÌÇ∑ Íµ¨Ï°∞"
        }
      ],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "ÎÑ§Ìä∏ÏõåÌÅ¨ Í≥ÑÏ∏µÏù¥ÎûÄ?::what-is-network-layer",
            "title": "ÎÑ§Ìä∏ÏõåÌÅ¨ Í≥ÑÏ∏µÏù¥ÎûÄ?",
            "fragment": "what-is-network-layer",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Ìå®ÌÇ∑ Íµ¨Ï°∞::packet-structure",
            "title": "Ìå®ÌÇ∑ Íµ¨Ï°∞",
            "fragment": "packet-structure",
            "children": []
          },
          {
            "rank": 2,
            "origin": "ÎùºÏö∞ÌåÖ::routing",
            "title": "ÎùºÏö∞ÌåÖ",
            "fragment": "routing",
            "children": []
          }
        ]
      }
    },
    "description": "ÎÑ§Ìä∏ÏõåÌÅ¨ Í≥ÑÏ∏µÏùÄ OSI 7 Layer, L3Î°ú IP Ï£ºÏÜå ÏßÄÏ†ï Î∞©ÏãùÏúºÎ°ú Îç∞Ïù¥ÌÑ∞Î•º Ï†ÑÏÜ°ÌïòÎäî Í≥ÑÏ∏µÏù¥Îã§.\r\nÏ£ºÏöî ÎèôÏûëÏúºÎ°úÎäî IP Ìå®ÌÇ∑ÏùÑ ÏÉùÏÑ±ÌïòÍ≥† Î™©Ï†ÅÏßÄÍπåÏßÄ ÎùºÏö∞ÌåÖÏùÑ Ï≤òÎ¶¨ÌïúÎã§.",
    "content": "\r\n## ÎÑ§Ìä∏ÏõåÌÅ¨ Í≥ÑÏ∏µÏù¥ÎûÄ?::what-is-network-layer\r\n\r\nÎÑ§Ìä∏ÏõåÌÅ¨ Í≥ÑÏ∏µÏùÄ OSI 7 Layer Ï§ë 3Î≤àÏß∏ Í≥ÑÏ∏µÏúºÎ°ú, Îç∞Ïù¥ÌÑ∞Î•º Ï†ÑÏÜ°ÌïòÎäî Îç∞ ÏÇ¨Ïö©ÎêòÎäî IP Ï£ºÏÜå ÏßÄÏ†ï Î∞©ÏãùÏùÑ ÏÇ¨Ïö©ÌïúÎã§.\r\n\r\nÏ£ºÏöî Í∏∞Îä•ÏúºÎ°úÎäî Ï∂úÎ∞úÏßÄÏóêÏÑú Î™©Ï†ÅÏßÄÍπåÏßÄ Îç∞Ïù¥ÌÑ∞Î•º Ï†ÑÏÜ°ÌïòÍ∏∞ ÏúÑÌïú ÏµúÏ†ÅÏùò Í≤ΩÎ°úÎ•º Í≤∞Ï†ïÌïúÎã§. \r\nIP Ï£ºÏÜåÎ•º Ïù¥Ïö©ÌïòÏó¨ ÎÖºÎ¶¨Ï†Å Ï£ºÏÜåÏßÄÏ†ï Î∞©ÏãùÏùÑ ÏÇ¨Ïö©ÌïòÎäîÎç∞, Ïù¥Îäî ÎÑ§Ìä∏ÏõåÌÅ¨ ÏÉÅÏùò Ïû•ÏπòÎ•º Í≥†Ïú†ÌïòÍ≤å ÏãùÎ≥ÑÌïúÎã§.\r\n\r\nÎÑ§Ìä∏ÏõåÌÅ¨ Í≥ÑÏ∏µÏóêÏÑúÎäî Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ°Ïãú, [Ï†ÑÏÜ°Í≥ÑÏ∏µ]()ÏúºÎ°ú Î∂ÄÌÑ∞ Ï†ÑÎã¨Î∞õÏùÄ Îç∞Ïù¥ÌÑ∞Î•º Ìå®ÌÇ∑ÏúºÎ°ú Î∂ÑÌï†ÌïúÎã§. ÎòêÌïú Îì§Ïñ¥Ïò® Ìå®ÌÇ∑ÏùÑ Ïû¨Ï°∞Î¶ΩÌïòÏó¨ ÏÉÅÏúÑ Í≥ÑÏ∏µÏúºÎ°ú Ï†ÑÎã¨ÌïúÎã§.\r\n\r\n## Ìå®ÌÇ∑ Íµ¨Ï°∞::packet-structure\r\n\r\n![IP Ìå®ÌÇ∑ Íµ¨Ï°∞](/post/network/tcp-ip/network-layer/ip-packet-structure.png)\r\n: { \"align\": \"center\", \"max-width\": \"700px\", \"description\": \"IP Ìå®ÌÇ∑ Íµ¨Ï°∞\" }\r\n\r\nIP Ìå®ÌÇ∑ÏùÄ ÌÅ¨Í≤å Ìó§ÎçîÏôÄ ÌéòÏù¥Î°úÎìúÎ°ú Íµ¨ÏÑ±ÎêòÎ©∞ IP Ìå®ÌÇ∑ÏùÄ [Îç∞Ïù¥ÌÑ∞ ÎßÅÌÅ¨ Í≥ÑÏ∏µ](/docs/network/tcp-ip/data-link-layer) ÌîÑÎ†àÏûÑÏùò ÌéòÏù¥Î°úÎìúÏù¥Îã§.\r\n\r\nÏùºÎ∞òÏ†ÅÏúºÎ°ú Ìó§ÎçîÎäî 20Î∞îÏù¥Ìä∏Ïù¥Î©∞ ÎÇòÎ®∏ÏßÄÎäî ÏòµÏÖòÍ≥º ÌéòÏù¥Î°úÎìú(ÏÑ∏Í∑∏Î®ºÌä∏)Ïù¥Îã§.\r\n\r\n* **Version**: IP Î≤ÑÏ†ÑÏùÑ ÎÇòÌÉÄÎÇ¥Î©∞ 4ÎπÑÌä∏Î°ú ÌëúÌòÑÎêúÎã§.(IPv4: 0b0100, IPv6: 0b0110)\r\n* **IHL**(**I**nternet **H**eader **L**ength): IP Ìó§Îçî Í∏∏Ïù¥Î•º ÎÇòÌÉÄÎÇ¥Î©∞ 4ÎπÑÌä∏Î°ú ÌëúÌòÑÎêúÎã§. (ÏµúÏÜå 20Î∞îÏù¥Ìä∏, ÏµúÎåÄ 60Î∞îÏù¥Ìä∏)\r\n* **DSCP**(**D**ifferentiated **S**ervices **C**ode **P**oint): Ìå®ÌÇ∑Ïùò Ïö∞ÏÑ†ÏàúÏúÑÏôÄ Ï≤òÎ¶¨Î∞©ÏãùÏùÑ ÎÇòÌÉÄÎÇ¥Î©∞, 6ÎπÑÌä∏Î°ú ÌëúÌòÑÎêúÎã§.\r\n  * 0ÏóêÏÑú 63ÍπåÏßÄÏùò Í∞íÏùÑ Í∞ÄÏßà Ïàò ÏûàÏúºÎ©∞ Í∞Å Í∞íÏùÄ ÌäπÏ†ïÌïú ÏÑúÎπÑÏä§ ÌÅ¥ÎûòÏä§Î•º ÎÇòÌÉÄÎÇ∏Îã§.\r\n* **ECN**(**E**xplicit **C**ongestion **N**otification): ÎÑ§Ìä∏ÏõåÌÅ¨Ïùò ÌòºÏû°ÏùÑ ÏïåÎ¶¨ÎäîÎç∞ ÏÇ¨Ïö©ÎêòÎ©∞, 2ÎπÑÌä∏Î°ú ÌëúÌòÑÎêúÎã§.\r\n* **Total Length**: IP Ìå®ÌÇ∑Ïùò Ï†ÑÏ≤¥ Í∏∏Ïù¥Î•º ÎÇòÌÉÄÎÇ¥Î©∞, 16ÎπÑÌä∏Î°ú ÌëúÌòÑÎêúÎã§.\r\n* **Identification**: Ìå®ÌÇ∑Ïùò ÏãùÎ≥ÑÏûêÎ°ú Ìå®ÌÇ∑ Ï°∞Í∞ÅÎì§ÏùÑ Íµ¨Î∂ÑÌïòÎäîÎç∞ ÏÇ¨Ïö©ÎêòÎ©∞, 16ÎπÑÌä∏Î°ú ÌëúÌòÑÎêúÎã§.\r\n* **Flags**: Ìå®ÌÇ∑ Ï°∞Í∞ÅÌôîÎ•º ÎÇòÌÉÄÎÇ¥ÎäîÎç∞ ÏÇ¨Ïö©ÎêòÎ©∞, 3ÎπÑÌä∏Î°ú ÌëúÌòÑÎêúÎã§.\r\n* **Fragment Offset**: Ï°∞Í∞ÅÌôîÎêú Ìå®ÌÇ∑Ïùò ÏÉÅÎåÄÏ†Å ÏúÑÏπòÎ•º ÎÇòÌÉÄÎÇ¥Î©∞, 13ÎπÑÌä∏Î°ú ÌëúÌòÑÎêúÎã§.\r\n* **Time to Live**: Ìå®ÌÇ∑Ïù¥ ÎÑ§Ìä∏ÏõåÌÅ¨ÏóêÏÑú ÏÇ¥ÏïÑÏûàÏùÑ Ïàò ÏûàÎäî ÏãúÍ∞ÑÏùÑ ÎÇòÌÉÄÎÇ¥Î©∞, 8ÎπÑÌä∏Î°ú ÌëúÌòÑÎêúÎã§.\r\n* **Protocol**: Ìå®ÌÇ∑Ïùò Ï†ÑÏÜ°Í≥ÑÏ∏µÏùò ÌîÑÎ°úÌÜ†ÏΩú(TCP:6, UDP:7)ÏùÑ ÎÇòÌÉÄÎÇ¥Î©∞, 8ÎπÑÌä∏Î°ú ÌëúÌòÑÎêúÎã§.\r\n* **Header Checksum**: Ìó§ÎçîÏùò Ïò§Î•òÎ•º Í≤ÄÏ∂úÌïòÎäîÎç∞ ÏÇ¨Ïö©ÎêòÎ©∞, 16ÎπÑÌä∏Î°ú ÌëúÌòÑÎêúÎã§.\r\n* **Source IP Address**: Ï∂úÎ∞úÏßÄ IP Ï£ºÏÜåÎ•º ÎÇòÌÉÄÎÇ¥Î©∞, 32ÎπÑÌä∏Î°ú ÌëúÌòÑÎêúÎã§.\r\n* **Destination IP Address**: Î™©Ï†ÅÏßÄ IP Ï£ºÏÜåÎ•º ÎÇòÌÉÄÎÇ¥Î©∞, 32ÎπÑÌä∏Î°ú ÌëúÌòÑÎêúÎã§.\r\n* **Options**: ÏòµÏÖò ÌïÑÎìúÎ°ú, 0Î∞îÏù¥Ìä∏ÏóêÏÑú 40Î∞îÏù¥Ìä∏ÍπåÏßÄ Í∞ÄÏßà Ïàò ÏûàÎã§.\r\n  * ÏòµÏÖòÌïÑÎìúÎäî IHL ÌïÑÎìúÏóê ÏùòÌï¥ Í∏∏Ïù¥Î•º Ïïå Ïàò ÏûàÍ∏∞ ÎñÑÎ¨∏Ïóê, PayloadÏùò ÏãúÏûëÏùÑ Ïïå Ïàò ÏûàÎã§.\r\n\r\n\r\n## ÎùºÏö∞ÌåÖ::routing\r\n\r\nÎùºÏö∞ÌåÖÏùÄ ÎÑ§Ìä∏ÏõåÌÅ¨ Í≥ÑÏ∏µÏóêÏÑú Î™©Ï†ÅÏßÄÍπåÏßÄ Îç∞Ïù¥ÌÑ∞Î•º Ï†ÑÏÜ°ÌïòÍ∏∞ ÏúÑÌïú ÏµúÏ†ÅÏùò Í≤ΩÎ°úÎ•º Í≤∞Ï†ïÌïòÎäî Í≥ºÏ†ïÏù¥Îã§.\r\nÍ∞Å L3 Í≥ÑÏ∏µÏùÄ IP Ï£ºÏÜå Í∏∞Î∞ò ÎùºÏö∞ÌåÖ ÌÖåÏù¥Î∏îÏùÑ Í∞ñÍ≥† ÏûàÍ≥†, Ïù¥Î•º Ïù¥Ïö©Ìï¥ Ìå®ÌÇ∑Ïùò Î™©Ï†ÅÏßÄÎ•º Í≤∞Ï†ïÌïúÎã§.\r\n\r\n```text::macÏùò ÎùºÏö∞ÌåÖ ÌÖåÏù¥Î∏î\r\nnetstat -nr\r\nRouting tables\r\n\r\nInternet:\r\nDestination        Gateway            Flags               Netif Expire\r\ndefault            192.168.0.1        UGScg                 en0       \r\n127                127.0.0.1          UCS                   lo0       \r\n127.0.0.1          127.0.0.1          UH                    lo0       \r\n169.254            link#12            UCS                   en0      !\r\n192.168.0          link#12            UCS                   en0      !\r\n192.168.0.1/32     link#12            UCS                   en0      !\r\n192.168.0.1        0:1d:ec:83:2b:37   UHLWIir               en0   1199\r\n192.168.0.11       32:f2:70:c7:90:20  UHLWIi                en0    943\r\n192.168.0.67/32    link#12            UCS                   en0      !\r\n192.168.0.67       f2:af:d9:77:b1:a1  UHLWI                 lo0       \r\n224.0.0/4          link#12            UmCS                  en0      !\r\n224.0.0.251        1:0:5e:0:0:fb      UHmLWI                en0       \r\n255.255.255.255/32 link#12            UCS                   en0      !\r\n```\r\n\r\n"
  },
  {
    "path": "/docs/computer-science/operating-system/system-call",
    "header": {
      "layout": "wiki",
      "date": 1614452640000,
      "title": "ÏãúÏä§ÌÖú ÏΩú (System Call)",
      "tags": [
        "Operating System",
        "System Call"
      ],
      "summary": "ÏãúÏä§ÌÖú ÏΩú",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "Ïª¥Ìì®ÌÑ∞",
        "operating-system"
      ],
      "images": [
        {
          "src": "/post/computer-science/operating-system/system-call/copy-file.png",
          "alt": "cp Î™ÖÎ†πÏúºÎ°ú ÌååÏùº Î≥µÏÇ¨"
        },
        {
          "src": "/post/computer-science/operating-system/system-call/process-of-system-call.png",
          "alt": "ÏãúÏä§ÌÖú ÏΩú Ìò∏Ï∂ú"
        }
      ],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "ÏãúÏä§ÌÖú ÏΩúÏù¥ÎûÄ?::what-is-system-call",
            "title": "ÏãúÏä§ÌÖú ÏΩúÏù¥ÎûÄ?",
            "fragment": "what-is-system-call",
            "children": []
          },
          {
            "rank": 2,
            "origin": "ÏòàÏ†ú::example",
            "title": "ÏòàÏ†ú",
            "fragment": "example",
            "children": []
          },
          {
            "rank": 2,
            "origin": "ÏãúÏä§ÌÖúÏΩúÏùò ÎèôÏûë Í≥ºÏ†ï::how-system-call-works",
            "title": "ÏãúÏä§ÌÖúÏΩúÏùò ÎèôÏûë Í≥ºÏ†ï",
            "fragment": "how-system-call-works",
            "children": [
              {
                "rank": 3,
                "origin": "APIÏôÄ ÏãúÏä§ÌÖú ÏΩú::api-and-system-call",
                "title": "APIÏôÄ ÏãúÏä§ÌÖú ÏΩú",
                "fragment": "api-and-system-call",
                "children": []
              },
              {
                "rank": 3,
                "origin": "ÏãúÏä§ÌÖúÏΩú Ïù∏ÌÑ∞ÌéòÏù¥Ïä§::system-call-interface",
                "title": "ÏãúÏä§ÌÖúÏΩú Ïù∏ÌÑ∞ÌéòÏù¥Ïä§",
                "fragment": "system-call-interface",
                "children": []
              }
            ]
          },
          {
            "rank": 2,
            "origin": "ÏãúÏä§ÌÖú ÏΩúÏùò Ïú†Ìòï::types-of-system-calls",
            "title": "ÏãúÏä§ÌÖú ÏΩúÏùò Ïú†Ìòï",
            "fragment": "types-of-system-calls",
            "children": [
              {
                "rank": 3,
                "origin": "ÌîÑÎ°úÏÑ∏Ïä§ Ï†úÏñ¥::process-control",
                "title": "ÌîÑÎ°úÏÑ∏Ïä§ Ï†úÏñ¥",
                "fragment": "process-control",
                "children": []
              },
              {
                "rank": 3,
                "origin": "ÌååÏùº Ï°∞Ïûë::file-manipulation",
                "title": "ÌååÏùº Ï°∞Ïûë",
                "fragment": "file-manipulation",
                "children": []
              },
              {
                "rank": 3,
                "origin": "Ïû•Ïπò Í¥ÄÎ¶¨::device-management",
                "title": "Ïû•Ïπò Í¥ÄÎ¶¨",
                "fragment": "device-management",
                "children": []
              },
              {
                "rank": 3,
                "origin": "Ï†ïÎ≥¥ Ïú†ÏßÄ::information-maintenance",
                "title": "Ï†ïÎ≥¥ Ïú†ÏßÄ",
                "fragment": "information-maintenance",
                "children": []
              },
              {
                "rank": 3,
                "origin": "ÌÜµÏã†Í≥º Î≥¥Ìò∏::communication-and-protection",
                "title": "ÌÜµÏã†Í≥º Î≥¥Ìò∏",
                "fragment": "communication-and-protection",
                "children": []
              }
            ]
          }
        ]
      }
    },
    "description": "",
    "content": "\r\n## ÏãúÏä§ÌÖú ÏΩúÏù¥ÎûÄ?::what-is-system-call\r\n\r\nÏãúÏä§ÌÖú ÏΩú(System Call)ÏùÄ ÏÇ¨Ïö©Ïûê ÌîÑÎ°úÍ∑∏Îû® ÎòêÎäî ÏãúÏä§ÌÖú ÌîÑÎ°úÍ∑∏Îû®Ïù¥ ÏãúÏä§ÌÖú ÏûêÏõêÏùÑ ÏÇ¨Ïö©ÌïòÍ∏∞ ÏúÑÌï¥ Ïª§ÎÑêÏóêÍ≤å ÏöîÏ≤≠ÌïòÎäî Ïù∏ÌÑ∞ÌéòÏù¥Ïä§Ïù¥Îã§.\r\nÏö∞Î¶¨Í∞Ä ÌùîÌûà ÏïåÍ≥†ÏûàÎäî ÌëúÏ§Ä ÎùºÏù¥Î∏åÎü¨Î¶¨(`CÏùò stdio.h: fopen(), fread(), fwrite()`)ÎèÑ ÎÇ¥Î∂ÄÏ†ÅÏúºÎ°úÎäî ÏãúÏä§ÌÖú ÏΩú(`CÎ°ú Íµ¨ÌòÑ`)ÏùÑ Ìò∏Ï∂úÌïòÏó¨ Ïª§ÎÑêÏóêÍ≤å ÏöîÏ≤≠ÌïúÎã§.\r\n\r\nÏãúÏä§ÌÖú ÏûêÏõêÏùÄ Ïª§ÎÑêÏóêÏÑú Í¥ÄÎ¶¨ÌïòÍ∏∞ ÎïåÎ¨∏Ïóê Ïô∏Î∂ÄÏóêÏÑú ÏßÅÏ†ëÏ†ÅÏúºÎ°ú ÏÇ¨Ïö©Ìï† Ïàò ÏóÜÏñ¥, Ïù¥Î•º ÏúÑÌï¥ Ïª§ÎÑêÏóêÏÑú Ï†úÍ≥µÌïòÎäî Ïù∏ÌÑ∞ÌéòÏù¥Ïä§Î•º ÏÇ¨Ïö©ÌïòÏó¨ ÏãúÏä§ÌÖú ÏΩúÏùÑ Ìò∏Ï∂úÌï† Ïàò ÏûàÎã§.\r\nÏù¥Îü¨Ìïú Ìò∏Ï∂úÏùÄ ÏùºÎ∞òÏ†ÅÏúºÎ°ú C/C++Î°ú ÏûëÏÑ±Îêú Ìï®Ïàò ÌòïÌÉúÎ°ú Ï†úÍ≥µÎêúÎã§.\r\n\r\n---\r\n\r\n## ÏòàÏ†ú::example\r\n\r\n::text-wrapping\r\n\r\n![cp Î™ÖÎ†πÏúºÎ°ú ÌååÏùº Î≥µÏÇ¨](/post/computer-science/operating-system/system-call/copy-file.png)\r\n\r\nÏòàÎ•º Îì§Ïñ¥ Ìïú ÌååÏùºÎ°úÎ∂ÄÌÑ∞ Îç∞Ïù¥ÌÑ∞Î•º ÏùΩÏñ¥ÏÑú Îã§Î•∏ ÌååÏùºÎ°ú Î≥µÏÇ¨ÌïòÎäî Í∞ÑÎã®Ìïú ÌîÑÎ°úÍ∑∏Îû®ÏùÑ ÏûëÏÑ±ÌïúÎã§ Í∞ÄÏ†ïÌï¥ Î≥¥Ïûê.\r\n\r\n`UNIX`Ïùò CP Î™ÖÎ†π(`cp in.txt out.txt`)ÏùÄ ÎëêÍ∞úÏùò ÌååÏùº Ïù¥Î¶ÑÏùÑ Ïù∏ÏûêÎ°ú Î∞õÏïÑÏÑú Ï≤´Î≤àÏß∏ ÌååÏùºÎ°úÎ∂ÄÌÑ∞ Îç∞Ïù¥ÌÑ∞Î•º ÏùΩÏñ¥ÏÑú ÎëêÎ≤àÏß∏ ÌååÏùºÎ°ú Îç∞Ïù¥ÌÑ∞Î•º Ïì¥Îã§.\r\nÎ®ºÏ†Ä Ïù∏ÏûêÎ•º Î∞õÍ≥† ÎÇòÎ©¥ ÌååÏùºÏùÑ Ïó¥Í≥†, Ï∂úÎ†•ÌååÏùºÏùÑ ÏÉùÏÑ±ÌïòÏó¨ Ï∂úÎ†• ÌååÏùºÎèÑ Ïó∞Îã§. Í∞ÅÍ∞ÅÏùò Ïó∞ÏÇ∞ÏùÄ Î≥ÑÍ∞úÏùò ÏãúÏä§ÌÖúÏΩú(`open()`)ÏùÑ Ìò∏Ï∂úÌïúÎã§.\r\n\r\nÌïòÏßÄÎßå Ïù¥ÏôÄ Í∞ôÏùÄ Í≤ΩÏö∞Îäî ÌååÏùºÏùÑ Î≥µÏÇ¨ÌïòÍ∏∞Ï†Ñ Î™®Îì† Í≤ÄÏ¶ùÍ≥ºÏ†ïÏù¥ ÎÅùÎÇ¨ÏùÑ ÎïåÏùò ÏÉÅÌô©Ïù¥Îã§.\r\nÎßåÏïΩ ÏûÖÎ†• ÌååÏùº(`in.txt`)Ïù¥ Ï°¥Ïû¨ÌïòÏßÄ ÏïäÍ±∞ÎÇò, Í∑∏ ÌååÏùºÏóê ÎåÄÌïú Ï†ëÍ∑ºÏù¥ Í∏àÏßÄÎêú Í≤ΩÏö∞ ÌîÑÎ°úÍ∑∏Îû®ÏùÄ ÏóêÎü¨ Î©îÏÑ∏ÏßÄÎ•º Ï∂úÎ†•ÌïòÍ≥† ÎπÑÏ†ïÏÇ≠Ï†ÅÏúºÎ°ú Ï¢ÖÎ£å(Îòê Îã§Î•∏ ÏãúÏä§ÌÖúÏΩú)Î•º Ìï¥ÏïºÌïúÎã§.\r\n\r\nÏûÖÎ†• ÌååÏùºÏóê ÎåÄÌïú Í≤ÄÏ¶ùÏù¥ ÏôÑÎ£åÎêòÏñ¥ÎèÑ, Ï∂úÎ†•ÌååÏùºÏùÑ ÏÉùÏÑ±Ìï† Îïå, ÎèôÏùºÌïú Ïù¥Î¶ÑÏùÑ Í∞ÄÏßÑ ÌååÏùºÏù¥ Ïù¥ÎØ∏ Ï°¥Ïû¨ÌïòÎ©¥ Í∏∞Ï°¥ ÌååÏùºÏùÑ ÏÇ≠Ï†ú(delete)/Î≥ÄÍ≤Ω(write) ÎòêÎäî ÏÉàÎ°úÏö¥ ÌååÏùº Ïù¥Î¶ÑÏúºÎ°ú ÏÉùÏÑ±(create)Ìï† Ïàò ÏûàÎã§.\r\nÏù¥Îü∞ Î≥µÏÇ¨ÎùºÎäî Í≥ºÏ†ïÏóêÏÑúÎèÑ Îã§ÏñëÌïú ÏãúÏä§ÌÖúÏΩúÏù¥ Ïó¨Îü¨Î≤à Ìò∏Ï∂úÎêúÎã§.\r\n\r\n::{ \"align\": \"right\" }\r\n\r\n**Ïó∞ÏÜçÎêú ÏãúÏä§ÌÖú ÏΩúÏùò Ïòà**\r\n\r\n1. ÏûÖÎ†•ÌååÏùº Ïù¥Î¶Ñ ÌöçÎìù\r\n    1. ÌôîÎ©¥Ïóê ÌîÑÎ°¨ÌîÑÌä∏ Ï∂úÎ†•\r\n    2. ÏûÖÎ†•ÌååÏùº Î∞õÏïÑÎì§ÏûÑ\r\n2. Ï∂úÎ†•ÌååÏùº Ïù¥Î¶Ñ ÌöçÎìù\r\n    1. ÌôîÎ©¥Ïóê ÌîÑÎ°¨ÌîÑÌä∏ Ï∂úÎ†•\r\n    2. Ï∂úÎ†•ÌååÏùº Î∞õÏïÑÎì§ÏûÑ\r\n3. ÏûÖÎ†•ÌååÏùº Ïó¥Í∏∞\r\n    1. ÌååÏùºÏù¥ Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏùÑ Í≤ΩÏö∞, ÎπÑÏ†ïÏÉÅÏ†ÅÏúºÎ°ú Ï¢ÖÎ£å\r\n4. Ï∂úÎ†•ÌååÏùº ÏÉùÏÑ±\r\n    1. ÌååÏùºÏù¥ Ï°¥Ïû¨Ìï† Í≤ΩÏö∞, ÎπÑÏ†ïÏÉÅÏ†ÅÏúºÎ°ú Ï¢ÖÎ£å\r\n5. Î£®ÌîÑ (ÏùΩÍ∏∞Í∞Ä Ïã§Ìå®Ìï† ÎïåÍπåÏßÄ Î∞òÎ≥µ)\r\n    1. ÏûÖÎ†•ÌååÏùºÎ°ú Î∂ÄÌÑ∞ ÏùΩÏñ¥ Îì§ÏûÑ\r\n    2. Ï∂úÎ†•ÌååÏùºÏóê Ïì∞Í∏∞\r\n6. ÏûÖÎ†•ÌååÏùº Îã´Í∏∞\r\n7. Ï∂úÎ†•ÌååÏùº Îã´Í∏∞\r\n8. ÌôîÎ©¥Ïóê ÏôÑÎ£å Î©îÏÑ∏ÏßÄ Ï∂úÎ†•\r\n9. Ï¢ÖÎ£å\r\n\r\n## ÏãúÏä§ÌÖúÏΩúÏùò ÎèôÏûë Í≥ºÏ†ï::how-system-call-works\r\n\r\nÏãúÏä§ÌÖú ÏΩúÏùÄ Ïã§Ï†ú ÎèôÏûëÏù¥ ÏïÑÎãàÎã§. ÏãúÏä§ÌÖú ÏΩúÏùÄ Ïª§ÎÑê ÏàòÏ§ÄÏóêÏÑú Ï†úÍ≥µÌïòÎäî Ïù∏ÌÑ∞ÌéòÏù¥Ïä§Ïù¥Î©∞, Í∑∏ Íµ¨ÌòÑÏùÄ Ïª§ÎÑêÌï®ÏàòÎ°ú Ïù¥Î£®Ïñ¥ÏßÄÍ≤å ÎêúÎã§.\r\nÎî∞ÎùºÏÑú ÏãúÏä§ÌÖú ÏΩúÏùÄ cÎ°ú ÎßåÎì§Ïñ¥ÏßÄÎçî ÎùºÎèÑ Ïª§ÎÑêÎÇ¥ÏóêÏÑú Ï†úÏñ¥ÌïòÎ†§Îäî ÏûêÏõêÏóê Îî∞Îùº [Ïñ¥ÏÖàÎ∏îÎ¶¨Ïñ¥]() ÎòêÎäî cÎ°ú ÏûëÏÑ±Îêú Ìï®ÏàòÎ°ú Íµ¨ÌòÑÎêúÎã§.\r\n\r\ncÏñ∏Ïñ¥Î°ú ÏûëÏÑ±Îêú ÌëúÏ§Ä ÎùºÏù¥Î∏åÎü¨Î¶¨(`libc`)Ïóê ÎûòÌïë APIÍ∞Ä Ï†úÍ≥µÎêòÎäîÎç∞, Ïù¥Îäî ÏïÑÎûòÏôÄ Í∞ôÎã§:\r\n\r\n1. glibc: GNU C ÎùºÏù¥Î∏åÎü¨Î¶¨\r\n    * [Ï†ÄÏû•ÏÜå](https://sourceware.org/git/glibc.git)\r\n    * read()Ìï®Ïàò Ï†ïÏùò: [`/include/unistd.h`](https://sourceware.org/git/?p=glibc.git;a=blob;f=include/unistd.h)\r\n    * read()Ìï®Ïàò Íµ¨ÌòÑ: [`/sysdeps/unix/sysv/linux/read.c`](https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/read.c)\r\n    * ÌäπÏßï\r\n        * Linux Î∞∞Ìè¨ÌåêÏùò ÌëúÏ§ÄÎùºÏù¥Î∏åÎü¨Î¶¨\r\n        * Í∞ÄÏû• Í¥ëÎ≤îÏúÑÌïòÍ≤å ÏÇ¨Ïö©Îê®\r\n        * Í∞ÄÏû• ÏôÑÏ†ÑÌïú POSIX Íµ¨ÌòÑ\r\n    * ÏÇ¨Ïö©ÎêòÎäî ÏãúÏä§ÌÖú: Ubuntu, Fedora, CentOS, Debian Îì±\r\n2. musl: musl libc\r\n    * [Ï†ÄÏû•ÏÜå](https://git.musl-libc.org/cgit/musl)\r\n    * read()Ìï®Ïàò Ï†ïÏùò: [`/include/unistd.h`](https://git.musl-libc.org/cgit/musl/tree/include/unistd.h)\r\n    * read()Ìï®Ïàò Íµ¨ÌòÑ: [`/src/unistd/read.c`](https://git.musl-libc.org/cgit/musl/tree/src/unistd/read.c)\r\n    * ÌäπÏßï\r\n        * Í≤ΩÎüâÌôîÎêú CÌëúÏ§Ä ÎùºÏù¥Î∏åÎü¨Î¶¨\r\n        * ÏûÑÎ≤†ÎîîÎìú ÏãúÏä§ÌÖúÍ≥º ÏûëÏùÄ Linux Î∞∞Ìè¨ÌåêÏóê ÏµúÏ†ÅÌôî\r\n        * ÏµúÏÜåÌïúÏùò Î¶¨ÏÜåÏä§ ÏÇ¨Ïö©\r\n    * ÏÇ¨Ïö©ÎêòÎäî ÏãúÏä§ÌÖú: Alpine Linux, Void Linux Îì±\r\n4. BSD libc\r\n    * [Ï†ÄÏû•ÏÜå](https://github.com/freebsd/freebsd-src)\r\n    * read()Ìï®Ïàò Ï†ïÏùò: [`/include/unistd.h`](https://github.com/freebsd/freebsd-src/blob/main/include/unistd.h)\r\n    * read()Ìï®Ïàò Íµ¨ÌòÑ: [`/lib/libc/sys/read.c`](https://github.com/freebsd/freebsd-src/blob/main/lib/libc/sys/read.c)\r\n    * ÌäπÏßï\r\n        * BSD(Berkeley Software Distribution) Í≥ÑÏó¥Ïùò ÌëúÏ§Ä ÎùºÏù¥Î∏åÎü¨Î¶¨\r\n        * POSIX ÌëúÏ§Ä Ï§ÄÏàò\r\n        * Unix ÏãúÏä§ÌÖú Í≥†Ïú†Ïùò ÌôïÏû• Í∏∞Îä• Ï†úÍ≥µ\r\n    * ÏÇ¨Ïö©ÎêòÎäî ÏãúÏä§ÌÖú: FreeBSD, NetBSD, OpenBSD, MacOS/iOS Îì±\r\n\r\n```c\r\n#include <unistd.h> //unix standard\r\n\r\nssize_t read(int fd, void *buf, size_t count) {\r\n    return syscall_cp(SYS_read, fd, buf, count);\r\n}\r\n```\r\n\r\nÏù¥ ÏΩîÎìúÎäî `musl libc`Ïùò read ÏãúÏä§ÌÖúÏΩú ÎûòÌïë APIÏù¥Îã§. Í∞Å ÏãúÍ∑∏ÎãàÏ≤òÎäî Îã§ÏùåÏùÑ ÏùòÎØ∏ÌïúÎã§:\r\n\r\n1. `fd`: ÏùΩÏúºÎ†§Îäî ÌååÏùº ÎîîÏä§ÌÅ¨Î¶ΩÌÑ∞\r\n2. `buf`: Îç∞Ïù¥ÌÑ∞Î•º ÏùΩÏñ¥Îì§Ïùº Î≤ÑÌçº\r\n3. `count`: Î≤ÑÌçºÎ°ú ÏùΩÏñ¥ Îì§Ïùº Ïàò ÏûàÎäî ÏµúÎåÄ Î∞îÏù¥Ìä∏ Ïàò\r\n\r\nÏùΩÍ∏∞Í∞Ä ÏÑ±Í≥µÌïú Í≤ΩÏö∞ ÏùΩÏñ¥ Îì§Ïù∏ Î∞îÏù¥Ìä∏ Ïàò(ssize_t)Î•º Î∞òÌôòÌïòÍ≥†, Ïò§Î•òÍ∞Ä Î∞úÏÉùÌïú Í≤ΩÏö∞ `-1`ÏùÑ Î∞òÌôòÌïúÎã§.\r\n\r\n> Unix/Linux ÏãúÏä§ÌÖúÏóêÏÑúÎäî `man read` Î™ÖÎ†πÏñ¥Î°ú man(manual) ÌéòÏù¥ÏßÄÏóêÏÑú ÏãúÏä§ÌÖúÏùò Î™®Îì† Î™ÖÎ†πÏñ¥, Ìï®Ïàò, ÏãúÏä§ÌÖúÏΩú Îì±Ïóê ÎåÄÌïú Ï†ïÎ≥¥Î•º ÌôïÏù∏Ìï† Ïàò ÏûàÎã§.\r\n:{ \"type\": \"tip\", \"icon\": \"lightbulb\" }\r\n\r\n![ÏãúÏä§ÌÖú ÏΩú Ìò∏Ï∂ú](/post/computer-science/operating-system/system-call/process-of-system-call.png)\r\n:{ \"max-width\": \"400px\", \"align\": \"center\", \"description\": \"ÏãúÏä§ÌÖú ÏΩú Ìò∏Ï∂ú Í≥ºÏ†ï\" }\r\n\r\nÏãúÏä§ÌÖú ÏΩú Ìò∏Ï∂úÏùÄ Îã§ÏùåÍ≥º Í∞ôÏù¥ Ï≤òÎ¶¨ÎêúÎã§.\r\n\r\n1. ÏÇ¨Ïö©Ïûê ÌîÑÎ°úÍ∑∏Îû®ÏùÄ ÏãúÏä§ÌÖú ÏΩúÏùÑ Ìò∏Ï∂úÌïúÎã§. (syscall_cp()): Ïö¥ÏòÅÏ≤¥Ï†ú ÏóêÏÑú\r\n   Ï†úÍ≥µÌïòÎäî [Wrapping API](https://git.musl-libc.org/cgit/musl/tree/src/unistd/read.c) Ìò∏Ï∂ú\r\n2. ÏãúÏä§ÌÖú ÏΩúÏù∏ÌÑ∞ÌéòÏù¥Ïä§Îäî ÏÇ¨Ïö©Ïûê ÏöîÏ≤≠ÏùÑ Í≤ÄÏ¶ù(Ïù∏Ïûê Ïú†Ìö®ÏÑ±, Í∂åÌïú, Î¶¨ÏÜåÏä§ Í∞ÄÏö©ÏÑ± Îì±)ÌïòÍ≥† Ïª§ÎÑêÏóê Ï†ÑÎã¨ÌïúÎã§.\r\n3. Ïª§ÎÑêÎ°ú Ï†ÑÎã¨ Ï†Ñ CPUÎäî Ïª§ÎÑêÎ™®ÎìúÎ°ú Ï†ÑÌôòÎêòÍ≥†, ÏÇ¨Ïö©Ïûê\r\n   ÏöîÏ≤≠ÏùÑ [ÏãúÏä§ÌÖú ÏΩú ÌÖåÏù¥Î∏î](https://github.com/torvalds/linux/blob/v5.6/arch/x86/entry/syscalls/syscall_64.tbl)ÏùÑ ÌÜµÌï¥ ÏãúÏä§ÌÖú ÏΩú Î≤àÌò∏Î°ú\r\n   Îß§ÌïëÌïúÎã§.\r\n4. CPUÎäî Ïã§ÌñâÏ†Ñ Ïª§ÎÑêÎ™®ÎìúÎ°ú Ï†ÑÌôòÌïòÏó¨ Ïª§ÎÑê Ìï®ÏàòÎ•º Ïã§ÌñâÌïòÍ≥†, ÏÇ¨Ïö©ÏûêÎ™®ÎìúÎ°ú Ï†ÑÌôòÌïòÍ≥† Î∞òÌôòÍ∞íÏùÄ ÏÇ¨Ïö©Ïûê ÌîÑÎ°úÍ∑∏Îû®ÏúºÎ°ú Ï†ÑÎã¨ÌïòÎ©∞, Ï†úÏñ¥ÎòêÌïú ÏÇ¨Ïö©Ïûê ÌîÑÎ°úÍ∑∏Îû®ÏúºÎ°ú ÎÑòÏñ¥Í∞ÑÎã§.\r\n\r\n### APIÏôÄ ÏãúÏä§ÌÖú ÏΩú::api-and-system-call\r\n\r\nÏïûÏÑú ÏãúÏä§ÌÖú ÏΩú Ïù∏ÌÑ∞ÌéòÏù¥Ïä§Îäî ÏÇ¨Ïö©ÏûêÏùò ÏöîÏ≤≠ÏùÑ Í≤ÄÏ¶ùÌïòÍ≥† Ïª§ÎÑê Ìï®ÏàòÎ°ú Ï†ÑÎã¨ÌïòÎäî Ïó≠Ìï†ÏùÑ ÌïúÎã§Í≥† ÌñàÎã§.\r\nÍ∑∏Î†áÎã§Î©¥ Ïñ¥Îñ§ Î∞©ÏãùÏúºÎ°ú ÏÇ¨Ïö©ÏûêÏùò ÏöîÏ≤≠ÏùÑ Í≤ÄÏ¶ùÌïòÎäî Í≤ÉÏùºÍπå?\r\n\r\nÏãúÏä§ÌÖúÏóêÏÑú Ï†úÍ≥µÎêòÎäî Wrapping APIÎäî ÏÇ¨Ïö©Ïûê Í≥µÍ∞ÑÏóêÏÑú `libc`Î°ú Ï†úÍ≥µÎêúÎã§.  \r\nÏÇ¨Ïö©ÏûêÍ∞Ä `read()` API(**glibc** Í∏∞Ï§Ä)Î•º ÏÇ¨Ïö©ÌïòÎäî ÏãúÏ†êÎ∂ÄÌÑ∞ ÏïåÏïÑÎ≥¥Ïûê.\r\n\r\n```c::Wrapping API Ìò∏Ï∂ú\r\n// include/unistd.h\r\nextern ssize_t __libc_read (int __fd, void *__buf, size_t __n);\r\n\r\n// sysdeps/unix/sysv/linux/read.c\r\nssize_t __libc_read (int fd, void *buf, size_t nbytes) {\r\n  return SYSCALL_CANCEL (read, fd, buf, nbytes);\r\n}\r\n\r\nlibc_hidden_def (__libc_read)\r\n\r\nlibc_hidden_def (__read)\r\nweak_alias (__libc_read, __read)\r\nlibc_hidden_def (read)\r\nweak_alias (__libc_read, read) //Ïô∏Î∂ÄÏóêÏÑúÎäî read()Î°ú Ìò∏Ï∂úÌïòÎ©∞ aliasÎ°ú __libc_read()Î•º Ìò∏Ï∂úÌïúÎã§.\r\n```\r\n\r\n`__libc_read()` Ìï®ÏàòÎäî ÏãúÏä§ÌÖúÏΩú Ïù∏ÌÑ∞ÌéòÏù¥Ïä§(`SYSCALL_CANCEL`)Î°ú read ÏãúÏä§ÌÖúÏΩúÏùÑ Ìò∏Ï∂úÌïúÎã§.\r\nÏù¥ ÎÇ¥Î∂ÄÏ†ÅÏúºÎ°ú Ïù∏ÏûêÍ∞íÏùÑ Ïñ¥ÎñªÍ≤å Ï†ÑÎã¨ÌïòÍ≥† ÎÇ¥Î∂ÄÏ†ÅÏù∏ ÏãúÏä§ÌÖúÏΩú Îß§ÌÅ¨Î°úÎ•º Ïñ¥ÎñªÍ≤å ÏÑ†ÌÉùÌïòÎäîÏßÄ Ïïå Ïàò ÏûàÎã§.\r\n\r\n::code-group\r\n\r\n```c::1. SYSCALL_CANCEL Îß§ÌÅ¨Î°ú\r\n//1. Ïó∞Í≤∞Îêú Ïù∏ÌÑ∞ÌéòÏù¥Ïä§ Îß§ÌÅ¨Î°úÎäî ÎÇ¥Î∂ÄÏ†ÅÏúºÎ°ú INLINE_SYSCALL_CALL() Îß§ÌÅ¨Î°úÎ•º Ìò∏Ï∂úÌïúÎã§. \r\n# define SYSCALL_CANCEL(...) \\\r\n  __SYSCALL_CANCEL_CALL (__VA_ARGS__) //(__VA_ARGS__Îäî Í∞ÄÎ≥ÄÏù∏Ïûê)\r\n```\r\n\r\n```c::2. __SYSCALL_CANCEL_CALL Îß§ÌÅ¨Î°ú\r\n#define __SYSCALL_CANCEL_CALL(...) \\\r\n  __SYSCALL_CANCEL_DISP (__SYSCALL_CANCEL, __VA_ARGS__)\r\n```\r\n\r\n```c::3. __INLINE_SYSCALL_DISP Îß§ÌÅ¨Î°ú\r\n//ÏïûÏÑú Ï†ÑÎã¨Ìïú __SYSCALL_CANCEL Í∞íÏùÑ bÎ°ú Î∞õÎäîÎã§.\r\n//ÏöîÏ≤≠ ÎãπÏãú Îß§Í∞úÎ≥ÄÏàò (read, fd, buf, nbytes)Î•º __SYSCALL_CANCEL_NARGS()Î°ú Ï†ÑÎã¨ÌïúÎã§. \r\n#define __SYSCALL_CANCEL_DISP(b,...) \\\r\n  __SYSCALL_CANCEL_CONCAT (b,__SYSCALL_CANCEL_NARGS(__VA_ARGS__))(__VA_ARGS__)\r\n//Ïó¨Í∏∞ÏÑú Ï§ëÏöîÌïúÏ†êÏùÄ __SYSCALL_CANCEL_CONCATÏùÄ Îß§ÌÅ¨Î°ú Ïù¥Î¶ÑÏùÑ ÎßåÎìúÎäî Îß§ÌÅ¨Î°úÏù¥Îã§.\r\n//Ï¶â b: __SYSCALL_CANCEL ÏôÄ __SYSCALL_CANCEL_NARGS(__VA_ARGS__)Ïùò Í≤∞Í≥ºÍ∞íÏùÑ Ïù∏ÏûêÎ°ú Î∞õÎäîÎã§.\r\n\r\n//ÏÉÅÏúÑÏóê ÏûëÏÑ±Îêú Îß§ÌÅ¨Î°ú Ïù¥Î¶Ñ ÏÉùÏÑ± Îß§ÌÅ¨Î°ú \r\n#define __SYSCALL_CANCEL_CONCAT_X(a,b)     a##b //aÏôÄ bÎ•º Î∂ôÏù∏Îã§.\r\n#define __SYSCALL_CANCEL_CONCAT(a,b)       __SYSCALL_CANCEL_CONCAT_X (a, b)\r\n```\r\n\r\n```c::4. __SYSCALL_CANCEL_NARGS Îß§ÌÅ¨Î°ú\r\n//NARGSÎäî \"Number of Arguments\"Ïùò ÏïΩÏûêÎ°ú, Í∞ÄÎ≥ÄÏù∏ÏûêÏùò Í∞úÏàòÎ•º Î∞òÌôòÌïúÎã§.\r\n#define __SYSCALL_CANCEL_NARGS_X(a,b,c,d,e,f,g,h,n,...) n\r\n#define __SYSCALL_CANCEL_NARGS(...) \\\r\n  __SYSCALL_CANCEL_NARGS_X (__VA_ARGS__,7,6,5,4,3,2,1,0,)\r\n//ÏúÑÏ≤òÎüº ÎêòÎ©¥ __SYSCALL_CANCEL_NARGS(read, fd, buf, nbytes)Îäî 3Î•º Î∞òÌôòÌïúÎã§.\r\n//a=read, b=fd, c=buf, d=nbytes, e=7, f=6, g=5, h=4, n=3\r\n```\r\n\r\n```c::5. Ìò∏Ï∂úÌï† Îß§ÌÅ¨Î°ú ÏÑ†ÌÉù\r\n#define __SYSCALL_CANCEL_DISP(b,...) \\\r\n  __SYSCALL_CANCEL_CONCAT (b,__SYSCALL_CANCEL_NARGS(__VA_ARGS__))(__VA_ARGS__)\r\n//Ìï¥Îãπ ÏΩîÎìúÏùò Îß§ÌÅ¨Î°úÎ•º ÏπòÌôòÌïòÎ©¥ ÏïÑÎûòÏ≤òÎüº ÎêúÎã§.\r\n//b: __SYSCALL_CANCEL\r\n//__SYSCALL_CANCEL_NARGS(read, fd, buf, nbytes): 3\r\n//__SYSCALL_CONCAT(__SYSCALL_CANCEL, 3)(read, fd, buf, nbytes): __SYSCALL_CANCEL3(read, fd, buf, nbytes)\r\n\r\n//Í≤∞Í≥ºÏ†ÅÏúºÎ°ú __SYSCALL_CANCEL3(read, fd, buf, nbytes) Îß§ÌÅ¨Î°úÎ•º Ìò∏Ï∂úÌïúÎã§.\r\n```\r\n\r\n::\r\n\r\nÏúÑÏóêÏÑúÎäî `__SYSCALL_CANCEL3(read, fd, buf, nbytes)` Îß§ÌÅ¨Î°úÎ•º Ìò∏Ï∂úÌïòÏòÄÎã§.\r\nÏù¥Ï†ú Ìï¥Îãπ Îß§ÌÅ¨Î°úÎ•º ÏãúÏ†êÏúºÎ°ú Ïñ¥ÎñªÍ≤å Ïù¥Ïñ¥ÏßÄÎäîÏßÄ ÏïåÏïÑ Î≥¥Ïûê\r\n\r\n::code-group\r\n\r\n```c::1. __SYSCALL_CANCEL3 Îß§ÌÅ¨Î°ú Ìò∏Ï∂ú\r\n/* sysdeps\\unix\\sysv\\linux\\mips\\mips64\\n32\\syscall_types.h */\r\ntypedef long long int __syscall_arg_t;\r\n//Syscall Safe Convert\t\t    \r\n#define __SSC(__x) ((__syscall_arg_t) (__typeof__ ((__x) - (__x))) (__x))\r\n\r\n/* sysdeps\\unix\\sysdep.h */\r\n# define __SYSCALL_CANCEL7_ARG_DEF\r\n# define __SYSCALL_CANCEL7_ARCH_ARG_DEF\r\n# define __SYSCALL_CANCEL7_ARG\r\n\r\nlong int __syscall_cancel (__syscall_arg_t arg1, __syscall_arg_t arg2,\r\n\t\t\t   __syscall_arg_t arg3, __syscall_arg_t arg4,\r\n\t\t\t   __syscall_arg_t arg5, __syscall_arg_t arg6,\r\n\t\t\t   __SYSCALL_CANCEL7_ARG_DEF\r\n\t\t\t   __syscall_arg_t nr) attribute_hidden;\r\n\t\t\t   \r\n#define __SYSCALL_CANCEL3(name, a1, a2, a3) \\\r\n  __syscall_cancel (__SSC (a1), __SSC (a2), __SSC (a3), 0, 0, 0,\t\\\r\n\t\t    __SYSCALL_CANCEL7_ARG __NR_##name)\r\n```\r\n\r\n```c::2. ntpl/cancellation.c Ìï®Ïàò Ìò∏Ï∂ú\r\n//Native POSIX Thread Library (NPTL)Ïùò Ï∑®ÏÜå Í∏∞Îä•ÏùÑ ÏúÑÌïú ÏΩîÎìú\r\nlong int\r\n__syscall_cancel (__syscall_arg_t a1, __syscall_arg_t a2,\r\n\t\t  __syscall_arg_t a3, __syscall_arg_t a4,\r\n\t\t  __syscall_arg_t a5, __syscall_arg_t a6,\r\n\t\t  __SYSCALL_CANCEL7_ARG_DEF __syscall_arg_t nr)\r\n{\r\n  //__internal_syscall_cancel(fd, buf, nbytes, 0, 0, 0, 0)\r\n  int r = __internal_syscall_cancel (a1, a2, a3, a4, a5, a6,\r\n\t\t\t\t     __SYSCALL_CANCEL7_ARG nr);\r\n  return __glibc_unlikely (INTERNAL_SYSCALL_ERROR_P (r))\r\n\t ? SYSCALL_ERROR_LABEL (INTERNAL_SYSCALL_ERRNO (r))\r\n\t : r;\r\n}\r\n```\r\n\r\n```c::3. ntpl/cancellation.c Ìï®Ïàò Ìò∏Ï∂ú2\r\n/* Called by the INTERNAL_SYSCALL_CANCEL macro, check for cancellation and\r\n   returns the syscall value or its negative error code.  */\r\nlong int\r\n__internal_syscall_cancel (__syscall_arg_t a1, __syscall_arg_t a2,\r\n\t\t\t   __syscall_arg_t a3, __syscall_arg_t a4,\r\n\t\t\t   __syscall_arg_t a5, __syscall_arg_t a6,\r\n\t\t\t   __SYSCALL_CANCEL7_ARG_DEF\r\n\t\t\t   __syscall_arg_t nr)\r\n{\r\n  long int result;\r\n  struct pthread *pd = THREAD_SELF;\r\n  \r\n  ...\r\n\r\n  /* Call the arch-specific entry points that contains the globals markers\r\n     to be checked by SIGCANCEL handler.  */\r\n  //__syscall_cancel_arch(&pd->cancelhandling, __NR_read, fd, buf, nbytes, 0, 0, 0)\r\n  result = __syscall_cancel_arch (&pd->cancelhandling, nr, a1, a2, a3, a4, a5,\r\n\t\t\t          a6 __SYSCALL_CANCEL7_ARCH_ARG7);\r\n\t\t\t          \r\n  ch = atomic_load_relaxed (&pd->cancelhandling);\r\n  \r\n  if (result == -EINTR && cancel_enabled_and_canceled (ch))\r\n    __syscall_do_cancel ();\r\n\r\n  return result;\r\n}\r\n```\r\n\r\n```asm::4. Ïã§Ï†ú ÏãúÏä§ÌÖúÏΩú Ìò∏Ï∂ú\r\n#include <sysdep.h>\r\n#include <descr-const.h>\r\n/* sysdeps/unix/sysv/linux/mips/x86_64/syscall_cancel.S */\r\n/* long int [rax] __syscall_cancel_arch (volatile int *cancelhandling [%rdi],\r\n\t\t\t\t\t __syscall_arg_t nr   [%rsi],\r\n\t\t\t\t\t __syscall_arg_t arg1 [%rdx],\r\n\t\t\t\t\t __syscall_arg_t arg2 [%rcx],\r\n\t\t\t\t\t __syscall_arg_t arg3 [%r8],\r\n\t\t\t\t\t __syscall_arg_t arg4 [%r9],\r\n\t\t\t\t\t __syscall_arg_t arg5 [SP+8],\r\n\t\t\t\t\t __syscall_arg_t arg6 [SP+16])  */\r\n\r\nENTRY (__syscall_cancel_arch)\r\n\t.globl __syscall_cancel_arch_start\r\n__syscall_cancel_arch_start:\r\n\r\n\t/* if (*cancelhandling & CANCELED_BITMASK)\r\n\t     __syscall_do_cancel()  */\r\n\tmov    (%rdi),%eax\r\n\ttestb  $TCB_CANCELED_BITMASK, (%rdi)\r\n\tjne    __syscall_do_cancel\r\n\r\n\t/* Issue a 6 argument syscall, the nr [%rax] being the syscall\r\n\t   number.  */\r\n\tmov    %rdi,%r11\r\n\tmov    %rsi,%rax\r\n\tmov    %rdx,%rdi\r\n\tmov    %rcx,%rsi\r\n\tmov    %r8,%rdx\r\n\tmov    %r9,%r10\r\n\tmov    8(%rsp),%r8\r\n\tmov    16(%rsp),%r9\r\n\tmov    %r11,8(%rsp)\r\n\tsyscall\r\n\r\n\t.globl __syscall_cancel_arch_end\r\n__syscall_cancel_arch_end:\r\n\tret\r\nEND (__syscall_cancel_arch)\r\n```\r\n\r\n::\r\n\r\n`__syscall_cancel` Ìï®ÏàòÏóêÏÑú `__NR_read`Í∞íÏù¥ 0ÏúºÎ°ú Î≥ÄÍ≤ΩÎêòÎäî\r\nÏù¥Ïú†Îäî [x86_64 ÏãúÏä§ÌÖúÏΩú Îß§ÌÅ¨Î°ú](https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/x86_64/64/arch-syscall.h;h=dfc10d0c7e8a8f1e3cfc81c00096bec4d016b3f0;hb=HEAD)\r\nÏóê 0ÏúºÎ°ú Ï†ïÏùò ÎêòÏñ¥ÏûàÍ∏∞ ÎïåÎ¨∏Ïù¥Îã§.  \r\nÏã§Ï†ú ÏãúÏä§ÌÖúÏΩú Ìò∏Ï∂úÏΩîÎìúÎ•º Î≥¥Î©¥ [Î†àÏßÄÏä§ÌÑ∞](/wiki/register)Ïóê Ïù∏ÏûêÍ∞íÎì§ÏùÑ ÏÑ∏ÌåÖÌïòÍ≥† ÎßàÏßÄÎßâÏóê `syscall` Î™ÖÎ†πÏñ¥Î°ú ÏãúÏä§ÌÖú ÏΩúÏùÑ Ìò∏Ï∂úÌïúÎã§.\r\nÏúÑ ÎÇ¥Ïö©ÏúºÎ°ú Wrapping API(`glibc`)ÏóêÏÑúÎäî Ìò∏Ï∂úÌï† ÏãúÏä§ÌÖúÏΩú Ï†ïÎ≥¥Î•º Ï∞æÍ≥† Ïù∏ÏûêÍ∞íÏùÑ Î†àÏßÄÏä§ÌÑ∞Ïóê Ï†ÅÏû¨ÌïòÏó¨ ÏãúÏä§ÌÖúÏΩúÏùÑ Ìò∏Ï∂úÌïòÎäî Í≥ºÏ†ïÏùÑ Ïïå Ïàò ÏûàÎã§.\r\n\r\nÎòêÌïú `syscall` Î™ÖÎ†πÏùÄ ÌïòÎìúÏõ®Ïñ¥ Î†àÎ≤®ÏóêÏÑú Ïª§ÎÑêÎ™®ÎìúÎ°ú Ï†ÑÌôòÌïòÎ©∞, Ïª§ÎÑêÏùò ÏãúÏä§ÌÖúÏΩúÏùÑ Ìò∏Ï∂úÌïòÎäî Ïó≠Ìï†ÏùÑ ÌïúÎã§.\r\n\r\n### ÏãúÏä§ÌÖúÏΩú Ïù∏ÌÑ∞ÌéòÏù¥Ïä§::system-call-interface\r\n\r\nÏïûÏÑú `glibc`ÏóêÏÑú Í∞Å Ïù∏Ïûê Í∞íÏùÑ Î†àÏßÄÏä§ÌÑ∞Ïóê Ï†ÄÏû•ÌïòÍ≥†, `syscall` Î™ÖÎ†πÏñ¥Î°ú ÏãúÏä§ÌÖúÏΩúÏùÑ Ìò∏Ï∂úÌïòÍ∏∞ ÍπåÏßÄ Í≥ºÏ†ïÏùÑ Î≥¥ÏïòÏóàÎã§.\r\nÏù¥Ï†ú Ïª§ÎÑêÎ™®ÎìúÎ°ú Î≥ÄÍ≤ΩÎêú ÌõÑ Ï†úÏñ¥Îäî Ïª§ÎÑêÎ°ú ÎÑòÏñ¥Í∞ÄÍ≤å ÎêòÎäîÎç∞, Ïù¥Îïå ÏãúÏä§ÌÖúÏΩú Ïù∏ÌÑ∞ÌéòÏù¥Ïä§Î•º ÌÜµÌï¥ ÏãúÏä§ÌÖúÏΩúÏùÑ Ìò∏Ï∂úÌïúÎã§.\r\n\r\n`x86` ÏïÑÌÇ§ÌÖçÏ≥ê 64ÎπÑÌä∏ Î¶¨ÎàÖÏä§Ïùò ÏãúÏä§ÌÖúÏΩú Ïù∏ÌÑ∞ÌéòÏù¥Ïä§Ïùò ÏãúÏûëÏ†êÏùÄ `arch/x86/entry/entry_64.S` ÌååÏùºÏù¥Îã§.\r\nÏñ¥ÏÖàÎ∏îÎü¨Î°ú ÏûëÏÑ±Îêú Ïù¥ÏΩîÎìúÎäî ÏïÑÎûòÏùò ÏàúÏÑúÎ°ú Ïã§ÌñâÎêúÎã§.\r\n\r\n::code-group\r\n\r\n```asm::1. entry_SYSCALL_64 Î†àÏù¥Î∏î\r\nSYM_CODE_START(entry_SYSCALL_64)\r\n\tUNWIND_HINT_ENTRY\r\n\tENDBR\r\n\r\n\tswapgs\r\n\t/* tss.sp2 is scratch space. */\r\n\tmovq\t%rsp, PER_CPU_VAR(cpu_tss_rw + TSS_sp2)\r\n\tSWITCH_TO_KERNEL_CR3 scratch_reg=%rsp\r\n\tmovq\tPER_CPU_VAR(pcpu_hot + X86_top_of_stack), %rsp\r\n```\r\n\r\n```asm::2. entry_SYSCALL_64_safe_stack Î†àÏù¥Î∏î\r\nSYM_INNER_LABEL(entry_SYSCALL_64_safe_stack, SYM_L_GLOBAL)\r\n\tANNOTATE_NOENDBR\r\n\r\n\t/* Construct struct pt_regs on stack */\r\n\tpushq\t$__USER_DS\t\t\t\t/* pt_regs->ss */\r\n\tpushq\tPER_CPU_VAR(cpu_tss_rw + TSS_sp2)\t/* pt_regs->sp */\r\n\tpushq\t%r11\t\t\t\t\t/* pt_regs->flags */\r\n\tpushq\t$__USER_CS\t\t\t\t/* pt_regs->cs */\r\n\tpushq\t%rcx\t\t\t\t\t/* pt_regs->ip */\r\n```\r\n\r\n```asm::3. entry_SYSCALL_64_after_hwframe Î†àÏù¥Î∏î\r\nSYM_INNER_LABEL(entry_SYSCALL_64_after_hwframe, SYM_L_GLOBAL)\r\n\tpushq\t%rax\t\t\t\t\t/* pt_regs->orig_ax */\r\n\r\n\tPUSH_AND_CLEAR_REGS rax=$-ENOSYS\r\n\r\n\t/* IRQs are off. */\r\n\tmovq\t%rsp, %rdi\r\n\t/* Sign extend the lower 32bit as syscall numbers are treated as int */\r\n\t//ÏãúÏä§ÌÖúÏΩú Î≤àÌò∏ Í≤ÄÏ¶ù\r\n\tmovslq\t%eax, %rsi\r\n\r\n\t/* clobbers %rax, make sure it is after saving the syscall nr */\r\n\tIBRS_ENTER\r\n\tUNTRAIN_RET\r\n\tCLEAR_BRANCH_HISTORY\r\n\t\r\n\t...\r\n    //ÏãúÏä§ÌÖúÏΩú ÎûòÌçº Ìï®Ïàò Ìò∏Ï∂ú\r\n\tcall\tdo_syscall_64\t\t/* returns with IRQs disabled */\r\n\r\n    ..\r\n```\r\n\r\n::\r\n\r\nÏó¨Í∏∞ÍπåÏßÄÎäî ÏãúÏä§ÌÖúÏΩú Ïù∏ÌÑ∞ÌéòÏù¥Ïä§ÏóêÏÑú Í≤ÄÏ¶ùÌïòÎäî ÏΩîÎìúÏòÄÍ≥†, Ïù¥Ï†ú ÏãúÏä§ÌÖúÏΩú Î†àÌçºÏóêÏÑú Ïã§Ï†ú ÏãúÏä§ÌÖúÏΩúÏùÑ Ìò∏Ï∂úÌïòÎäî ÏΩîÎìúÎ•º ÏÇ¥Ìé¥Î≥¥Ïûê.\r\n\r\n::code-group\r\n\r\n```c::common.c\r\nstatic __always_inline bool do_syscall_x64(struct pt_regs *regs, int nr)\r\n{\r\n\t/*\r\n\t * Convert negative numbers to very high and thus out of range\r\n\t * numbers for comparisons.\r\n\t */\r\n\tunsigned int unr = nr;\r\n\r\n\tif (likely(unr < NR_syscalls)) {\r\n\t\tunr = array_index_nospec(unr, NR_syscalls);\r\n\t\tregs->ax = x64_sys_call(regs, unr);\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n```\r\n\r\n```c::syscall_64.c\r\n#define __SYSCALL(nr, sym) __x64_##sym,\r\nconst sys_call_ptr_t sys_call_table[] = {\r\n#include <asm/syscalls_64.h>\r\n};\r\n#undef  __SYSCALL\r\n\r\n#define __SYSCALL(nr, sym) case nr: return __x64_##sym(regs);\r\nlong x64_sys_call(const struct pt_regs *regs, unsigned int nr)\r\n{\r\n\tswitch (nr) {\r\n\t#include <asm/syscalls_64.h>\r\n\tdefault: return __x64_sys_ni_syscall(regs);\r\n\t}\r\n};\r\n```\r\n\r\n::\r\n\r\nÏãúÏä§ÌÖúÏΩú ÎûòÌçºÏù¥Îã§. Ïã§Ï†úÎ°ú ÏãúÏä§ÌÖúÏΩúÏùÑ Îß§ÌïëÌïòÎäî ÏΩîÎìúÎäî ÎπåÎìú ÌÉÄÏûÑÏóê ÎèôÏûëÏúºÎ°ú ÎßåÎì§Ïñ¥ÏßÑÎã§.\r\n[`Makefile`](https://github.com/torvalds/linux/blob/v5.6/arch/x86/entry/syscalls/Makefile)ÏóêÎäî ÏãúÏä§ÌÖúÏΩú ÌÖåÏù¥Î∏îÏóê ÎåÄÌï¥ ÏãúÏä§ÌÖúÏΩúÎ°ú Ïó∞Í≤∞ÌïòÎäî ÏΩîÎìúÎ•º\r\nÏÉùÏÑ±ÌïòÎäî ÏΩîÎìúÍ∞Ä ÏûàÎã§.\r\n[ÏãúÏä§ÌÖú ÏΩú ÌÖåÏù¥Î∏î](https://github.com/torvalds/linux/blob/v5.6/arch/x86/entry/syscalls/syscall_64.tbl)ÏóêÎèÑ ÏïÑÎûòÏôÄ Í∞ôÏù¥ ÎÇòÏôÄÏûàÎã§.\r\n\r\n```text::syscall_64.tbl\r\n\r\n# The __x64_sys_*() stubs are created on-the-fly for sys_*() system calls\r\n#\r\n# The abi is \"common\", \"64\" or \"x32\" for this file.\r\n#\r\n0\tcommon\tread\t\t\tsys_read\r\n1\tcommon\twrite\t\t\tsys_write\r\n2\tcommon\topen\t\t\tsys_open\r\n...\r\n```\r\n\r\nÏ¶â ÏúÑÏóêÏÑú Ìò∏Ï∂úÌïú `__x64_sys_ni_syscall()` Ìï®ÏàòÎäî Ï†ÑÎã¨ÌïòÎäî ÏãúÏä§ÌÖú ÏΩú Î≤àÌò∏Î°ú ÏãúÏä§ÌÖúÏΩúÏùÑ Ï∞æÎäîÎã§.\r\nÏãúÏä§ÌÖúÏΩú Ìï®ÏàòÏù¥Î¶ÑÏùÄ `__x64_sys_*`Î°ú ÏãúÏûëÌïòÎäîÎç∞, Ïù¥Îäî ÎπåÎìúÌÉÄÏûÑÏóê ÏÉùÏÑ±ÎêòÎäî ÏΩîÎìúÏù¥Îã§. ÏùΩÍ∏∞Î•º ÏòàÎ°ú Îì§Î©¥ `__x64_sys_read()` Ìï®ÏàòÎ•º Ìò∏Ï∂úÌïúÎã§.\r\n\r\n`__x64_sys_read()` Ìï®ÏàòÎäî Ïã§Ï†úÎ°ú Ï†ïÏùòÎêòÏñ¥ ÏûàÏßÄÎäî ÏïäÏßÄÎßå Ïª¥ÌååÏùºÌÉÄÏûÑÏóê Îß§ÌÅ¨Î°úÎ•º ÌÜµÌï¥ `SYSCALL_DEFINE3(read, ...)`ÏúºÎ°ú ÌôïÏû•ÎêúÎã§.\r\nÍ≤∞Í≥ºÏ†ÅÏúºÎ°ú ÏïÑÎûòÏùò ÏΩîÎìúÎ•º Ìò∏Ï∂úÌïòÍ≤åÎêúÎã§.\r\n\r\n::code-group\r\n\r\n```c::SYSCALL_DEFINE3 Ìï®Ïàò\r\nSYSCALL_DEFINE3(read, unsigned int, fd, char __user *, buf, size_t, count)\r\n{\r\n\treturn ksys_read(fd, buf, count);\r\n}\r\n```\r\n\r\n```c::ksys_read Ìï®Ïàò\r\nssize_t ksys_read(unsigned int fd, char __user *buf, size_t count)\r\n{\r\n\tCLASS(fd_pos, f)(fd);\r\n\tssize_t ret = -EBADF;\r\n\r\n\tif (!fd_empty(f)) {\r\n\t\tloff_t pos, *ppos = file_ppos(fd_file(f));\r\n\t\tif (ppos) {\r\n\t\t\tpos = *ppos;\r\n\t\t\tppos = &pos;\r\n\t\t}\r\n\t\tret = vfs_read(fd_file(f), buf, count, ppos);\r\n\t\tif (ret >= 0 && ppos)\r\n\t\t\tfd_file(f)->f_pos = pos;\r\n\t}\r\n\treturn ret;\r\n}\r\n```\r\n\r\n::\r\n\r\nÏó¨Í∏∞ÍπåÏßÄÍ∞Ä Ïª§ÎÑêÏΩîÎìúÍ≥† `ksys_read` Ïª§ÎÑê Ìï®Ïàò ÎÇ¥Î∂ÄÏóêÏÑú ÌååÏùºÏùÑ ÏùΩÎäî Ïã§Ï†ú Î°úÏßÅÏùÑ ÏàòÌñâÌïúÎã§.\r\nÏª§ÎÑêÌï®ÏàòÏùò Í≤∞Í≥ºÎäî ÏãúÏä§ÌÖúÏΩú Ïù∏ÌÑ∞ÌéòÏù¥Ïä§Î•º ÌÜµÌï¥ Îã§Ïãú **ÏÇ¨Ïö©Ïûê ÌîÑÎ°úÍ∑∏Îû®ÏúºÎ°ú Ï†ÑÎã¨**ÎêúÎã§.\r\n\r\n\r\n---\r\n\r\n\r\n## ÏãúÏä§ÌÖú ÏΩúÏùò Ïú†Ìòï::types-of-system-calls\r\n\r\nÏãúÏä§ÌÖúÏΩúÏùÄ Îã§ÏÑØÍ∞ÄÏßÄ Ï§ëÏöîÌïú Ïú†ÌòïÏúºÎ°ú ÎÇòÎàå Ïàò ÏûàÎã§:\r\n\r\n1. ÌîÑÎ°úÏÑ∏Ïä§ Ï†úÏñ¥\r\n2. ÌååÏùº Ï°∞Ïûë\r\n3. Ïû•Ïπò Í¥ÄÎ¶¨\r\n4. Ï†ïÎ≥¥ Ïú†ÏßÄ\r\n5. ÌÜµÏã†Í≥º Î≥¥Ìò∏\r\n\r\n### ÌîÑÎ°úÏÑ∏Ïä§ Ï†úÏñ¥::process-control\r\n\r\n* ÏÉùÏÑ±(fork), Ï§ëÏßÄ(abort), Ï¢ÖÎ£å(exit)\r\n* Ï†ÅÏû¨(load), Ïã§Ìñâ(execute)\r\n* ÌîÑÎ°úÏÑ∏Ïä§ ÏÜçÏÑ±(attributes) Ï°∞Ìöå, Î≥ÄÍ≤Ω\r\n* ÏãúÍ∞Ñ ÎåÄÍ∏∞\r\n* Ïù¥Î≤§Ìä∏ ÎåÄÍ∏∞(wait event), ÏïåÎ¶º(signal event)\r\n* Î©îÎ™®Î¶¨ Ìï†Îãπ Î∞è ÏûêÏú†Ìôî\r\n\r\n### ÌååÏùº Ï°∞Ïûë::file-manipulation\r\n\r\n* ÌååÏùº ÏÉùÏÑ±(create file), ÏÇ≠Ï†ú(delete file)\r\n* Ïó¥Í∏∞(open), Îã´Í∏∞(close)\r\n* ÏùΩÍ∏∞, Ïì∞Í∏∞, ÏúÑÏπò Î≥ÄÍ≤Ω(reposition)\r\n* ÌååÏùº ÏÜçÏÑ± Ï°∞Ìöå, Î≥ÄÍ≤Ω\r\n\r\n### Ïû•Ïπò Í¥ÄÎ¶¨::device-management\r\n\r\n* Ïû•Ïπò ÏöîÏ≤≠(request devices), Ìï¥Ï†ú(release devices)\r\n* ÏùΩÍ∏∞, Ïì∞Í∏∞, ÏúÑÏπò Î≥ÄÍ≤Ω(reposition)\r\n* Ïû•Ïπò ÏÜçÏÑ±(attributes) Ï°∞Ìöå, Î≥ÄÍ≤Ω\r\n* Ïû•ÏπòÏùò ÎÖºÎ¶¨Ï†Å Î∂ÄÏ∞©(attach), Î∂ÑÎ¶¨(detach)\r\n\r\n### Ï†ïÎ≥¥ Ïú†ÏßÄ::information-maintenance\r\n\r\n* ÏãúÍ∞Ñ, ÎÇ†Ïßú Ï°∞Ìöå, Î≥ÄÍ≤Ω\r\n* ÏãúÏä§ÌÖú Îç∞Ïù¥ÌÑ∞ Ï°∞Ìöå, Î≥ÄÍ≤Ω\r\n* ÌîÑÎ°úÏÑ∏Ïä§, ÌååÏùº, Ïû•ÏπòÏùò ÏÜçÏÑ±(attribute) Ï°∞Ìöå, Î≥ÄÍ≤Ω\r\n\r\n### ÌÜµÏã†Í≥º Î≥¥Ìò∏::communication-and-protection\r\n* ÌÜµÏã† Ïó∞Í≤∞ ÏÉùÏÑ±, Ï†úÍ±∞\r\n* Î©îÏÑ∏ÏßÄ ÏÜ°Ïã†, ÏàòÏã†\r\n* ÏÉÅÌÉú Ï†ïÎ≥¥ Ï†ÑÎã¨\r\n* ÏõêÍ≤© Ïû•ÏπòÏùò Î∂ÄÏ∞©(attach), Î∂ÑÎ¶¨(detach)\r\n* ÌååÏùº Í∂åÌïú Ï°∞Ìöå, Î≥ÄÍ≤Ω\r\n"
  },
  {
    "path": "/docs/computer-science/computer-structure/register",
    "header": {
      "layout": "wiki",
      "date": 1613481240000,
      "title": "Î†àÏßÄÏä§ÌÑ∞ (Register)",
      "tags": [
        "Hardware",
        "CPU",
        "Register"
      ],
      "summary": "Î†àÏßÄÏä§ÌÑ∞",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "Ïª¥Ìì®ÌÑ∞",
        "ÌïòÎìúÏõ®Ïñ¥"
      ],
      "images": [],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "ÏÑ∏Í∑∏Î®ºÌä∏ Î†àÏßÄÏä§ÌÑ∞ (Segment Register)",
            "title": "ÏÑ∏Í∑∏Î®ºÌä∏ Î†àÏßÄÏä§ÌÑ∞ (Segment Register)",
            "fragment": "root-0",
            "children": []
          }
        ]
      }
    },
    "description": "",
    "content": "\r\n## ÏÑ∏Í∑∏Î®ºÌä∏ Î†àÏßÄÏä§ÌÑ∞ (Segment Register)\r\n\r\nÏÑ∏Í∑∏Î®ºÌä∏ Î†àÏßÄÏä§ÌÑ∞Îäî Î©îÎ™®Î¶¨ Ï£ºÏÜåÎ•º ÎÖºÎ¶¨Ï†Å Îã®ÏúÑÎ°ú ÎÇòÎàÑÏñ¥ Í¥ÄÎ¶¨ÌïòÍ∏∞ ÏúÑÌïú Î†àÏßÄÏä§ÌÑ∞Ïù¥Îã§.\r\nÍ∞Å Íµ¨Ïó≠Ïùò **ÏãúÏûëÏ†ê**ÏùÑ Í∞ÄÎ¶¨ÌÇ§Îäî Ï£ºÏÜåÏù¥Î©∞, Î™®Îëê 16ÎπÑÌä∏Î°ú Íµ¨ÏÑ±ÎêòÏñ¥ÏûàÎã§:\r\n\r\n* CS (Code Segment): ÏΩîÎìú ÏòÅÏó≠\r\n* DS (Data Segment): Îç∞Ïù¥ÌÑ∞ ÏòÅÏó≠\r\n* SS (Stack Segment): Ïä§ÌÉù ÏòÅÏó≠\r\n* ES (Extra Segment): Î≥¥Ï°∞ ÏòÅÏó≠\r\n* FS: Ï∂îÍ∞Ä Ï†ÅÏù∏ Î≥¥Ï°∞ÏòÅÏó≠ 1\r\n* GS: Ï∂îÍ∞Ä Ï†ÅÏù∏ Î≥¥Ï°∞ÏòÅÏó≠ 2\r\n\r\n`FS`ÏôÄ `GS`Îäî Î©îÎ™®Î¶¨ ÏÑ∏Í∑∏Î®ºÌä∏Ïùò Ï∂îÍ∞ÄÏ†ÅÏù∏ ÏòÅÏó≠ÏùÑ ÏúÑÌï¥ `i386` ÌîÑÎ°úÏÑ∏ÏÑúÏóêÏÑú ÎèÑÏûÖÎêòÏóàÏßÄÎßå, 64ÎπÑÌä∏ LinuxÏóêÏÑúÎäî [Î©îÎ™®Î¶¨ ÌéòÏù¥Ïßï]() Í∏∞Î≤ïÏù¥ Ï∂îÍ∞ÄÎêòÎ©¥ÏÑú,\r\n`FS`ÏôÄ `GS` Î†àÏßÄÏä§ÌÑ∞Îäî ÎçîÏù¥ÏÉÅ ÏÑ∏Í∑∏Î®ºÌä∏Ïóê ÏÇ¨Ïö©ÎêòÏßÄÏïäÍ≥†, thread-local storage (TLS)ÎòêÎäî per-CPUÎ•º ÏúÑÌï¥ ÏÇ¨Ïö©ÎêúÎã§.\r\n\r\n**TLS (Thread Local Storage)ÏôÄ per-CPU**\r\n\r\n| Ïö©ÎèÑ      | Ï†ÅÏö©Î≤îÏúÑ              | ÏÇ¨Ïö©Ï≤ò                           | Ïòà                          |\r\n|---------|-------------------|-------------------------------|----------------------------|\r\n| TLS     | Ïä§Î†àÎìúÎ≥ÑÎ°ú Í≥†Ïú†Ìïú Îç∞Ïù¥ÌÑ∞Î•º Ï†ÄÏû• | ÏÇ¨Ïö©Ïûê Í≥µÍ∞ÑÏóêÏÑú Ïä§Î†àÎìúÍ∏∞Î∞ò Ïñ¥ÌîåÎ¶¨ÏºÄÏù¥ÏÖòÏù¥ÎÇò ÎùºÏù¥Î∏åÎü¨Î¶¨ | Ïì∞Î†àÎìúÎßàÎã§ ÎèÖÎ¶ΩÏ†ÅÏù∏ Ï†ÑÏó≠ Î≥ÄÏàò ÏÇ¨Ïö©        |\r\n| per-CPU | CPUÎ≥ÑÎ°ú Í≥†Ïú†Ìïú Îç∞Ïù¥ÌÑ∞Î•º Ï†ÄÏû• | Ïö¥ÏòÅÏ≤¥Ï†ú Ïª§ÎÑê ÏàòÏ§Ä                    | CPUÎ≥Ñ ÌÜµÍ≥Ñ, Ïª§ÎÑê Îç∞Ïù¥ÌÑ∞Íµ¨Ï°∞, Î¶¨ÏÜåÏä§ ÏÇ¨Ïö©Îüâ |\r\n\r\n\r\n(ÏûëÏÑ±Ï§ë)\r\n"
  },
  {
    "path": "/docs/network/tcp-ip/data-link-layer",
    "header": {
      "layout": "post",
      "title": "Îç∞Ïù¥ÌÑ∞ ÎßÅÌÅ¨ Í≥ÑÏ∏µ (Data Link Layer)",
      "tags": [
        "Network",
        "Data Link Layer",
        "OSI",
        "OSI 7 Layer"
      ],
      "date": 1612531320000,
      "thumbnail": "/post/network/tcp-ip/data-link-layer/network-interface-card.png",
      "profile-image": "/post/profile/profile1.jpg",
      "current-company": "Cubic INC",
      "current-position": "SI Researcher",
      "summary": "Îç∞Ïù¥ÌÑ∞ ÎßÅÌÅ¨ Í≥ÑÏ∏µ",
      "excerpt-separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÎÑ§Ìä∏ÏõåÌÅ¨",
        "TCP/IP"
      ],
      "images": [
        {
          "src": "/post/network/tcp-ip/data-link-layer/network-interface-card.png",
          "alt": "NIC"
        }
      ],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "Îç∞Ïù¥ÌÑ∞ ÎßÅÌÅ¨ Í≥ÑÏ∏µÏù¥ÎûÄ?::what-is-data-link-layer",
            "title": "Îç∞Ïù¥ÌÑ∞ ÎßÅÌÅ¨ Í≥ÑÏ∏µÏù¥ÎûÄ?",
            "fragment": "what-is-data-link-layer",
            "children": []
          },
          {
            "rank": 2,
            "origin": "NIC::network-interface-card",
            "title": "NIC",
            "fragment": "network-interface-card",
            "children": []
          },
          {
            "rank": 2,
            "origin": "ÌîÑÎ†àÏûÑ Íµ¨Ï°∞::frame-structure",
            "title": "ÌîÑÎ†àÏûÑ Íµ¨Ï°∞",
            "fragment": "frame-structure",
            "children": []
          }
        ]
      }
    },
    "description": "Îç∞Ïù¥ÌÑ∞ ÎßÅÌÅ¨Îäî Î¨ºÎ¶¨Í≥ÑÏ∏µ ÏÉÅÏúÑÏóê ÏûàÍ≥†, ÎÑ§Ìä∏ÏõåÌÅ¨ ÌîÑÎ°úÌÜ†ÏΩú Í¥ÄÏ†êÏóêÏÑú Í∞ÄÏû• Í∏∞Î≥∏Ïù¥ ÎêòÎäî Í≥ÑÏ∏µÏù¥Îã§.\r\nÎç∞Ïù¥ÌÑ∞Îäî \"ÌîÑÎ†àÏûÑ\"ÏúºÎ°ú Îã§Î£®Î©∞ MAC Ï£ºÏÜå Ï≤¥Í≥ÑÎ•º ÏÇ¨Ïö©ÌïòÏó¨ ÌÜµÏã†ÌïúÎã§.",
    "content": "\r\n## Îç∞Ïù¥ÌÑ∞ ÎßÅÌÅ¨ Í≥ÑÏ∏µÏù¥ÎûÄ?::what-is-data-link-layer\r\n\r\n**Îç∞Ïù¥ÌÑ∞ ÎßÅÌÅ¨ Í≥ÑÏ∏µ**ÏùÄ OSI 7 Í≥ÑÏ∏µ Ï§ë Îëê Î≤àÏß∏ Í≥ÑÏ∏µÏúºÎ°ú, [Î¨ºÎ¶¨ Í≥ÑÏ∏µ](/docs/network/tcp-ip/physical-layer)Ïóê Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ°ÏùÑ ÏßÄÏãúÌï† Ïàò ÏûàÎã§.\r\nÌùîÌûà **L2**(Layer 2)ÎùºÍ≥†ÎèÑ Î∂àÎ¶¨Î©∞ L2ÏóêÏÑúÎäî MAC Ï£ºÏÜåÎ•º Í∏∞Î∞òÏúºÎ°ú Ï£ºÏÜåÏßÄÏ†ïÏùÑ ÏÇ¨Ïö©ÌïúÎã§.  \r\n\r\nL2Îäî ÌîÑÎ†àÏûÑ Îã®ÏúÑÏùò Îç∞Ïù¥ÌÑ∞Î•º Ï†ÑÏÜ°ÌïòÎ©∞, Ïã†Î¢∞ÏÑ± ÏûàÎäî Ï†ÑÏÜ°ÏùÑ Î≥¥Ïû•ÌïòÍ∏∞ ÏúÑÌï¥ Ïò§Î•òÏ†úÏñ¥ Î∞è ÌùêÎ¶Ñ Ï†úÏñ¥Î•º ÏàòÌñâÌïúÎã§.  \r\nÎåÄÌëúÏ†ÅÏù∏ ÌîÑÎ°úÌÜ†ÏΩú Í∏∞Ïà†Î°úÎäî `Ethernet`, `PPP(Point-to-Point Protocol)`, `HDLC(High-Level Data Link Control)` Îì±Ïù¥ ÏûàÎã§.  \r\n\r\nL2ÏóêÎäî Mac Ï£ºÏÜå ÌÖåÏù¥Î∏îÏù¥ ÏûàÏúºÎ©∞, Ï∂úÎ∞úÏßÄ MACÏùÑ ÌÖåÏù¥Î∏îÏóê ÌïôÏäµÌïúÎã§.\r\n\r\n## NIC::network-interface-card\r\n\r\n**NIC**(**N**etwork **I**nterface **C**ard)ÏùÄ ÎÑ§Ìä∏ÏõåÌÅ¨ Ïû•ÏπòÎ°ú, Ïª¥Ìì®ÌÑ∞ÏôÄ ÎÑ§Ìä∏ÏõåÌÅ¨ Í∞ÑÏùò ÌÜµÏã†ÏùÑ ÏúÑÌïú ÌïòÎìúÏõ®Ïñ¥ Ïû•ÏπòÏù¥Îã§.\r\nÏª¥Ìì®ÌÑ∞ÏóêÏÑúÎäî `NIC`Ïù¥ L2 Í≥ÑÏ∏µÏùò Ïó≠Ìï†Î°ú Ïó¨Îü¨Í∞ÄÏßÄ Ï≤òÎ¶¨Î•º ÏàòÌñâÌïúÎã§.\r\n\r\n![NIC](/post/network/tcp-ip/data-link-layer/network-interface-card.png)\r\n:{ \"align\": \"center\", \"max-width\": \"400px\", \"description\": \"L2 Í≥ÑÏ∏µÏùÑ ÏàòÌñâÌïòÎäî ÎûúÏπ¥Îìú(NIC)\" }\r\n\r\n**NICÏùò Ï£ºÏöî ÌäπÏßï**\r\n\r\n* Í∞Å ÎûúÏπ¥ÎìúÎäî Í≥†Ïú†Ìïú MAC Ï£ºÏÜå(48 Bit)Î•º Í∞ÄÏßÄÍ≥†ÏûàÎã§. (Ïã§Ï†úÎ°ú Ïù¥ Ï≤òÎ¶¨Î•º ÏúÑÌï¥ [IEEE]()ÏóêÏÑú Í¥ÄÎ¶¨ÌïúÎã§.)\r\n* Îç∞Ïù¥ÌÑ∞Î•º ÌîÑÎ†àÏûÑ Îã®ÏúÑÎ°ú Ï†ÑÏÜ°ÌïòÍ≥† ÏàòÏã†\r\n* L1ÏóêÏÑú Î∞õÏùÄ Î∞îÏù¥Ìä∏ Ïä§Ìä∏Î¶ºÏùÑ Í≤ÄÏÇ¨ÌïòÍ≥† Ï†ïÏÉÅ Ï†ÅÏù∏ ÌîÑÎ†àÏûÑÏù¥Î©¥ Ï≤òÎ¶¨, Ïò§Î•òÍ∞Ä ÏûàÏúºÎ©¥ ÌèêÍ∏∞ÌïúÎã§.\r\n\r\n## ÌîÑÎ†àÏûÑ Íµ¨Ï°∞::frame-structure\r\n\r\n| Preamble |  SFD   | Destination MAC | Source MAC |  Type  |     Data     |  FCS   |\r\n|:--------:|:------:|:---------------:|:----------:|:------:|:------------:|:------:|\r\n| 7 Bytes  | 1Bytes |     6Bytes      |   6Bytes   | 2Bytes | 46~1500Bytes | 4Bytes |\r\n:{ \"type\": \"filled\" }\r\n\r\nL2ÏóêÏÑúÎäî Í∞Å Îç∞Ïù¥ÌÑ∞Î•º ÌîÑÎ†àÏûÑÏúºÎ°ú Ï†ÑÏÜ°ÌïòÎ©∞, ÌîÑÎ†àÏûÑÏùÄ ÏúÑÏôÄ Í∞ôÏùÄ Íµ¨Ï°∞Î°ú Ïù¥Î£®Ïñ¥Ï†∏ÏûàÎã§.\r\n\r\n* **Preamble**: ÏàòÏã†Ï∏°Ïùò ÌÅ¥Î°ù ÎèôÍ∏∞ÌôîÎ•º ÏúÑÌï¥ ÏÇ¨Ïö© ÎêòÎ©∞, 7Î≤à Î∞òÎ≥µÎêú byteÎ°ú Íµ¨ÏÑ±ÎêúÎã§. (Ïòà: 10101010(AA) * 7)\r\n* **SFD**(**S**tart **F**rame **D**elimiter): ÌîÑÎ†àÏûÑÏùò ÏãúÏûëÏùÑ ÏïåÎ¶¨Îäî Íµ¨Î∂Ñ Í∞í, 1byteÎ°ú Íµ¨ÏÑ±ÎêúÎã§. (Ïòà: 10101011(AB))\r\n* **Destination MAC**: Î™©Ï†ÅÏßÄ MAC Ï£ºÏÜå, 6byteÎ°ú Íµ¨ÏÑ±ÎêúÎã§.\r\n* **Source MAC**: Ï∂úÎ∞úÏßÄ MAC Ï£ºÏÜå, 6byteÎ°ú Íµ¨ÏÑ±ÎêúÎã§.\r\n* **Type**: Îç∞Ïù¥ÌÑ∞Ïùò Ï¢ÖÎ•òÎ•º ÎÇòÌÉÄÎÇ¥Îäî Í∞í Ïù¥Î©∞, IPv4Îäî `0x0800`, IPv6ÏùÄ `0x86DD`, ARPÎäî `0x0806`ÏúºÎ°ú Íµ¨ÏÑ±ÎêúÎã§.\r\n* **Data**: Ïã§Ï†ú Ï†ÑÏÜ°Ìï† Îç∞Ïù¥ÌÑ∞, ÏµúÏÜå 46byteÏóêÏÑú ÏµúÎåÄ 1500bytes ÍπåÏßÄ Ï†ÑÏÜ° Í∞ÄÎä•ÌïòÎã§.\r\n* **FCS**(**F**rame **C**heck **S**equence): Ïò§Î•ò Í≤ÄÏ∂úÏùÑ ÏúÑÌïú Í∞íÏúºÎ°ú, 4byteÎ°ú Íµ¨ÏÑ±ÎêúÎã§. Ïù¥ Í∞íÏùÄ ÌîÑÎ†àÏûÑÏù¥ ÏÜêÏÉÅÎêòÏóàÎäîÏßÄ ÏïÑÎãå ÏßÄÎ•º ÌåêÎã®ÌïòÎäî Ï≤¥ÌÅ¨ÏÑ¨ÏúºÎ°ú ÏÇ¨Ïö©ÌïúÎã§.\r\n  * ÏÜ°Ïã† Ïû•Ïπò(Sender Device)Îäî Ïù¥ ÌïÑÎìúÎ•º Ï†úÏô∏Ìïú ÌîÑÎ†àÏûÑÏùò Ìè¨Îì† ÌïÑÎìúÎ•º Í∞ÄÏ†∏ÏôÄ **CRC**(Cyclic Redundancy Check)ÎùºÎäî ÏïåÍ≥†Î¶¨Ï¶òÏúºÎ°ú Ïã§ÌñâÌïòÍ≥† Í≤∞Í≥ºÎ°ú FCSÎ°ú ÏÇ¨Ïö©Ìï† 4byte Í∞íÏùÑ ÏÉùÏÑ±ÌïòÏó¨ Ïù¥ ÌïÑÎìúÏóê Îã¥ÎäîÎã§.\r\n\r\nL2ÏóêÏÑúÎäî DataÎ•º Ï†úÏô∏ Ìïú Î™®Îì† ÌïÑÎìúÎ•º ÌîÑÎ†àÏûÑ Ìó§ÎçîÎùºÍ≥† ÌïòÎ©∞ `NIC`ÏóêÏÑúÎäî Ïù¥ Ìó§ÎçîÎ•º Î∂ÑÏÑùÌïòÍ≥†, DataÎ•º Ï∂îÏ∂úÌïòÏó¨ ÏÉÅÏúÑ Í≥ÑÏ∏µÏúºÎ°ú Ï†ÑÎã¨ÌïúÎã§.\r\n\r\n\r\n\r\n"
  },
  {
    "path": "/docs/network/tcp-ip/physical-layer",
    "header": {
      "layout": "post",
      "title": "Î¨ºÎ¶¨ Í≥ÑÏ∏µ (Physical Layer)",
      "tags": [
        "Network",
        "Physical Layer",
        "OSI",
        "OSI 7 Layer"
      ],
      "date": 1612468440000,
      "thumbnail": "/post/network/tcp-ip/physical-layer/pin-map-of-cable.png",
      "profile-image": "/post/profile/profile1.jpg",
      "current-company": "Cubic INC",
      "current-position": "SI Researcher",
      "summary": "Î¨ºÎ¶¨ Í≥ÑÏ∏µ",
      "excerpt-separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÎÑ§Ìä∏ÏõåÌÅ¨",
        "TCP/IP"
      ],
      "images": [
        {
          "src": "/post/network/tcp-ip/physical-layer/utp-cable.png",
          "alt": "UTP ÏºÄÏù¥Î∏î"
        },
        {
          "src": "/post/network/tcp-ip/physical-layer/pin-map-of-cable.png",
          "alt": "ÏºÄÏù¥Î∏î ÌïÄÎßµ"
        }
      ],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "Î¨ºÎ¶¨Í≥ÑÏ∏µÏùÄ Î¨¥ÏóáÏù∏Í∞Ä?::what-is-physical-layer",
            "title": "Î¨ºÎ¶¨Í≥ÑÏ∏µÏùÄ Î¨¥ÏóáÏù∏Í∞Ä?",
            "fragment": "what-is-physical-layer",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ° Î∞©Ïãù::data-transfer-method",
            "title": "Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ° Î∞©Ïãù",
            "fragment": "data-transfer-method",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Ï†ÑÏÜ° Îß§Ï≤¥Î≥Ñ Ïó≠Ìï†::role-of-transmission-media",
            "title": "Ï†ÑÏÜ° Îß§Ï≤¥Î≥Ñ Ïó≠Ìï†",
            "fragment": "role-of-transmission-media",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Îç∞Ïù¥ÌÑ∞ Ï≤òÎ¶¨::data-processing",
            "title": "Îç∞Ïù¥ÌÑ∞ Ï≤òÎ¶¨",
            "fragment": "data-processing",
            "children": []
          }
        ]
      }
    },
    "description": "ÎÑ§Ìä∏ÏõåÌÅ¨ ÌÜµÏã†ÏóêÏÑú Î¨ºÎ¶¨ Í≥ÑÏ∏µÏùÄ Îç∞Ïù¥ÌÑ∞Î•º Ï†ÑÏÜ°ÌïòÎäî Îç∞ ÏÇ¨Ïö©ÎêòÎäî ÌïòÎìúÏõ®Ïñ¥ Ïû•ÏπòÏôÄ Ï†ÑÏÜ° Îß§Ï≤¥Î•º Îã§Î£¨Îã§.\r\nÌùîÌûà Ïù¥ÎçîÎÑ∑, Wi-Fi, Î∏îÎ£®Ìà¨Ïä§, Í¥ëÏÑ¨Ïú† ÏºÄÏù¥Î∏î Îì±Ïù¥ ÏûàÍ≥† ÏùºÎ∞òÏ†ÅÏúºÎ°ú Ïö∞Î¶¨Í∞Ä Ï†ëÌïòÎäî ÎûúÏÑ†(UTP)Ïù¥Îã§.",
    "content": "\r\n## Î¨ºÎ¶¨Í≥ÑÏ∏µÏùÄ Î¨¥ÏóáÏù∏Í∞Ä?::what-is-physical-layer\r\n\r\nÎ¨ºÎ¶¨ Í≥ÑÏ∏µÏùÄ OSI 7Í≥ÑÏ∏µ Ï§ë Í∞ÄÏû• ÌïòÏúÑ Í≥ÑÏ∏µÏúºÎ°ú, Îç∞Ïù¥ÌÑ∞Î•º Ï†ÑÏÜ°ÌïòÎäî Îç∞ ÏÇ¨Ïö©ÎêòÎäî ÌïòÎìúÏõ®Ïñ¥ Ïû•ÏπòÏôÄ Ï†ÑÏÜ° Îß§Ï≤¥Î•º Îã§Î£¨Îã§.\r\nÏñëÎÅù Ïû•ÏπòÏóêÏÑú Ï†ÑÍ∏∞ ÎòêÎäî ÎπõÏùÑ Ïù¥Ïö©Ìï¥ Îç∞Ïù¥ÌÑ∞Î•º Ï†ÑÎã¨ÌïòÎ©∞ Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ°Ïùò Î¨ºÎ¶¨Ï†ÅÏù∏ Î∂ÄÎ∂ÑÏùÑ Îã¥ÎãπÌïúÎã§.\r\n\r\n## Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ° Î∞©Ïãù::data-transfer-method\r\n\r\nÏùºÎ∞òÏ†ÅÏúºÎ°ú Î¨ºÎ¶¨ Í≥ÑÏ∏µÏùÄ Ïù¥ÏßÑ Îç∞Ïù¥ÌÑ∞Î•º Ï†ÑÍ∏∞Ïã†Ìò∏ ÎòêÎäî Îπõ Ïã†Ìò∏Î°ú Ï†ÑÎã¨ÌïúÎã§. Í∞Å Ï†ÑÏÜ°Îß§Ï≤¥ ÎßàÎã§ Îã§Î•¥Î©∞ Ïù¥Îäî ÏïÑÎûòÏôÄ Í∞ôÎã§:\r\n\r\n* **Ïú†ÏÑ† Îß§Ï≤¥**: Ï†ÑÍ∏∞ Ïã†Ìò∏Î•º ÏÇ¨Ïö©ÌïòÎäî Ïú†ÏÑ† Îß§Ï≤¥Î°úÎäî Ï†ÑÌôîÏÑ†, ÏºÄÏù¥Î∏î, Í¥ëÏÑ¨Ïú† ÏºÄÏù¥Î∏î Îì±Ïù¥ ÏûàÎã§.\r\n* **Î¨¥ÏÑ† Îß§Ï≤¥**: Î¨¥ÏÑ† Îß§Ï≤¥Î°úÎäî ÎùºÎîîÏò§Ìåå, ÎßàÏù¥ÌÅ¨Î°úÌåå, Ï†ÅÏô∏ÏÑ†, Î∏îÎ£®Ìà¨Ïä§, Wi-Fi Îì±Ïù¥ ÏûàÎã§.\r\n\r\nÏù¥ÎçîÎÑ∑ÏùÑ Í∏∞Ï§ÄÏúºÎ°ú ÏòàÎ•º Îì§Î©¥, Ïù¥ÎçîÎÑ∑ÏùÄ ÎûúÏÑ†(UTP)ÏúÑÏóêÏÑú Ï†ÑÎã¨ÎêòÎ©∞, Ï†ÑÍ∏∞Ïã†Ìò∏Î•º ÏÇ¨Ïö©ÌïúÎã§.\r\nÏ†ÑÍ∏∞Ïã†Ìò∏Îäî [Bit](/wiki/bit)Î°ú ÌëúÌòÑÎêòÎ©∞, 0Í≥º 1Î°ú Ïù¥Î£®Ïñ¥ÏßÑ Îç∞Ïù¥ÌÑ∞Î•º Ï†ÑÎã¨ÌïúÎã§.\r\n\r\n![UTP ÏºÄÏù¥Î∏î](/post/network/tcp-ip/physical-layer/utp-cable.png)\r\n: { \"align\": \"center\", \"max-width\": \"400px\", \"description\": \"UTP ÏºÄÏù¥Î∏î\" }\r\n\r\n>UTPÎäî **U**nshielded **T**wisted **P**airÏùò ÏïΩÏûêÎ°ú, ÌîºÎ≥µÏù¥ ÏûàÎäî ÏûëÏùÄ Íµ¨Î¶¨ÏÑ†Îì§Ïù¥ Îëê Í∞úÏî© Î¨∂Ïó¨ ÏûàÎäî ÏºÄÏù¥Î∏îÏù¥Îã§.\r\n: { \"type\": \"note\", \"icon\": \"info\" }\r\n\r\nÍ∞Å ÌéòÏñ¥Î°ú Îç∞Ïù¥ÌÑ∞Î•º Ï†ÑÏÜ°ÌïòÍ±∞ÎÇò ÏàòÏã†Ìï† Ïàò ÏûàÎäîÎç∞ Ïù¥Îäî ÏïÑÎûòÏôÄ Í∞ôÎã§:\r\n\r\n## Ï†ÑÏÜ° Îß§Ï≤¥Î≥Ñ Ïó≠Ìï†::role-of-transmission-media\r\n\r\n[LAN]() ÏºÄÏù¥Î∏îÏùÄ Ï¥ù 8Í∞úÏùò ÌöåÏÑ†Ïù¥Î©∞,  4Í∞úÏùò ÌéòÏñ¥Î°ú Íµ¨ÏÑ±ÎêòÏñ¥ ÏûàÎã§.\r\n\r\nÏù¥ÎçîÎÑ∑ Í∑úÍ≤©Î≥Ñ ÌäπÏßïÏùÄ ÏïÑÎûòÏôÄ Í∞ôÎã§:\r\n\r\n1. 10BASE-T\r\n   * ÏÜçÎèÑ: Í∞Å ÌéòÏñ¥Îãπ 10Mbps\r\n   * Î≥ÄÏ°∞Î∞©Ïãù: Î©òÏ≤¥Ïä§ÌÑ∞ Ïù∏ÏΩîÎî©(Manchester Encoding)\r\n   * ÏÇ¨Ïö©ÌéòÏñ¥: 2ÏåçÎßå ÏÇ¨Ïö©\r\n     * 1,2Î≤à ÌéòÏñ¥: Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ°(TX)\r\n     * 3,6Î≤à ÌéòÏñ¥: Îç∞Ïù¥ÌÑ∞ ÏàòÏã†(RX)\r\n     * 4, 5Î≤à & 7,8Î≤à ÌéòÏñ¥: ÎØ∏ÏÇ¨Ïö©\r\n2. 100BASE-TX\r\n   * ÏÜçÎèÑ: Í∞Å ÌéòÏñ¥Îãπ 100Mbps\r\n   * Î≥ÄÏ°∞Î∞©Ïãù: MLT-3(4B/5B Ïù∏ÏΩîÎî© Ìè¨Ìï®) \r\n   * ÏÇ¨Ïö©ÌéòÏñ¥: 2ÏåçÎßå ÏÇ¨Ïö©\r\n     * 1,2Î≤à ÌéòÏñ¥: Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ°(TX)\r\n     * 3,6Î≤à ÌéòÏñ¥: Îç∞Ïù¥ÌÑ∞ ÏàòÏã†(RX)\r\n     * 4, 5Î≤à & 7,8Î≤à ÌéòÏñ¥: ÎØ∏ÏÇ¨Ïö©\r\n3. 1000BASE-T\r\n   * ÏÜçÎèÑ: Í∞Å ÌéòÏñ¥Îãπ 250Mbps *4 = Ï¥ù 1Gbps\r\n   * Î≥ÄÏ°∞Î∞©Ïãù: PAM-5(4B/5B Ïù∏ÏΩîÎî© Ìè¨Ìï®)\r\n   * ÏÇ¨Ïö©ÌéòÏñ¥: 4Ïåç Î™®Îëê ÏÇ¨Ïö©\r\n     * Î™®Îì† ÌéòÏñ¥Í∞Ä ÏñëÎ∞©Ìñ• ÌÜµÏã†\r\n     * Í∞Å ÌéòÏñ¥Í∞Ä ÏÜ°ÏàòÏã† ÎèôÏãú ÏàòÌñâ\r\n\r\n![ÏºÄÏù¥Î∏î ÌïÄÎßµ](/post/network/tcp-ip/physical-layer/pin-map-of-cable.png)\r\n: { \"align\": \"center\", \"max-width\": \"600px\", \"description\": \"ÏºÄÏù¥Î∏î ÌïÄÎßµ\" }\r\n\r\n## Îç∞Ïù¥ÌÑ∞ Ï≤òÎ¶¨::data-processing\r\n\r\nÎ¨ºÎ¶¨ Í≥ÑÏ∏µÏùÄ [Îç∞Ïù¥ÌÑ∞ ÎßÅÌÅ¨ Í≥ÑÏ∏µ](/docs/network/tcp-ip/data-link-layer)ÏúºÎ°ú Î∞õÏùÄ ÌîÑÎ†àÏûÑÏùÑ Ìä∏ÎûúÏãúÎ≤Ñ(Transceiver)Î•º Ïù¥Ïö©Ìï¥ ÎπÑÌä∏ Ïä§Ìä∏Î¶ºÏúºÎ°ú Î≥ÄÌôò Î∞è ÏßÅÎ†¨ÌôîÌïòÏó¨ ÏàúÏ∞®Ï†ÅÏúºÎ°ú Îç∞Ïù¥ÌÑ∞Î•º Ï†ÑÏÜ°ÌïúÎã§.  \r\nÏòà: 10101110(1Î∞îÏù¥Ìä∏) -> 1, 0, 1, 0, 1, 1, 1, 0(8ÎπÑÌä∏)\r\n\r\nÏù¥Î†áÍ≤å Î∞õÏùÄ ÎπÑÌä∏Îì§ÏùÄ Í∞Å Î≥ÄÏ°∞ Î∞©ÏãùÏúºÎ°ú ÎπÑÌä∏Îã®ÏúÑÎ°ú Î≥ÄÏ°∞ÎêòÏñ¥ Ï†ÑÏÜ°ÎêúÎã§.\r\n\r\n\r\n\r\n"
  },
  {
    "path": "/docs/computer-science/operating-system/operating-system",
    "header": {
      "layout": "post",
      "title": "Operating System (OS)",
      "tags": [
        "Operating System",
        "OS"
      ],
      "date": 1611141570000,
      "thumbnail": "/post/computer-science/operating-system.webp",
      "current-company": "Cubic INC",
      "current-position": "SI Researcher",
      "profile-image": "/post/profile/profile1.jpg",
      "summary": "Ïª¥Ìì®ÌÑ∞ OS",
      "excerpt-separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "Ïª¥Ìì®ÌÑ∞",
        "operating-system"
      ],
      "images": [
        {
          "src": "/post/computer/traditional-system-structure-of-unix.png",
          "alt": "UNIXÏùò Ï†ÑÌÜµÏ†ÅÏù∏ ÏãúÏä§ÌÖú Íµ¨Ï°∞"
        },
        {
          "src": "/post/computer/system-structure-of-linux.png",
          "alt": "LinuxÏùò ÏãúÏä§ÌÖú Íµ¨Ï°∞"
        }
      ],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "Ïª¥Ìì®ÌÑ∞Ïùò Íµ¨ÏÑ±::computer-structure",
            "title": "Ïª¥Ìì®ÌÑ∞Ïùò Íµ¨ÏÑ±",
            "fragment": "computer-structure",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Ïö¥ÏòÅÏ≤¥Ï†úÏùò Íµ¨Ï°∞::structure-of-os",
            "title": "Ïö¥ÏòÅÏ≤¥Ï†úÏùò Íµ¨Ï°∞",
            "fragment": "structure-of-os",
            "children": [
              {
                "rank": 3,
                "origin": "Î™®ÎÜÄÎ¶¨Ïãù Íµ¨Ï°∞::monolithic-structure",
                "title": "Î™®ÎÜÄÎ¶¨Ïãù Íµ¨Ï°∞",
                "fragment": "monolithic-structure",
                "children": []
              },
              {
                "rank": 3,
                "origin": "Í≥ÑÏ∏µÏ†Å Ï†ëÍ∑º::layered-approach",
                "title": "Í≥ÑÏ∏µÏ†Å Ï†ëÍ∑º",
                "fragment": "layered-approach",
                "children": []
              }
            ]
          },
          {
            "rank": 2,
            "origin": "Ïö¥ÏòÅÏ≤¥Ï†úÏùò ÎèôÏûë ÏàúÏÑú::workflow-of-os",
            "title": "Ïö¥ÏòÅÏ≤¥Ï†úÏùò ÎèôÏûë ÏàúÏÑú",
            "fragment": "workflow-of-os",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Ïö¥ÏòÅÏ≤¥Ï†úÏùò Ïó≠Ìï†::role-of-os",
            "title": "Ïö¥ÏòÅÏ≤¥Ï†úÏùò Ïó≠Ìï†",
            "fragment": "role-of-os",
            "children": [
              {
                "rank": 3,
                "origin": "Î©îÎ™®Î¶¨ Í¥ÄÎ¶¨::memory-management",
                "title": "Î©îÎ™®Î¶¨ Í¥ÄÎ¶¨",
                "fragment": "memory-management",
                "children": []
              },
              {
                "rank": 3,
                "origin": "ÌîÑÎ°úÏÑ∏Ïä§ Í¥ÄÎ¶¨::process-management",
                "title": "ÌîÑÎ°úÏÑ∏Ïä§ Í¥ÄÎ¶¨",
                "fragment": "process-management",
                "children": []
              }
            ]
          }
        ]
      }
    },
    "description": "Ïö¥ÏòÅÏ≤¥Ï†úÍ∞Ä Ïñ¥Îñ§ÏùºÏùÑ ÌïòÎäîÏßÄÎ•º ÏïåÎ†§Î©¥, Ïª¥Ìì®ÌÑ∞Í∞Ä Ïñ¥Îñ§ ÏöîÏÜåÎì§Î°ú Íµ¨ÏÑ±ÎêòÏñ¥ ÏûàÎäîÏßÄÎ•º Ïù¥Ìï¥ Ìï¥ÏïºÌïúÎã§.\r\nÍ∞Å ÏöîÏÜåÏùò Íµ¨ÏÑ±Í≥º Ïù¥Ìï¥Í¥ÄÍ≥Ñ Í∑∏Î¶¨Í≥† Ïó≠Ìï†ÏùÑ ÏïåÏïÑÎ≥¥Ïûê.",
    "content": "\r\n\r\n## Ïª¥Ìì®ÌÑ∞Ïùò Íµ¨ÏÑ±::computer-structure\r\n\r\nÏª¥Ìì®ÌÑ∞Îäî ÌÅ¨Í≤å ÏùëÏö©ÌîÑÎ°úÍ∑∏Îû®, Ïö¥ÏòÅÏ≤¥Ï†ú, ÌïòÎìúÏõ®Ïñ¥ Í≥ÑÏ∏µÏúºÎ°ú Î∂ÑÎ•òÎêúÎã§.\r\nÏù¥ Î¨∏ÏÑúÏóêÏÑúÎäî ÏùëÏö©ÌîÑÎ°úÍ∑∏Îû®ÏùÑ Ï†úÏô∏ÌïòÍ≥† Ïö¥ÏòÅÏ≤¥Ï†úÏôÄ ÌïòÎìúÏõ®Ïñ¥Ïóê ÎåÄÌï¥ ÎÖºÌïúÎã§.\r\n\r\n[CPU](/wiki/central-processing-unit)ÏôÄ [ÏûÖÏ∂úÎ†• Ïû•Ïπò]() Í∑∏Î¶¨Í≥† [Î©îÎ™®Î¶¨]()Îäî [ÏãúÏä§ÌÖú Î≤ÑÏä§]()Î•º ÌÜµÌï¥ ÏÑúÎ°ú Ïó∞Í≤∞ÎêòÏñ¥ ÏûàÏúºÎ©∞, Î≤ÑÏä§Ïùò Ï¢ÖÎ•òÏóê Îî∞Îùº Îã®Î∞©Ìñ• ÎòêÎäî ÏñëÎ∞©Ìñ•ÏúºÎ°ú Ïã†Ìò∏Î•º Î≥¥ÎÇ∏Îã§.\r\nÏûÖÏ∂úÎ†• Ïû•ÏπòÏùò Í≤ΩÏö∞ Î©îÏù∏Î≥¥Îìú ÏúÑÏóê ÏÇ¨Ï†ÑÏóê ÎßåÎì§Ïñ¥ÏßÑ Ïû•Ïπò Ïª®Ìä∏Î°§Îü¨Î•º Ïö¥ÏòÅÏ≤¥Ï†úÏùò Ïû•Ïπò ÎìúÎùºÏù¥Î≤ÑÍ∞Ä Ï†úÏñ¥ÌïòÎ©∞, Ïû•ÏπòÎìúÎùºÏù¥Î≤ÑÎäî Ïö¥ÏòÅÏ≤¥Ï†úÏóê ÏùºÍ¥ÄÎêú Ïù∏ÌÑ∞ÌéòÏù¥Ïä§Î•º Ï†úÍ≥µÌïúÎã§.\r\nCPUÏôÄ Ïû•ÏπòÏª®Ìä∏Î°§Îü¨Îäî Î≥ëÎ†¨Î°ú Ïã§ÌñâÎêòÍ∏∞ ÎñÑÎ¨∏Ïóê Î©îÎ™®Î¶¨Ïóê Ï†ëÍ∑ºÌïòÍ∏∞ÏúÑÌï¥ Î©îÎ™®Î¶¨ ÏÇ¨Ïù¥ÌÅ¥ÏùÑ ÎëêÍ≥† Í≤ΩÏüÅÌïúÎã§. Ïù¥ Î©îÎ™®Î¶¨Ïóê ÏàúÏ∞®Ï†ÅÏúºÎ°ú Ï†ëÍ∑ºÌïòÍ∏∞ ÏúÑÌï¥ Î©îÎ™®Î¶¨ Ïª®Ìä∏Î°§Îü¨Îäî Î©îÎ™®Î¶¨Ïóê ÎåÄÌïú Ïï°ÏÑ∏Ïä§Î•º ÎèôÍ∏∞ÌôîÌïúÎã§.\r\n\r\n\r\nÏúÑÏóêÏÑú Í∞ÑÎã®Ìûà ÏÑ§Î™ÖÌïú ÎÇ¥Ïö©ÏùÄ OS ÎÇ¥Î∂ÄÏùò Ïª§ÎÑêÍ≥º ÏãúÏä§ÌÖú ÌîÑÎ°úÍ∑∏Îû®Ïóê ÏùòÌï¥ Ï†úÏñ¥ÎêòÎ©∞, ÌïòÎìúÏõ®Ïñ¥Ïùò Í≤ΩÏö∞ ÏÇ¨Ï†ÑÏóê ÏÑ§Í≥ÑÎêú ÌöåÎ°úÏùò ÎèôÏûëÏùÑ ÏàòÌñâÌïúÎã§.\r\n\r\n## Ïö¥ÏòÅÏ≤¥Ï†úÏùò Íµ¨Ï°∞::structure-of-os\r\n\r\nÏö¥ÏòÅÏ≤¥Ï†ú Í∞ôÏù¥ ÌÅ¨Í≥† Î≥µÏû°Ìïú ÏãúÏä§ÌÖúÏùÄ ÏâΩÍ≤å Î≥ÄÍ≤ΩÌï† Ïàò ÏûàÏúºÎ©¥ÏÑú Ïò¨Î∞îÎ•¥Í≤å ÎèôÏûëÌïòÎ†§Î©¥ Ïã†Ï§ëÌûà Ï†úÏûëÎêòÏñ¥Ïïº ÌïúÎã§.\r\nÏùºÎ∞òÏ†ÅÏúºÎ°ú Ìïú Í∞úÏùò ÏùºÍ¥ÄÎêú ÏãúÏä§ÌÖúÎ≥¥Îã§Îäî ÏûëÏóÖÏùÑ ÏûëÏùÄ Íµ¨ÏÑ±ÏöîÏÜåÎ°ú Î∂ÑÌï† ÌïòÎäî Í≤ÉÏù¥Îã§. Í∞ÅÍ∞ÅÏùò Î™®ÎìàÏùÄ Ïã†Ï§ëÌûà Ï†ïÏùòÎêú Ïù∏ÌÑ∞ÌéòÏù¥Ïä§ÏôÄ Í∏∞Îä•Îì§ÏùÑ Í∞ÄÏßÄÎäî ÏãúÏä§ÌÖúÏùò ÏùºÎ∂ÄÍ∞Ä ÎêòÏñ¥Ïïº ÌïúÎã§.  \r\n\r\nÏòàÎ•º Îì§Ïñ¥ `main()` Ìï®ÏàòÏóê Î™®Îì† ÏΩîÎìúÎ•º ÎÑ£ÎäîÍ≤É Î≥¥Îã§ ÌïÑÏöîÌïú Í∏∞Îä•ÏùÑ Ïò¨Î∞îÎ•∏ Ïù∏ÏûêÏôÄ Î∞òÌôòÍ∞íÏùÑ Î™ÖÏãúÌïú Ïó¨Îü¨ Ìï®ÏàòÎ°ú Î∂ÑÎ¶¨ÌïòÍ≥† Ï†ÅÏû¨Ï†ÅÏÜåÏóê ÎßûÍ≤å Ìò∏Ï∂úÌïòÎäî Í≤ÉÏù¥Îã§.  \r\n\r\nÏö¥ÏòÅÏ≤¥Ï†úÏùò Í≥µÌÜµÏ†ÅÏù∏ Íµ¨ÏÑ±ÏöîÏÜåÎì§Ïù¥ Ïñ¥ÎñªÍ≤å Ïó∞Í≤∞ÎêòÏñ¥ ÌïòÎÇòÏùò Ïª§ÎÑêÎ°ú Í≤∞Ìï©ÌïòÎäîÏßÄ ÏïåÏïÑÎ≥¥Ïûê.\r\n\r\n### Î™®ÎÜÄÎ¶¨Ïãù Íµ¨Ï°∞::monolithic-structure\r\n\r\nÍ∞ÄÏû• Í∞ÑÎã®Ìïú Î∞©Î≤ïÏúºÎ°ú ÌîÑÎ°úÍ∑∏Îû®ÏùÑ ÎßåÎìúÎäî Î∞©Î≤ïÏùÄ ÌïúÍ∞úÏùò Íµ¨Ï°∞ÏóÜÏù¥ ÌïúÍ≥≥ÏóêÏÑú Î™®Îì† Í≤ÉÏùÑ Í¥ÄÎ¶¨ÌïòÎäî Í≤ÉÏù¥Îã§.\r\n\r\n**monolithic**[m…ë:n…ô‚îÇl…™Œ∏…™k]: ÌïòÎÇòÎ°úÎêú Í±∞ÎåÄÌïú Îç©Ïñ¥Î¶¨\r\nÏù¥Îü¨Ìïú ÌïúÍ∞úÏùò Íµ¨Ï°∞Î•º `Î™®ÎÜÄÎ¶¨Ïãù (monolithic)`Ïù¥ÎùºÍ≥† ÌïúÎã§. Ï¶â Îã®Ïùº Ï£ºÏÜå Í≥µÍ∞ÑÏóêÏÑú Ïã§ÌñâÎêòÎäî Îã®Ïùº Î∞îÏù¥ÎÑàÎ¶¨ ÌååÏùºÏóê Ïª§ÎÑêÏùò Î™®Îì† Í∏∞Îä•ÏùÑ ÎÑ£Îäî Í≤ÉÏù¥Îã§.\r\n\r\n`Î™®ÎÜÄÎ¶¨Ïãù Íµ¨Ï°∞`ÎùºÍ≥† ÌïòÎäî Ïù¥Î∞©Î≤ïÏùÄ Ïö¥ÏòÅÏ≤¥Ï†úÎ•º ÏÑ§Í≥ÑÌïòÎäî ÏùºÎ∞òÏ†ÅÏù∏ Í∏∞Î≤ïÏù¥Îã§. Ïù¥Îü¨Ìïú Ï†úÌïúÏ†ÅÏù∏ Íµ¨Ï°∞Î•º Í∞ÄÏßÄÎäî Ïö¥ÏòÅÏ≤¥Ï†úÎäî ÏµúÏ¥àÏùò UNIX Ïö¥ÏòÅÏ≤¥Ï†úÍ∞Ä ÎåÄÌëúÏ†ÅÏù∏ ÏòàÏãúÏù¥Îã§.\r\nÏª§ÎÑêÍ≥º ÏãúÏä§ÌÖú ÌîÑÎ°úÍ∑∏Îû®Ïùò Îëê Î∂ÄÎ∂ÑÏúºÎ°ú Íµ¨ÏÑ±ÎêúÎã§.\r\n\r\nÏª§ÎÑêÏùÄ Ïó¨Îü¨Í∞ÄÏßÄ Ïù∏ÌÑ∞ÌéòÏù¥Ïä§ÏïÑ Ïû•ÏπòÎìúÎùºÏù¥Î≤ÑÎ°ú ÎÇòÎâòÍ≤å ÎêòÎäîÎç∞, Ïù¥Îäî `UNIX`Í∞Ä Î∞úÏ†ÑÌï¥ Ïò§Î©¥ÏÑú Î™áÏã≠ÎÖÑÏóê Í±∏Ï≥ê Ï∂îÍ∞ÄÎêòÍ≥† ÌôïÏû• ÎêòÏóàÎã§.\r\nÍ≥ÑÏ∏µ Î≥ÑÎ°ú Ïù¥Î£®Ïñ¥Ï†∏ ÏûàÎäî `UNIX` Ïö¥ÏòÅÏ≤¥Ï†úÎäî [ÏãúÏä§ÌÖú ÏΩú](/wiki/system-call) Ïù∏ÌÑ∞ÌéòÏù¥Ïä§ ÏïÑÎûòÏôÄ ÌïòÎìúÏõ®Ïñ¥ ÏúÑ Î™®Îì† Í≤ÉÏù¥ Ïª§ÎÑêÏù¥Îã§. \r\n\r\n![UNIXÏùò Ï†ÑÌÜµÏ†ÅÏù∏ ÏãúÏä§ÌÖú Íµ¨Ï°∞](/post/computer/traditional-system-structure-of-unix.png)\r\n:{ \"align\": \"center\", \"max-width\": \"400px\", \"description\": \"UNIXÏùò Ï†ÑÌÜµÏ†ÅÏù∏ ÏãúÏä§ÌÖú Íµ¨Ï°∞\" }\r\n\r\nÏª§ÎÑêÏùÄ ÏãúÏä§ÌÖú ÏΩúÏùÑ ÌÜµÌï¥ `ÌååÏùº ÏãúÏä§ÌÖú`, `CPU Ïä§ÏºÄÏ§ÑÎßÅ`, `Î©îÎ™®Î¶¨ Í¥ÄÎ¶¨` Îì±Ïùò Í∏∞Îä•ÏùÑ Ï†úÍ≥µÌïúÎã§. **Ïù¥Îü¨Ìïú Í∏∞Îä•ÏùÄ ÌïúÎÇòÏùò Ï£ºÏÜå Í≥µÍ∞ÑÏúºÎ°ú Í≤∞Ìï©ÌïòÍ∏∞ÏóêÎäî ÎÑàÎ¨¥ ÎßéÏùÄ Í∏∞Îä•Ïù¥Îã§.**\r\n\r\n`Linux` Ïö¥ÏòÅÏ≤¥Ï†úÎäî  `UNIX`Ïóê Í∏∞Î∞òÏùÑ ÎëêÍ≥† ÏûàÏúºÎ©∞ ÏïÑÎûòÏôÄ Í∞ôÏùÄ Ïú†ÏÇ¨Ìïú Íµ¨Ï°∞Î°ú Íµ¨ÏÑ±ÎêúÎã§.\r\n\r\n![LinuxÏùò ÏãúÏä§ÌÖú Íµ¨Ï°∞](/post/computer/system-structure-of-linux.png)\r\n:{ \"align\": \"center\", \"max-width\": \"400px\", \"description\": \"LinuxÏùò ÏãúÏä§ÌÖú Íµ¨Ï°∞\" }\r\n\r\nÏùëÏö© ÌîÑÎ°úÍ∑∏Îû®ÏùÄ ÏùºÎ∞òÏ†ÅÏúºÎ°ú Ïª§ÎÑêÏùò ÏãúÏä§ÌÖúÏΩú Ïù∏ÌÑ∞ÌéòÏù¥Ïä§ÏôÄ ÌÜµÏã†Ìï† Îïå [`glibc` ÌëúÏ§Ä C ÎùºÏù¥Î∏åÎü¨Î¶¨](/wiki/system-call#api-and-system-call)Î•º ÏÇ¨Ïö©ÌïúÎã§.  \r\n`Linux` Ïª§ÎÑêÏùÄ Îã®Ïùº Ï£ºÏÜå Í≥µÍ∞ÑÏóêÏÑú Ïª§ÎÑêÎ™®ÎìúÎ°ú Ï†ÑÎ∂Ä Ïã§ÌñâÎêú Îã§Îäî Ï†êÏóêÏÑú Î™®ÎÜÄÎ¶¨ÏãùÏù¥ÏßÄÎßå, Îü∞ÌÉÄÏûÑÏóê Ïª§ÎÑêÏùÑ Ï†ïÌï† Ïàò ÏûàÎäî [LKM]() Î™®ÎìàÏãù ÏÑ§Í≥ÑÎ•º Í∞ñÏ∂îÍ≥† ÏûàÎã§.\r\n\r\nÏù¥Îü¨Ìïú Îã®ÏàúÌïú Íµ¨Ï°∞ÎùºÎèÑ ÌôïÏû•ÏùÄ Ïñ¥Î†µÏßÄÎßå ÏãúÏä§ÌÖú ÏΩúÏùò Ïò§Î≤ÑÌó§ÎìúÍ∞Ä Í±∞Ïùò ÏóÜÍ≥† Ïª§ÎÑêÏïàÏóêÏÑúÏùò ÌÜµÏã†ÏÜçÎèÑÍ∞Ä Îπ†Î•¥Îã§Îäî Îã®Ï†êÏù¥ ÏûàÎã§.\r\nÎî∞ÎùºÏÑú Î™®ÎÜÄÎ¶¨Ïãù Ïª§ÎÑêÏùò Îã®Ï†êÏóêÎèÑ Î∂àÍµ¨ÌïòÍ≥† ÏÜçÎèÑÏôÄ Ìö®Ïú®ÏÑ±ÏùÄ ÏïÑÏßÅÍπåÏßÄÎèÑ `UNIX`ÏôÄ `Linux` Î∞è `Windows`ÏóêÏÑú ÏÇ¨Ïö©ÎêòÎäî Í≤ÉÏù¥ Ï¶ùÎ™ÖÌï¥Ï§ÄÎã§.\r\n\r\n\r\n### Í≥ÑÏ∏µÏ†Å Ï†ëÍ∑º::layered-approach\r\n\r\nÏûëÏÑ±Ï§ë...\r\n\r\n\r\n\r\n\r\n## Ïö¥ÏòÅÏ≤¥Ï†úÏùò ÎèôÏûë ÏàúÏÑú::workflow-of-os\r\n\r\nÏª¥Ìì®ÌÑ∞Ïùò Ï†ÑÏõêÏùÑ Ïº§ Îïå Ïã§ÌñâÎêòÎäî Î∂ÄÌä∏Ïä§Ìä∏Îû© ÌîÑÎ°úÍ∑∏Îû®ÏùÄ ÌéåÏõ®Ïñ¥Ïù¥Îã§.  \r\nÎ∂ÄÌä∏Ïä§Ìä∏Îû© ÌîÑÎ°úÍ∑∏Îû®ÏùÄ ÌïòÎìúÏõ®Ïñ¥ ÏúÑÏóêÏÑú ÎèôÏûëÌïòÎ©∞ `CPU`, `Î©îÎ™®Î¶¨` `Ï†ÄÏû•Ïû•Ïπò` Îì±ÏùÑ Ï¥àÍ∏∞Ìôî ÌïúÎã§. ÎòêÌïú Ïö¥ÏòÅÏ≤¥Ï†úÎ•º Î°úÎìúÌïòÍ∏∞ ÏúÑÌï¥ Î∂ÄÌä∏Î°úÎçîÎ•º Ïã§ÌñâÌïòÎ©∞, Ïù¥Îäî Ï†ÄÏû•Ïû•ÏπòÏóêÏÑú Î©îÎ™®Î¶¨Î°ú [Kernel]()(`Ïª§ÎÑê`)ÏùÑ Ï†ÅÏû¨ÌïúÎã§.\r\n\r\nÎ∂ÄÌä∏Î°úÎçîÎäî Ïª§ÎÑê Ïã§ÌñâÏóê ÌïÑÏöîÌïú Ï¥àÍ∏∞ÏÑ§Ï†ï(Ïòà: Ïª§Îß®ÎìúÎùºÏù∏ Ïù∏Ïûê Ï†ÑÎã¨ Îì±)ÏùÑ ÌïúÎí§, Ïª§ÎÑêÏóê Ï†úÏñ¥Î•º ÎÑòÍ∏¥Îã§. Ïù¥ÌõÑÏóê Ïª§ÎÑêÏùÄ ÏãúÏä§ÌÖúÏùÑ Ï¥àÍ∏∞ÌôîÌïòÍ≥† ÏÇ¨Ïö©Ïûê Í≥µÍ∞Ñ(user space)ÏùÑ Ï§ÄÎπÑÌïúÎã§.\r\nÍ∞Å ÏãúÏä§ÌÖúÏóêÏÑú ÏÇ¨Ïö© ÎêòÎäî Î∂ÄÌä∏Î°úÎçîÎäî Ïó¨Îü¨Ï¢ÖÎ•òÍ∞Ä ÏûàÎã§.\r\n\r\n* GRUB (GNU GRUB):\r\n  * Î¶¨ÎàÖÏä§/Ïú†ÎãâÏä§ ÏãúÏä§ÌÖúÏóêÏÑú ÏÇ¨Ïö©ÎêòÎäî Î∂ÄÌä∏Î°úÎçî\r\n* LILO(Linux Loader)\r\n  * Í≥ºÍ±∞ Î¶¨ÎàÖÏä§ ÏãúÏä§ÌÖúÏóêÏÑú ÏÇ¨Ïö©ÎêòÎäî Î∂ÄÌä∏Î°úÎçî\r\n* Windows Boot Manager\r\n  * ÏúàÎèÑÏö∞ ÏãúÏä§ÌÖúÏóêÏÑú ÏÇ¨Ïö©ÌïòÎäî Î∂ÄÌä∏Î°úÎçî\r\n* Android Bootloader\r\n  * ÏïàÎìúÎ°úÏù¥Îìú Í∏∞Í∏∞ÏóêÏÑú ÏÇ¨Ïö©ÎêòÎäî Î∂ÄÌä∏Î°úÎçîÎ°ú, Î¶¨Ïª§Î≤ÑÎ¶¨Î™®ÎìúÏôÄ Ïö¥ÏòÅÏ≤¥Ï†úÎ•º Ïã§ÌñâÌïúÎã§.\r\n\r\n## Ïö¥ÏòÅÏ≤¥Ï†úÏùò Ïó≠Ìï†::role-of-os\r\n\r\nÏö¥ÏòÅÏ≤¥Ï†úÎäî ÏÇ¨Ïö©Ïûê ÎòêÎäî ÏãúÏä§ÌÖú ÌîÑÎ°úÍ∑∏Îû®Ïù¥ Ïò¨Î∞îÎ•¥Í≤å Ïã§ÌñâÎêòÍ∏∞ ÏúÑÌï¥ Ïª§ÎÑêÏóêÏÑú Îã§ÏñëÌïú Í¥ÄÎ¶¨Î•º ÏïÑÎûòÏôÄ Í∞ôÏù¥ Ï†úÍ≥µÌïúÎã§.\r\n\r\n* Î©îÎ™®Î¶¨ Í¥ÄÎ¶¨\r\n* ÌîÑÎ°úÏÑ∏Ïä§ Í¥ÄÎ¶¨\r\n* Ïû•Ïπò ÎìúÎùºÏù¥Î≤Ñ\r\n* ÌååÏùº ÏãúÏä§ÌÖú\r\n* ÎÑ§Ìä∏ÏõåÌÅ¨ Í¥ÄÎ¶¨\r\n\r\n### Î©îÎ™®Î¶¨ Í¥ÄÎ¶¨::memory-management\r\n\r\n### ÌîÑÎ°úÏÑ∏Ïä§ Í¥ÄÎ¶¨::process-management\r\n\r\nÏö¥ÏòÅÏ≤¥Ï†úÎäî ÏûêÏõêÏùÑ Í¥ÄÎ¶¨ÌïòÏßÄÎßå, ÏïÑÎßà Í∑∏Ï§ëÏóêÏÑúÎèÑ Í∞ÄÏû• Ï§ëÏöîÌïúÍ±¥ [ÌîÑÎ°úÏÑ∏Ïä§]()Ïóê ÎåÄÌïú Í¥ÄÎ¶¨Ïù¥Îã§. ÎåÄÌëúÏ†ÅÏúºÎ°ú ÏïÑÎûòÏôÄ Í∞ôÎã§.\r\n\r\n* ÏÇ¨Ïö©Ïûê ÌîÑÎ°úÏÑ∏Ïä§ÏôÄ ÏãúÏä§ÌÖúÌîÑÎ°úÏÑ∏Ïä§Ïùò ÏÉùÏÑ±Í≥º Ï†úÍ±∞\r\n* `CPU`Ïóê ÌîÑÎ°úÏÑ∏Ïä§ÏôÄ Ïä§Î†àÎìú Ïä§ÏºÄÏ§ÑÎßÅ\r\n* ÌîÑÎ°úÏÑ∏Ïä§Ïùò ÏùºÏãúÏ§ëÏßÄ(suspend) ÏôÄ Ïû¨ÏàòÌñâ(resume)\r\n* ÌîÑÎ°úÏÑ∏Ïä§ ÎèôÍ∏∞Ìôî Í∏∞Î≤ï Ï†úÍ≥µ\r\n* ÌîÑÎ°úÏÑ∏Ïä§ Í∞Ñ ÌÜµÏã†(IPC) Ï†úÍ≥µ\r\n\r\nÏúÑÏôÄ Í∞ôÏùÄ Ï≤òÎ¶¨Î•º ÏúÑÌï¥ Ïö¥ÏòÅÏ≤¥Ï†úÎäî ÌîÑÎ°úÏÑ∏Ïä§Ïùò ÏÉÅÌÉúÎ•º Í¥ÄÎ¶¨ÌïòÎ©∞, ÌîÑÎ°úÏÑ∏Ïä§Ïùò ÏÉÅÌÉú(process stats)Îäî `ÏÉùÏÑ±`, `Ï§ÄÎπÑ`, `Ïã§Ìñâ`, `ÎåÄÍ∏∞`, `Ï¢ÖÎ£å`Î°ú ÎÇòÎâúÎã§.\r\nÏù¥Îü¨Ìïú ÏÉÅÌÉúÎäî ÏïÑÎûòÏ≤òÎüº ÎÇòÌÉÄÎÇº Ïàò ÏûàÎã§.\r\n```\r\n New\r\n  ‚Üì\r\nReady ‚Üê‚Üí Running ‚Üí Terminated\r\n  ‚Üë        ‚îÜ\r\nWaiting ‚Üê--‚ïØ\r\n```\r\n"
  },
  {
    "path": "/docs/algorithm/base58",
    "header": {
      "layout": "wiki",
      "title": "Base58 Ïù∏ÏΩîÎî©",
      "date": 1607085240000,
      "tags": [
        "Algorithm",
        "Encoding",
        "Base58"
      ],
      "summary": "Base58",
      "hide": true,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÏïåÍ≥†Î¶¨Ï¶ò"
      ],
      "images": [],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "Base58ÎûÄ?::what-is-base58",
            "title": "Base58ÎûÄ?",
            "fragment": "what-is-base58",
            "children": []
          }
        ]
      }
    },
    "description": "",
    "content": "\r\n## Base58ÎûÄ?::what-is-base58\r\n\r\n**Base58** Ïù∏ÏΩîÎî©ÏùÄ Ï£ºÎ°ú ÎπÑÌä∏ÏΩîÏù∏Í≥º Í∞ôÏùÄ ÏïîÌò∏ÌôîÌèêÏóêÏÑú ÏÇ¨Ïö©ÎêòÎäî Ïù∏ÏΩîÎî© Î∞©ÏãùÏúºÎ°ú, Ïà´ÏûêÏôÄ ÎåÄÏÜåÎ¨∏Ïûê ÏïåÌååÎ≤≥ÏùÑ Ïù¥Ïö©ÌïòÏó¨ Îç∞Ïù¥ÌÑ∞Î•º ÌëúÌòÑÌïòÎäî Î∞©Î≤ïÏù¥Îã§.  \r\nÎçîÎ∏îÌÅ¥Î¶≠ÏúºÎ°ú ÎìúÎûòÍ∑∏Ìï¥ÎèÑ ÌïúÎ≤àÏóê Î™®Îì† Î¨∏ÏûêÏó¥Ïù¥ ÏÑ†ÌÉùÎêòÎ©∞, ÌäπÏ†ï Î¨∏ÏûêÎì§ÏùÑ Ï†úÏô∏ÌïòÏó¨ ÌòºÎèôÏùÑ Ï§ÑÏù¥Í≥† ÏÇ¨ÎûåÏù¥ ÏùΩÍ≥† Ïì∞Í∏∞ ÏâΩÍ≤å ÏÑ§Í≥ÑÎêòÏóàÎã§.\r\n\r\nÏúÑÏùò Ïû•Ï†êÎì§ÏùÄ Îã§ÏùåÍ≥º Í∞ôÏù¥ Base58Ïùò Î¨∏ÏûêÏßëÌï©ÏùÑ Î≥¥Î©¥ ÏïåÏàò ÏûàÎã§:\r\n\r\n* ÎåÄÎ¨∏Ïûê ÏïåÌååÎ≤≥: `A ~ Z` (Îã® `I`ÏôÄ `O`Î•º Ï†úÏô∏)\r\n* ÏÜåÎ¨∏Ïûê ÏïåÌååÎ≤≥: `a ~ z` (Îã® `l`ÏùÑ Ï†úÏô∏)\r\n* Ïà´Ïûê: `1 ~ 9`\r\n\r\nÏú°ÏïàÏúºÎ°ú Î≥º Îïå ÌòºÎèôÏù¥ Îê† Ïàò ÏûàÎäî Î¨∏ÏûêÎì§ÏùÄ Ï†úÏô∏ ÎêòÏóàÏúºÎ©∞, Ïù¥Î•º ÌÜµÌï¥ ÏÇ¨ÎûåÏù¥ ÏâΩÍ≤å ÏùΩÍ≥† Ïì∏ Ïàò ÏûàÎèÑÎ°ù ÏÑ§Í≥ÑÎêòÏóàÎã§.\r\n\r\n> Íµ¨ÏÑ±ÎêòÎäî Í∞í: 123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\r\n: "
  },
  {
    "path": "/docs/language/java/install-zulu-in-mac",
    "header": {
      "layout": "post",
      "title": "Azul SystemÏùò OpenJDK Zulu ÏÑ§ÏπòÌïòÍ∏∞",
      "tags": [
        "OpenJDK",
        "Azul System",
        "Zulu"
      ],
      "date": 1606922700000,
      "thumbnail": "/post/java/azul-java.webp",
      "profile-image": "/post/profile/profile1.jpg",
      "current-company": "Cubic INC",
      "current-position": "SI Researcher",
      "summary": "OpenJDK Zulu ÏÑ§Ïπò",
      "excerpt-separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "Ïñ∏Ïñ¥",
        "Java"
      ],
      "images": [],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "macOSÏóêÏÑú Open JDK ÏÑ§Ïπò",
            "title": "macOSÏóêÏÑú Open JDK ÏÑ§Ïπò",
            "fragment": "root-0",
            "children": [
              {
                "rank": 3,
                "origin": "DMG InstallerÎ•º Ïù¥Ïö©Ìïú ÏÑ§Ïπò",
                "title": "DMG InstallerÎ•º Ïù¥Ïö©Ìïú ÏÑ§Ïπò",
                "fragment": "root-0-0",
                "children": []
              },
              {
                "rank": 3,
                "origin": "ZIP ÎòêÎäî TAR.GZÎ°ú ÏÑ§Ïπò",
                "title": "ZIP ÎòêÎäî TAR.GZÎ°ú ÏÑ§Ïπò",
                "fragment": "root-0-1",
                "children": []
              }
            ]
          }
        ]
      }
    },
    "description": "ZuluÎäî Azul SystemÏóêÏÑú Ï†úÍ≥µÌïòÎäî OpenJDKÏùò ÎπåÎìúÏù¥Îã§.\r\nmacOSÏóêÏÑú ÏÑ§ÏπòÌïòÎäî Î∞©Î≤ïÏùÑ ÏöîÏïΩÌñàÎã§.",
    "content": "\r\n\r\n## macOSÏóêÏÑú Open JDK ÏÑ§Ïπò\r\n\r\nMacOSÎäî ÏùºÎ∞òÏ†ÅÏúºÎ°ú `/Library/Java/JavaVirtualMachines` ÌïòÏúÑ Í≤ΩÎ°úÏóê jdkÎ•º Ï†ÄÏû•ÌïòÍ≥† ÏÇ¨Ïö©ÌïúÎã§.\r\n\r\n\r\n### DMG InstallerÎ•º Ïù¥Ïö©Ìïú ÏÑ§Ïπò\r\n\r\n1. [Azul Îã§Ïö¥Î°úÎìú](https://www.azul.com/downloads/?os=macos&_gl=1*dkdl9*_ga*MTQ0NjY0MDg1OS4xNjg4NjM4NTAz*_ga_42DEGWGYD5*MTcwNjc5MTg0NC40LjEuMTcwNjc5MjMwNy4yOC4wLjA.#zulu)ÏóêÏÑú Azul ZuluÎ•º ÏúÑÌïú DMG Installer Îã§Ïö¥Î°úÎìú\r\n2. ÏÑ§ÏπòÎ•º ÏãúÏûëÌïòÍ∏∞ÏúÑÌï¥ ÌååÏùº ÎçîÎ∏îÌÅ¥Î¶≠ÌïòÍ≥†, ÏÑ§Ïπò ÎßàÎ≤ïÏÇ¨ Î™ÖÎ†πÏùÑ Îî∞Î•¥Í∏∞\r\n\r\nÍ∏∞Î≥∏ ÏÑ§ÏπòÌè¥ÎçîÎäî Îã§ÏùåÍ≥ºÍ∞ôÎã§.\r\n\r\n```\r\n/Library/Java/JavaVirtualMachines/<zulu_folder>/Contents/Home\r\n```\r\n\r\n`<zulu_folder>` ÌîåÎ†àÏù¥Ïä§ ÌôÄÎçîÎäî Í∑∏ Î≤ÑÏ†ÑÍ≥º Azul Zulu Ìå®ÌÇ§ÏßÄ(JDK or JRE)Ïùò ÌÉÄÏûÖÏùÑ ÎßêÌïúÎã§. \r\n\r\n| Ìå®ÌÇ§ÏßÄ |      Azul Zulu Ìè¥ÎçîÎ™Ö      |     ÏòàÏãú      |\r\n| :----: | :------------------------: | :-----------: |\r\n|  JDK   | `zulu-<major_version>.jdk` | `zulu-11.jdk` |\r\n|  JRE   | `zulu-<major_version>.jdk` | `zulu-11.jre` |\r\n:{ \"wrapper-class\": \"items-center\" }\r\n\r\nÏòàÎ•º Îì§Ïñ¥, Azul Zulu JDK11ÏùÑ ÏúÑÌïú Í∏∞Î≥∏ÏÑ§Ïπò Ìè¥ÎçîÏù∏Í≤ΩÏö∞:\r\n\r\n```\r\n/Library/Java/JavaVirtualMachines/zulu-11.jdk/Contents/Home\r\n```\r\n\r\n3. Azul zulu ÏÑ§ÏπòÎ•º ÌôïÏù∏ÌïòÍ∏∞ÏúÑÌï¥ ÌÑ∞ÎØ∏ÎÑê Ï∞ΩÏóêÏÑú `java` Î™ÖÎ†πÏñ¥Î•º Ïã§ÌñâÌïúÎã§.\r\n\r\n```bash\r\n$ java -version\r\n```\r\n\r\nÎã§ÏùåÍ≥º Í∞ôÏù¥ Ï∂úÎ†•ÎèºÏïº ÌïúÎã§.  \r\n\r\n```\r\nopenjdk version \"11.0.11\" 2021-04-20 LTS\r\nOpenJDK Runtime Environment Zulu11.48+21-CA (build 11.0.11+9-LTS)\r\nOpenJDK 64-Bit Server VM Zulu11.48+21-CA (build 11.0.11+9-LTS, mixed mode)\r\n```\r\n\r\n### ZIP ÎòêÎäî TAR.GZÎ°ú ÏÑ§Ïπò\r\n\r\n1. [Azul Îã§Ïö¥Î°úÎìú](https://www.azul.com/downloads/?os=macos)ÏóêÏÑú TAR.GZ ÎòêÎäî ZIPÏúºÎ°ú Azul Zulu Îã§Ïö¥Î°úÎìú\r\n\r\n2. **Finder** Ïã§Ìñâ ÌõÑ Îã§Ïö¥Î°úÎìú Ìè¥ÎçîÎ°ú Ïù¥Îèô. ÏïïÏ∂ïÏùÑ Ìï¥Ï†úÌïòÍ∏∞ÏúÑÌï¥ ÎçîÎ∏îÌÅ¥Î¶≠ ÌïúÎã§. **ÏÇ¨ÌååÎ¶¨**ÏóêÏÑú Î∞õÏïòÎã§Î©¥ ÏûêÎèôÏúºÎ°ú ÏïïÏ∂ïÌï¥Ï†ú ÎêúÎã§.\r\n\r\nÌïòÏßÄÎßå, ÏïïÏ∂ïÌï¥Ï†úÌïòÍ∏∞ ÏúÑÌï¥ ÏïÑÎûòÏ≤òÎüº ÌïúÎ≤àÏùò Î™ÖÎ†πÏñ¥Î•º ÏÇ¨Ïö©Ìï† ÏàòÎèÑ ÏûàÎã§.\r\n\r\nZIP Ïù∏ Í≤ΩÏö∞\r\n\r\n```bash\r\nunzip <zulu_package>.zip\r\n```\r\n\r\n   TAR.GZ Ïù∏ Í≤ΩÏö∞\r\n\r\n```\r\ntar -zxvf <zulu_package>.tar.gz\r\n```\r\n\r\nÏïïÏ∂ï Ìï¥Ï†úÌïú Ìè¥ÎçîÍ∞Ä Zulu Azul ÏÑ§Ïπò Ìè¥Îçî Ïù¥Îã§.\r\n\r\n3. Azul Zulu ÏÑ§ÏπòÎ•º ÌôïÏù∏ÌïòÍ∏∞ ÏúÑÌï¥, ÌÑ∞ÎØ∏ÎÑê Ï∞ΩÏóêÏÑú Îã§ÏùåÏùò Ïª§Îß®ÎìúÎ•º Ïã§ÌñâÌïúÎã§.\r\n\r\n```bash\r\n$ <installation_folder>/bin/java -version\r\n```\r\n\r\n4. (ÏÑ†ÌÉùÏÇ¨Ìï≠) `<installation_folder>/bin/java` ÏùÑ `PATH` ÌôòÍ≤ΩÎ≥ÄÏàòÏóê Ï∂îÍ∞ÄÌïòÎ©¥, ÌäπÏ†ïÌïú Ï†ÑÏ≤¥ Í≤ΩÎ°ú ÏóÜÏù¥ Ïñ¥ÎîîÏÑúÎäî `java` Î•º Ïã§ÌñâÌï† Ïàò ÏûàÎã§.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
  },
  {
    "path": "/docs/computer-science/computer-structure/central-processing-unit",
    "header": {
      "layout": "wiki",
      "date": 1597084440000,
      "title": "Ï§ëÏïôÏ≤òÎ¶¨Ïû•Ïπò (CPU)",
      "tags": [
        "Hardware",
        "CPU"
      ],
      "summary": "CPU",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "Ïª¥Ìì®ÌÑ∞",
        "ÌïòÎìúÏõ®Ïñ¥"
      ],
      "images": [
        {
          "src": "/post/computer/multicore-processor.png",
          "alt": "Î©ÄÌã∞ÏΩîÏñ¥ ÌîÑÎ°úÏÑ∏ÏÑú"
        },
        {
          "src": "/post/computer/cpu-core-structure.png",
          "alt": "CPU ÏΩîÏñ¥"
        }
      ],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "CPUÎûÄ?::what-is-cpu",
            "title": "CPUÎûÄ?",
            "fragment": "what-is-cpu",
            "children": []
          },
          {
            "rank": 2,
            "origin": "CoreÏùò Íµ¨Ï°∞::core-structure",
            "title": "CoreÏùò Íµ¨Ï°∞",
            "fragment": "core-structure",
            "children": [
              {
                "rank": 3,
                "origin": "Control Unit (Ï†úÏñ¥Ïû•Ïπò)::control-unit",
                "title": "Control Unit (Ï†úÏñ¥Ïû•Ïπò)",
                "fragment": "control-unit",
                "children": []
              },
              {
                "rank": 3,
                "origin": "Data Processing Unit (Ï≤òÎ¶¨Ïû•Ïπò)::data-processing-unit",
                "title": "Data Processing Unit (Ï≤òÎ¶¨Ïû•Ïπò)",
                "fragment": "data-processing-unit",
                "children": []
              }
            ]
          }
        ]
      }
    },
    "description": "",
    "content": "\r\n## CPUÎûÄ?::what-is-cpu\r\n\r\n**C**entral **P**rocessing **U**nit (Ïù¥Ìïò `CPU`)Îäî Ïª¥Ìì®ÌÑ∞Ïùò Î™®Îì† Ïó∞ÏÇ∞ÏùÑ Ïã§ÌñâÌïòÍ±∞ÎÇò Ï≤òÎ¶¨ÌïòÎäî ÌïµÏã¨Ï†ÅÏù∏ Ï†úÏñ¥Ïû•ÏπòÏù¥Î©∞ `Ï§ëÏïôÏ≤òÎ¶¨Ïû•Ïπò`ÎùºÍ≥†ÎèÑ ÎßêÌïúÎã§. \r\nÏª¥Ìì®ÌÑ∞Ïóê ÌïÑÏàòÏ†ÅÏù∏ 4ÎåÄ Ï£ºÏöîÍ∏∞Îä•(`Í∏∞Ïñµ`, `Ìï¥ÏÑù`, `Ïó∞ÏÇ∞`, `Ï†úÏñ¥`)ÏùÑ Í¥ÄÎ¶¨ÌïòÎäî Í∞ÄÏû• Ï§ëÏöîÌïú Ïû•ÏπòÏù¥Îã§.\r\n1\r\nÏ≤òÎ¶¨Í∏∞, ÌîÑÎ°úÏÑ∏ÏÑú Îì± Ïó¨Îü¨ Ïù¥Î¶ÑÏù¥ ÏûàÏúºÎ©∞ Ïª¥Ìì®ÌÑ∞Ïóê Îî∞Îùº ÌïúÍ∞ú ÎòêÎäî Í∑∏ Ïù¥ÏÉÅÏùò Ïû•ÏπòÍ∞Ä Îì§Ïñ¥Í∞ÑÎã§. ÏùºÎ∞òÏ†ÅÏúºÎ°úÎäî ÌîÑÎ°úÏÑ∏ÏÑú Ïπ© ÌïúÍ∞úÎ•º ÏùòÎØ∏ ÌïòÏßÄÎßå, ÏóîÏßÄÎãàÏñ¥ ÏûÖÏû•ÏóêÏÑúÎäî Î™áÍ∞úÍ∞Ä Ï°¥Ïû¨ÌïòÎì† Ï≤òÎ¶¨Î•º ÌïòÎäî Ïó≠Ìï†ÏùÄ Î≥ÄÌïòÏßÄ ÏïäÍ∏∞Ïóê ÌîÑÎ°úÏÑ∏ÏÑúÎùºÍ≥† Í∑∏ÎÉ• Îßê Ìï† Ïàò ÎèÑ ÏûàÎã§.  \r\n\r\n![Î©ÄÌã∞ÏΩîÏñ¥ ÌîÑÎ°úÏÑ∏ÏÑú](/post/computer/multicore-processor.png)\r\n:{ \"max-width\": \"300px\", \"align\": \"center\", \"description\": \"Î©ÄÌã∞ÏΩîÏñ¥Îäî ÌïòÎÇòÏùò Ïπ©Ïóê ÎëêÍ∞ú Ïù¥ÏÉÅÏùò ÏΩîÏñ¥Î•º Í∞ÄÏßÄÎäî ÏÑ§Í≥ÑÎ•º ÏùòÎØ∏ÌïúÎã§.\" }\r\n\r\nCPUÏùò ÏΩîÏñ¥Îäî Ïã§ÏßàÏ†ÅÏúºÎ°ú Ïó∞ÏÇ∞ÏùÑ ÏàòÌñâÌïòÎäî Ïû•ÏπòÏù¥Îã§. ÏΩîÏñ¥ ÎÇ¥ÏóêÎäî Ïó∞ÏÇ∞ÌïòÎäî Í≥ºÏ†ïÏóêÏÑú ÏûÑÏãúÎ°ú Ï†ÅÏ†úÌï† Ïó¨Îü¨ Î†àÏßÄÏä§ÌÑ∞Î•º Í∞ñÍ≥† ÏûàÎã§.\r\nÏ†úÏ°∞ÏÇ¨Î≥ÑÎ°ú [Ï∫êÏãúÎ©îÎ™®Î¶¨]() Íµ¨Ï°∞Í∞Ä Îã§Î•¥ÏßÄÎßå, ÏôºÏ™ΩÏùò Í≤ΩÏö∞Îäî `L2 Ï∫êÏãú`Îäî ÌîÑÎ°úÏÑ∏ÏÑú ÎÇ¥ÏóêÏÑú Í≥µÏú†Í∞Ä Í∞ÄÎä•ÌïòÎã§.  \r\n\r\nÎïåÎ¨∏Ïóê `Level 1 Ï∫êÏãú(Ïù¥Ìïò L1)`ÏóêÎäî Ï†ëÍ∑ºÏù¥ Îß§Ïö∞ Îπ†Î•¥ÏßÄÎßå Î∞òÎåÄÎ°ú L2Îäî Í≤ΩÌï©ÏúºÎ°ú Ïù∏Ìï¥ Ï†ëÍ∑ºÏóê ÎåÄÌïú [ÌÅ¥Îü≠]() ÎèôÍ∏∞ÌôîÎ°ú ÏãúÏä§ÌÖú ÏãúÍ∞ÑÏùÑ ÎßûÏ∂îÏñ¥ ÏàúÏ∞®Ï†ÅÏù∏ Ï†ëÍ∑ºÏù¥ ÌïÑÏöîÌïòÍ∏∞ ÎïåÎ¨∏Ïóê `L1`Ïóê ÎπÑÌï¥ ÎäêÎ¶¨Îã§.\r\nÏΩîÏñ¥Î≥ÑÎ°ú `L2`Î•º ÎÇ¥Ïû•ÌïòÍ≥† ÏûàÎäî CPUÎèÑ ÏûàÍ≥†, L2 Î∂ÄÌÑ∞ Í≥µÏú†ÌïòÎäî CPUÎèÑ ÏûàÎã§.\r\n\r\n[Ïù∏ÌÖîÏùò Î©îÎ™®Î¶¨ ÏÑ±Îä• ÏöîÏïΩ](https://www.intel.com/content/www/us/en/developer/articles/technical/memory-performance-in-a-nutshell.html)Ïóê Îî∞Î•¥Î©¥ Í∞ÑÎã®Ìïú Ï∞®Ïù¥Îäî ÏïÑÎûòÏôÄ Í∞ôÎã§.\r\n\r\n| Î©îÎ™®Î¶¨      | ÌÅ¨Í∏∞    | ÏãúÍ∞Ñ     | ÎåÄÏó≠Ìè≠    |\r\n|----------|-------|--------|--------|\r\n| L1 cache | 32KB  | 1ns    | 1TB/s  |\r\n| L2 cache | 256KB | 4ns    | 1TB/s  |\r\n| L3 cache | 8MB < | 40ns < | 400GB/s | \r\n:{ \"align\": \"center\", \"description\": \"Ïù∏ÌÖî Ï∫êÏãúÎ©îÎ™®Î¶¨Ïùò ÏÑ±Îä• ÎπÑÍµêÌëú\" }\r\n\r\n## CoreÏùò Íµ¨Ï°∞::core-structure\r\n\r\n![CPU ÏΩîÏñ¥](/post/computer/cpu-core-structure.png)\r\n:{ \"align\": \"center\", \"max-width\": \"500px\", \"description\": \"Ï§ëÏïôÏ≤òÎ¶¨Ïû•ÏπòÏùò ÏΩîÏñ¥ Íµ¨Ï°∞\" }\r\n\r\nCPU Core ÏïàÏóêÏÑúÎäî ÌÅ¨Í≤å Ï†úÏñ¥Ïû•ÏπòÏôÄ Ï≤òÎ¶¨Ïû•Ïπò ÎëêÍ∞ÄÏßÄÎ°ú ÎÇòÎâúÎã§.\r\n\r\n### Control Unit (Ï†úÏñ¥Ïû•Ïπò)::control-unit\r\n\r\nÏ†úÏñ¥Ïû•ÏπòÎäî `CPU`ÏôÄ Îã§Î•∏ Ï£ºÎ≥Ä Ïû•ÏπòÏôÄÏùò Îç∞Ïù¥ÌÑ∞ ÌùêÎ¶ÑÏùÑ Ï†úÏñ¥ÌïòÎ©∞, Í∞Å Ïû•ÏπòÎ°ú Ï†úÏñ¥Ïã†Ìò∏Î•º Î≥¥ÎÇ¥Ïñ¥ Î™ÖÎ†πÏñ¥Î•º Ïã§ÌñâÌïòÎèÑÎ°ù ÌïúÎã§.\r\nCPUÏùò [Î™ÖÎ†πÏñ¥ ÏÇ¨Ïù¥ÌÅ¥]()ÏùÑ Ï†úÏñ¥ÌïòÎ©∞, Î™ÖÎ†πÏñ¥Î•º Ìï¥ÎèÖÌïòÍ≥† Ïã§ÌñâÌïòÎäî Ïó≠Ìï†ÏùÑ ÌïúÎã§.\r\n\r\n**Ï†úÏñ¥ Ïû•ÏπòÏóê ÏÜçÌïòÎäî ÎåÄÌëúÏ†ÅÏù∏ Íµ¨ÏÑ±ÏöîÏÜå**\r\n\r\n1. [Î™ÖÎ†πÏñ¥ ÎîîÏΩîÎçî (Instruction Decoder)]()\r\n    * Î™ÖÎ†πÏñ¥Î•º Ìï¥ÎèÖÌïòÍ≥†, ÌïÑÏöîÌïú ÏûëÏóÖÏùÑ Í≤∞Ï†ïÌïúÎã§.\r\n2. [Ï†úÏñ¥ Ïã†Ìò∏ ÏÉùÏÑ±Í∏∞ (Control Signal Generator)]()\r\n    * Î™ÖÎ†πÏñ¥Î•º Ìï¥ÎèÖÌïú Í≤∞Í≥ºÏóê Îî∞Îùº Ï†úÏñ¥ Ïã†Ìò∏Î•º ÏÉùÏÑ±ÌïúÎã§.\r\n3. [Ïù∏ÌÑ∞ÎüΩÌä∏ Ïª®Ìä∏Î°§Îü¨ (Interrupt Controller)]()\r\n    * Ïù∏ÌÑ∞ÎüΩÌä∏Í∞Ä Î∞úÏÉùÌïòÎ©¥, Ìï¥Îãπ Ïù∏ÌÑ∞ÎüΩÌä∏Î•º Ï≤òÎ¶¨ÌïúÎã§.\r\n4. [ÌÅ¥Îü≠ Î∞úÏÉùÍ∏∞ (Clock Generator)]()\r\n    * CPUÏùò ÌÅ¥Îü≠ÏùÑ ÏÉùÏÑ±ÌïúÎã§.\r\n5. [ÌÉÄÏù¥Î∞ç Ïã†Ìò∏ Î∞úÏÉùÍ∏∞ (Timing Signal Generator)]()\r\n    * ÌÅ¥Îü≠ Î∞úÏÉùÍ∏∞Î°ú Î∂ÄÌÑ∞ Ï£ºÍ∏∞Ïã†Ìò∏Î•º Î∞õÏïÑ ÏûëÏóÖ ÌùêÎ¶ÑÏùÑ ÎÇòÎààÎã§.\r\n6. [Î™ÖÎ†πÏñ¥ ÏÇ¨Ïù¥ÌÅ¥ Ï†úÏñ¥Í∏∞ (Instruction Cycle Controller)]()\r\n    * ÌÉÄÏù¥Î∞ç Ïã†Ìò∏Î•º Î∞õÏïÑ Î™ÖÎ†πÏñ¥ Ïã§Ìñâ ÏàúÏÑúÎ•º Í¥ÄÎ¶¨ÌïúÎã§.\r\n\r\n### Data Processing Unit (Ï≤òÎ¶¨Ïû•Ïπò)::data-processing-unit\r\n\r\nÏ≤òÎ¶¨Ïû•ÏπòÎäî Ï†úÏñ¥Ïû•ÏπòÍ∞Ä Î™ÖÎ†πÏñ¥Î•º Ìï¥ÎèÖÌïòÍ≥†, Ïã§ÌñâÌï† ÏûëÏóÖÏùÑ Í≤∞Ï†ïÌïòÎ©¥, Ïã§Ï†úÎ°ú Îç∞Ïù¥ÌÑ∞Î•º Ï≤òÎ¶¨ÌïòÎäî Ïû•ÏπòÏù¥Îã§.\r\n\r\n**Ï†úÏñ¥ Ïû•ÏπòÏóê ÏÜçÌïòÎäî ÎåÄÌëúÏ†ÅÏù∏ Íµ¨ÏÑ±ÏöîÏÜå**\r\n\r\n1. [ÏÇ∞Ïà† ÎÖºÎ¶¨ Ïó∞ÏÇ∞ Ïû•Ïπò (Arithmetic And Logical Unit)]()\r\n    * ÏÇ∞Ïà†(ÏÇ¨Ïπô: +, ‚àí, ‚úï, √∑)Ïó∞ÏÇ∞Í≥º ÎÖºÎ¶¨(AND, OR, NOT Îì±)Ïó∞ÏÇ∞ÏùÑ Ï≤òÎ¶¨ÌïúÎã§.\r\n2. [Î∂ÄÎèôÏÜåÏàòÏ†ê Ïó∞ÏÇ∞ Ïû•Ïπò (Floating Point Unit)]()\r\n    * Ïã§Ïàò Îç∞Ïù¥ÌÑ∞ Ïó∞ÏÇ∞ÏùÑ Ï≤òÎ¶¨ÌïúÎã§.\r\n3. [Î†àÏßÄÏä§ÌÑ∞ (Register)]()\r\n    * Îç∞Ïù¥ÌÑ∞Î•º Ï†ÄÏû•ÌïòÍ≥†, Ïó∞ÏÇ∞Ïóê ÌïÑÏöîÌïú Îç∞Ïù¥ÌÑ∞Î•º ÏûÑÏãúÎ°ú Ï†ÄÏû•ÌïúÎã§.\r\n4. [Ï∫êÏãú Î©îÎ™®Î¶¨ (Cache Memory)]()\r\n    * Îç∞Ïù¥ÌÑ∞Î•º Îπ†Î•¥Í≤å Ï†ëÍ∑ºÌïòÍ∏∞ ÏúÑÌïú ÏûÑÏãú Ï†ÄÏû•ÏÜåÏù¥Îã§.\r\n5. [ÌååÏù¥ÌîÑ ÎùºÏù∏ (Pipeline)]()\r\n    * Î™ÖÎ†πÏñ¥Î•º Ïó¨Îü¨ Îã®Í≥ÑÎ°ú ÎÇòÎàÑÏñ¥ Î≥ëÎ†¨Î°ú Ï≤òÎ¶¨ÌïúÎã§.\r\n"
  },
  {
    "path": "/docs/computer-science/computer-structure/direct-memory-access",
    "header": {
      "layout": "wiki",
      "date": 1596374520000,
      "title": "Direct Memory Access (DMA)",
      "tags": [
        "Hardware",
        "DMAC",
        "Direct Memory Access Controller"
      ],
      "summary": "DMA",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "Ïª¥Ìì®ÌÑ∞",
        "ÌïòÎìúÏõ®Ïñ¥"
      ],
      "images": [
        {
          "src": "/post/computer/data-transfer-between-memory-and-io-device.png",
          "alt": "Î©îÎ™®Î¶¨ÏôÄ I/O Ïû•ÏπòÍ∞ÑÏùò Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ°"
        },
        {
          "src": "/post/computer/dma-request.png",
          "alt": "DMA ÏöîÏ≤≠"
        },
        {
          "src": "/post/computer/cpu-and-io-devices.png",
          "alt": "ÏãúÏä§ÌÖúÎ≤ÑÏä§Î°ú Ïó∞Í≤∞ÎêòÏñ¥ ÏûàÎäî Í∞Å Ïû•ÏπòÎì§"
        }
      ],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "DMAÎûÄ Î¨¥ÏóáÏù∏Í∞Ä?::what-is-dma",
            "title": "DMAÎûÄ Î¨¥ÏóáÏù∏Í∞Ä?",
            "fragment": "what-is-dma",
            "children": []
          },
          {
            "rank": 2,
            "origin": "DMAÎäî Ïñ¥ÎñªÍ≤å ÏÇ¨Ïö©ÎêòÎäîÍ∞Ä?::how-dma-used-for",
            "title": "DMAÎäî Ïñ¥ÎñªÍ≤å ÏÇ¨Ïö©ÎêòÎäîÍ∞Ä?",
            "fragment": "how-dma-used-for",
            "children": [
              {
                "rank": 3,
                "origin": "DMA ÎèôÏûë ÏàúÏÑú::sequence-of-dma",
                "title": "DMA ÎèôÏûë ÏàúÏÑú",
                "fragment": "sequence-of-dma",
                "children": []
              },
              {
                "rank": 3,
                "origin": "DMA ÎèôÏûëÎ™®Îìú::mode-of-dma",
                "title": "DMA ÎèôÏûëÎ™®Îìú",
                "fragment": "mode-of-dma",
                "children": []
              }
            ]
          }
        ]
      }
    },
    "description": "",
    "content": "\r\n## DMAÎûÄ Î¨¥ÏóáÏù∏Í∞Ä?::what-is-dma\r\n\r\nDMAÎäî `IO Ïû•Ïπò`ÏôÄ `Î©îÎ™®Î¶¨`Í∞ÑÏùò Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ°ÏùÑ ÏúÑÌïú Í∏∞Ïà†Ïù¥Îã§.\r\n\r\nÏ†ïÌôïÌûàÎäî Î™®Îì† I/OÏû•ÏπòÎäî ÏïÑÎãàÍ≥†, ÎåÄÏö©Îüâ Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ°ÏùÑ Î™©Ï†ÅÏúºÎ°ú ÌïòÎäî ÌïòÎìúÏõ®Ïñ¥ÏôÄ Ïó∞Í≤∞ÎêòÏñ¥ÏûàÎã§.  \r\nÏ†ÄÏû• Ïû•ÏπòÏùò Í≤ΩÏö∞ `HDD/SSD`, `CD/DVD` Í∑∏Î¶¨Í≥† Î©ÄÌã∞ÎØ∏ÎîîÏñ¥Ïùò Í≤ΩÏö∞ `Í∑∏ÎûòÌîΩ Ïπ¥Îìú(GPU)`, `ÏÇ¨Ïö¥Îìú Ïπ¥Îìú` Îì±Ïù¥ ÏûàÎã§.\r\n\r\n[`PIO`](/wiki/programmed-io)Î∞©ÏãùÏóêÏÑúÎäî [CPU](/wiki/central-processing-unit)Í∞Ä Îç∞Ïù¥ÌÑ∞Î•º Ìïú ÏõåÎìú ÎòêÎäî Î∞îÏù¥Ìä∏ÎßàÎã§ Ï†ÑÏÜ°ÌïòÍ∏∞ ÎïåÎ¨∏Ïóê, ÏÜçÎèÑÍ∞Ä Îπ†Î•∏ **I/O Ïû•Ïπò**Ïùò Í≤ΩÏö∞ CPUÏùò Ïã§Ï†ú ÌîÑÎ°úÏÑ∏Ïä§ ÏûëÏóÖ ÏãúÍ∞ÑÏùÑ Ï§ÑÏó¨ Îã§Î•∏ ÏûëÏóÖÏùÑ ÏàòÌñâÌïòÎäîÎç∞ Î∞©Ìï¥Í∞ÄÎêúÎã§.  \r\nÏù¥Î•º Ìï¥Í≤∞ÌïòÍ∏∞ÏúÑÌï¥ Îì±Ïû•Ìïú DMA Í∏∞Ïà†ÏùÄ `I/O Ïû•ÏπòÏóêÏÑú Î©îÎ™®Î¶¨`Î°ú ÎòêÎäî `Î©îÎ™®Î¶¨ÏóêÏÑú I/O Ïû•Ïπò`Î°ú Îç∞Ïù¥ÌÑ∞Î•º CPUÏùò Í∞úÏûÖÏóÜÏù¥ Ï†ÑÏÜ°ÌïòÏó¨ CPUÏùò Î∂ÄÎã¥ÏùÑ Ï§ÑÏó¨Ï§ÄÎã§.\r\n\r\n![Î©îÎ™®Î¶¨ÏôÄ I/O Ïû•ÏπòÍ∞ÑÏùò Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ°](/post/computer/data-transfer-between-memory-and-io-device.png)\r\n:{ \"max-width\": \"400px\", \"align\": \"center\", \"wrapper-class\": \"justify-center\", \"description\": \"Î©îÎ™®Î¶¨ÏôÄ I/O Ïû•ÏπòÍ∞ÑÏùò Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ°\" }\r\n\r\n## DMAÎäî Ïñ¥ÎñªÍ≤å ÏÇ¨Ïö©ÎêòÎäîÍ∞Ä?::how-dma-used-for\r\n\r\n**D**irect **M**emory **A**cess **C**ontroller (Ïù¥Ìïò `DMAC`)Îäî ÌïòÎìúÏõ®Ïñ¥ Ïû•ÏπòÎ°úÏÑú, [Î©îÎ™®Î¶¨]() ÏûÖÏ∂úÎ†• Ïû•ÏπòÍ∞ÑÏùò Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ°ÏùÑ DMA Í∏∞Ïà†Î°úÏÑú Í¥ÄÎ¶¨ÌïòÎäî Ïû•ÏπòÏù¥Îã§.\r\n\r\n\r\n### DMA ÎèôÏûë ÏàúÏÑú::sequence-of-dma\r\n\r\nÏû•Ïπò AÏóêÏÑú Ïû•Ïπò BÎ°ú `DMA` ÏöîÏ≤≠Ïù¥ Îì§Ïñ¥ÏôîÎã§Îäî Í∞ÄÏ†ïÌïòÏóê, ÏàúÏÑúÎ•º ÏÑ§Î™ÖÌïòÏûêÎ©¥ Îã§ÏùåÍ≥º Í∞ôÎã§.\r\n\r\n1. Ïû•Ïπò Ïª®Ìä∏Î°§Îü¨Îäî `DMAC`Í≥º Î¨ºÎ¶¨Ï†ÅÏúºÎ°ú Ïó∞Í≤∞ ÎêòÏñ¥ÏûàÎäî Ïã†Ìò∏ÏÑ†Ïóê  DMA Request(`DMA ÏöîÏ≤≠`)ÏùÑ Î≥¥ÎÇ∏ ÌõÑ `DMAC`ÏóêÏÑú ÏöîÏ≤≠ÏùÑ Î∞õÏïÑÎì§Ïù¥Î©¥, Ïû•Ïπò Ïª®Ìä∏Î°§Îü¨Î°ú DMA Acknowledge(`DMA ÏäπÏù∏`) Ïã†Ìò∏Î•º Î≥¥ÎÇ∏Îã§.\r\n\r\n   ![DMA ÏöîÏ≤≠](/post/computer/dma-request.png)\r\n   :{ \"max-width\": \"400px\", \"align\": \"center\", \"description\": \"Ïû•Ïπò Ïª®Ìä∏Î°§Îü¨Ïùò DMA ÏöîÏ≤≠\" }\r\n\r\n2. Îç∞Ïù¥ÌÑ∞Î•º Ï†ÑÏÜ°ÌïòÍ∏∞ Ï†ÑÏóê Í∞Å Ïû•ÏπòÏóê Î™ÖÎ†πÏùÑ Ï†ÑÎã¨ÌïúÎã§.\r\n\r\n   * Îç∞Ïù¥ÌÑ∞Î•º ÏùΩÍ∏∞ÏúÑÌï¥ ÎîîÏä§ÌÅ¨ Ïª®Ìä∏Î°§Îü¨Î°ú `Ï£ºÏÜå Ïã†Ìò∏`(Ïª®Ìä∏Î°§Îü¨Î°ú Î∂ÄÌÑ∞ Ï†ÑÎã¨Î∞õÏùÄ ÏùΩÏùÑ Î°úÏª¨Î≤ÑÌçº Ï£ºÏÜå)ÏôÄ `Ï†úÏñ¥ Ïã†Ìò∏` (ÏùΩÍ∏∞ Î™ÖÎ†π)ÏùÑ Î≥¥ÎÇ∏Îã§.  \r\n   ÎòêÌïú Î©îÎ™®Î¶¨ÏóêÎäî `Ï£ºÏÜå Ïã†Ìò∏`(Ï†ÑÎã¨Î∞õÏùÄ Î©îÎ™®Î¶¨Ïóê Ïì∞Í∏∞ Ï£ºÏÜå)ÏôÄ `Ï†úÏñ¥Ïã†Ìò∏`(Ïì∞Í∏∞ Î™ÖÎ†π)ÏùÑ Î≥¥ÎÇ¥Î©¥ Îç∞Ïù¥ÌÑ∞Î•º Ï†ÑÏÜ°Ìï† Ï§ÄÎπÑÍ∞Ä ÏôÑÎ£å ÎêúÎã§.\r\n\r\n3. `DMAC`Îäî Îç∞Ïù¥ÌÑ∞Î•º Ï†ÑÏÜ°Ìï† ÏãúÏä§ÌÖú Î≤ÑÏä§Ïùò ÏÜåÏú†Í∂åÏùÑ ÏñªÍ∏∞ÏúÑÌï¥ CPUÏóêÍ≤å Ï†úÏñ¥ Î≤ÑÏä§Î°ú `Bus Request(BR)` Ïã†Ìò∏Î•º Ï†ÑÏÜ°ÌïúÎã§. CPUÎäî `Bus Grant`Ïã†Ìò∏Î•º Ï†ÑÏÜ°ÌïòÏó¨ Î≤ÑÏä§ ÏÇ¨Ïö©ÏùÑ ÌóàÍ∞ÄÌïúÎã§.\r\n\r\n   ![ÏãúÏä§ÌÖúÎ≤ÑÏä§Î°ú Ïó∞Í≤∞ÎêòÏñ¥ ÏûàÎäî Í∞Å Ïû•ÏπòÎì§](/post/computer/cpu-and-io-devices.png)\r\n   :{ \"max-width\": \"400px\", \"align\": \"center\", \"description\": \"ÏãúÏä§ÌÖú Î≤ÑÏä§ÏôÄ Ïó∞Í≤∞Îêú Í∞Å Ïû•ÏπòÎì§\" }\r\n\r\n   * Ïã§Ï†úÎ°úÎäî I/O Ïû•ÏπòÏùò Ïª®Ìä∏Î°§Îü¨ÏôÄ Ïó∞Í≤∞ÎêòÏñ¥ ÏûàÏúºÎ©∞, `BR`Í≥º `BG` Î™®Îëê Ï†úÏñ¥Î≤ÑÏä§Î•º ÌÜµÌï¥ Ï†ÑÎã¨ÎêúÎã§. Í∞Å Ïû•ÏπòÎßàÎã§ Îç∞Ïù¥ÌÑ∞Î•º Ï§ÄÎπÑÌïòÎäî Í≥ºÏ†ïÏù¥ Îã§Î•¥Í∏¥ ÌïòÏßÄÎßå, Ïû•Ïπò A(HDD)ÏóêÏÑú Ïû•Ïπò B(RAM)ÏúºÎ°ú Îç∞Ïù¥ÌÑ∞Î•º Ï†ÑÏÜ°ÌïòÎäî Í≥ºÏ†ïÏóêÏÑú Îç∞Ïù¥ÌÑ∞Î•º Ï§ÄÎπÑÎäî Îã§ÏùåÍ≥º Í∞ôÎã§.\r\n   Î®ºÏ†Ä `CPU`Í∞Ä ÎîîÏä§ÌÅ¨ ÏùΩÍ∏∞ÏöîÏ≤≠ÏùÑ ÌïòÎìúÎîîÏä§ÌÅ¨ [ÎìúÎùºÏù¥Î≤Ñ]()Î°ú Ï†ÑÏÜ°ÌïúÎã§. Ïù¥Îïå ÎîîÏä§ÌÅ¨Ïùò ÏùΩÏùÑ ÏÑπÌÑ∞Î≤àÌò∏([LBA]()) ÏôÄ ÏùΩÏùÑ Ïñë, Ïì∞Í∏∞Í∞Ä ÌïÑÏöîÌïú Î©îÎ™®Î¶¨ Ï£ºÏÜå Îì±ÏùÑ Ï†ÑÎã¨ÌïúÎã§.  \r\n\r\n   * ÎîîÏä§ÌÅ¨ ÎìúÎùºÏù¥Î≤ÑÎäî Ï†ÑÎã¨Î∞õÏùÄ Ï†ïÎ≥¥Î•º Ïù¥Ïö©Ìï¥ Îç∞Ïù¥ÌÑ∞Î•º ÏùΩÍ≥†, ÎîîÏä§ÌÅ¨ Ïª®Ìä∏Î°§Îü¨ Î°úÏª¨Î≤ÑÌçºÏóê Îç∞Ïù¥ÌÑ∞Î•º ÏûÑÏãúÎ°ú Ï†ÄÏû•ÌïúÎã§. Í∑∏Î¶¨Í≥† Îç∞Ïù¥ÌÑ∞Î•º ÏùΩÏùÑÏ§ÄÎπÑÍ∞Ä ÏôÑÎ£åÎêòÎ©¥, `DMAC`ÏúºÎ°ú `DMA ÏöîÏ≤≠`ÏùÑ Ï†ÑÏÜ°ÌïúÎã§.\r\n   `DMAC`ÏùÄ ÏãúÏä§ÌÖú Ï†úÏñ¥Î•º ÏúÑÌï¥ `CPU`ÏóêÍ≤å `BR`ÏùÑ Î≥¥ÎÇ¥Í≥†, `CPU`Îäî `BG`Î•º Î≥¥ÎÇºÏñ¥ Ï†úÏñ¥ ÏäπÏù∏ÏùÑ ÌïòÎ©∞, ÌÉÄÏûÑÏïÑÏõÉÏùÑ Ï†ïÌïòÏó¨ [ÌÉÄÏù¥Î®∏](/wiki/interrupt#timer)Î•º ÏÑ§Ï†ïÌïúÎã§. \r\n\r\n   > ÎßåÏïΩ ÌÉÄÏûÑÏïÑÏõÉÏù¥ Î∞úÏÉùÌïúÎã§Î©¥ ÌÉÄÏù¥Î®∏Îäî Ïù∏ÌÑ∞ÎüΩÌä∏Î•º Î∞úÏÉùÏãúÏºú CPUÏóêÍ≤å ÏïåÎ¶∞Îã§.\r\n   :{ \"type\": \"caution\", \"icon\": \"warning-octagon\" }  \r\n\r\n   * `BG`Î•º Î∞õÎäî Í≤ΩÏö∞ Ï¶âÏãú ÌöåÎ°úÍ∞Ä Ïó∞Í≤∞ÎêòÏñ¥ ÏãúÏä§ÌÖúÎ≤ÑÏä§Ïùò ÏÜåÏºìÌäπÏÑ±ÏúºÎ°ú Îç∞Ïù¥ÌÑ∞Í∞Ä Ï†ÑÎã¨ÎêúÎã§.\r\n\r\n4. Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ°Ï†úÏñ¥Î•º Î™®Îëê ÎßàÏπú `DMAC`ÏùÄ `CPU`ÏóêÍ≤å ÏãúÏä§ÌÖú Î≤ÑÏä§Ïùò ÏÜåÏú†Í∂åÏùÑ Î∞òÌôòÌïúÎã§.\r\n   * Ïù¥ Í≤ΩÏö∞ [Ïù∏ÌÑ∞ÎüΩÌä∏](/wiki/interrupt)Î•º Î∞úÏÉùÏãúÏºú CPUÏóê ÏûëÏóÖÏôÑÎ£åÎ•º ÏïåÎ†§ Î≤ÑÏä§ÏÜåÏú†Í∂åÏùÑ Î∞òÎÇ©ÌïúÎã§. \r\n\r\n### DMA ÎèôÏûëÎ™®Îìú::mode-of-dma\r\n\r\n**ÏÇ¨Ïù¥ÌÅ¥ Ïä§Ìã∏ÎßÅ(Cycle Stealing)**\r\n\r\n`Cycle Stealing(Ïù¥Ìïò CS)`Îäî Îç∞Ïù¥ÌÑ∞Î•º Word Îã®ÏúÑÎ°ú Ï†ÑÏÜ°ÌïúÎã§. ÏûëÏùÄ Îã®ÏúÑÏùò Îç∞Ïù¥ÌÑ∞Î•º Ï†ÑÏÜ°Ìï† Îïå ÏõåÎìúÎã®ÏúÑÎ°ú Ï≤òÎ¶¨ÎêòÍ∏∞ ÎïåÎ¨∏Ïóê, Ïû¶ÏùÄ Ïù∏ÌÑ∞ÎüΩÌä∏Í∞Ä Î∞úÏÉùÎêúÎã§.\r\nÎî∞ÎùºÏÑú DMAÏóê ÏùòÌïú Ïù∏ÌÑ∞ÎüΩÌä∏Î°ú CPU `Cycle`ÏùÑ ÌõîÏπòÍ≤å ÎêúÎã§. (Ïã§Ï†úÎ°ú ÏòõÎÇ†Ïùò Ïª¥Ìì®ÌÑ∞ Íµ¨Ï°∞ÏóêÏÑúÎäî DMA ÏÇ¨Ïö©Ïãú ÌöåÎ°úÎ•º ÎßâÏïÑÎ≤ÑÎ¶ºÏúºÎ°úÏç® `Cycle`ÏùÑ ÌõîÏ≥§Îã§.) \r\n\r\n**Î≤ÑÏä§Ìä∏ Î™®Îìú(Bust mode)**\r\n\r\n`Bust Mode`Îäî ÎçîÌÅ∞ Îç∞Ïù¥ÌÑ∞Î•º DMA Ìï† Îïå ÏÇ¨Ïö©ÎêòÎ©∞ Î©îÎ™®Î¶¨Ïùò Block Îã®ÏúÑ(`4KB`, `8KB`, `64KB`)Î°ú Ï≤òÎ¶¨ÎêúÎã§.  \r\nÎ∏îÎ°ùÎã®ÏúÑ Ï†ÑÏÜ°ÏúºÎ°úÏÑú Ïù∏ÌÑ∞ÎüΩÌä∏Í∞Ä Î∞úÏÉùÎêòÍ∏∞ ÎïåÎ¨∏Ïóê, ÏÑ±Îä•Ìñ•ÏÉÅÏóê ÌÅ∞Ïù¥Ï†êÏùÑ Ï§ÄÎã§.\r\n"
  },
  {
    "path": "/docs/computer-science/computer-structure/interrupt",
    "header": {
      "layout": "wiki",
      "title": "CPUÏôÄ Ïù∏ÌÑ∞ÎüΩÌä∏ (Interrupt)",
      "date": 1596269400000,
      "tags": [
        "Operating System",
        "Interrupt"
      ],
      "summary": "Ïù∏ÌÑ∞ÎüΩÌä∏",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "Ïª¥Ìì®ÌÑ∞",
        "ÌïòÎìúÏõ®Ïñ¥"
      ],
      "images": [
        {
          "src": "/post/computer/move-unit.png",
          "alt": "Ï∫êÎ¶≠ÌÑ∞Ïùò Ïù¥Îèô"
        }
      ],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "Ïù∏ÌÑ∞ÎüΩÌä∏Îäî Î¨¥ÏóáÏù∏Í∞Ä?::what-is-interrupt",
            "title": "Ïù∏ÌÑ∞ÎüΩÌä∏Îäî Î¨¥ÏóáÏù∏Í∞Ä?",
            "fragment": "what-is-interrupt",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Ïù∏ÌÑ∞ÎüΩÌä∏ ÏÑúÎπÑÏä§ Î£®Ìã¥::interrupt-service-routine",
            "title": "Ïù∏ÌÑ∞ÎüΩÌä∏ ÏÑúÎπÑÏä§ Î£®Ìã¥",
            "fragment": "interrupt-service-routine",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Ïù∏ÌÑ∞ÎüΩÌä∏Ïùò Îß§Ïª§ÎãàÏ¶ò::mechanism-of-interrupt",
            "title": "Ïù∏ÌÑ∞ÎüΩÌä∏Ïùò Îß§Ïª§ÎãàÏ¶ò",
            "fragment": "mechanism-of-interrupt",
            "children": []
          },
          {
            "rank": 2,
            "origin": "ÌÉÄÏù¥Î®∏::timer",
            "title": "ÌÉÄÏù¥Î®∏",
            "fragment": "timer",
            "children": []
          }
        ]
      }
    },
    "description": "",
    "content": "\r\n## Ïù∏ÌÑ∞ÎüΩÌä∏Îäî Î¨¥ÏóáÏù∏Í∞Ä?::what-is-interrupt\r\n\r\ninterrupt `[Àå…™nt…ôÀàr åpt]`\r\n1. (Îßê¬∑ÌñâÎèôÏùÑ) Î∞©Ìï¥ÌïòÎã§[Ï§ëÎã®ÏãúÌÇ§Îã§/Í∞ÄÎ°úÎßâÎã§]\r\n2. (Î¨¥ÏóáÏùÑ Ïû†Íπê) Ï§ëÎã®ÏãúÌÇ§Îã§\r\n\r\nÏÇ¨Ï†Ñ ÏÉÅÏùò `interrupt`(Ïù¥Ìïò Ïù∏ÌÑ∞ÎüΩÌä∏)Îäî ÏúÑÏôÄ Í∞ôÏùÄ Ïñ¥Îñ§ ÌñâÎèôÏù¥ÎÇò ÌùêÎ¶ÑÏùÑ Ï§ëÎã®ÏãúÌÇ§Îäî ÏùòÎØ∏Î°ú Îì±Ïû¨ ÎêòÏñ¥ÏûàÎã§.\r\nÏª¥Ìì®ÌÑ∞ÏóêÏÑúÎèÑ Ïù∏ÌÑ∞ÎüΩÌä∏Îäî Ïñ¥Îñ§ ÌùêÎ¶ÑÏùÑ Ï§ëÏßÄÌïòÎäî Ïó≠Ìï†ÏùÑ ÌïúÎã§.\r\n\r\n[CPU](/wiki/central-processing-unit)Îäî ÏàúÏ∞®Ï†ÅÏúºÎ°ú Î™ÖÎ†πÏñ¥Î•º Ï≤òÎ¶¨ÌïúÎã§. ÌïòÏßÄÎßå ÏòàÏÉÅÏπòÎ™ªÌïòÍ±∞ÎÇò Í∏¥Í∏âÌïúÏÉÅÌô©Ïóê ÏùòÎèÑÏ†ÅÏúºÎ°ú ÌäπÎ≥ÑÌïú Ï≤òÎ¶¨Î•º Ìï¥ÏïºÌïúÎã§.\r\nÏòàÎ•º Îì§Ïñ¥ Ïä§ÌÉÄÌÅ¨ÎûòÌîÑÌä∏ÎÇò Î¶¨Í∑∏Ïò§Î∏åÎ†àÏ†ÑÎìúÏ≤òÎüº 3Ïù∏Ïπ≠ÏãúÏ†êÏóêÏÑú ÎßàÏö∞Ïä§Î°ú ÏßÄÎ©¥ÏùÑ ÌÅ¥Î¶≠ÌïòÎäî Í≤ΩÏö∞, Ìï¥ÎãπÏúÑÏπòÎ°ú Ï∫êÎ¶≠ÌÑ∞Í∞Ä Ïù¥ÎèôÌïúÎã§.\r\nÏù¥ Í≤ΩÏö∞ Ïù¥ÎèôÏù¥ ÎÅùÎÇòÏßÄ ÏïäÏïÑÎèÑ, Ïö∞Î¶¨Îäî ÏÉàÎ°úÏö¥ ÏúÑÏπòÎ•º ÌÅ¥Î¶≠ÌïòÏó¨ Î∞©Ìñ•ÏùÑ Î∞îÍøÄÏàòÎèÑÏûàÎã§. \r\n\r\n![Ï∫êÎ¶≠ÌÑ∞Ïùò Ïù¥Îèô](/post/computer/move-unit.png)\r\n:{ \"align\": \"center\", \"max-width\": \"300px\", \"description\": \"ÎààÍΩÉ ÏãúÎπÑÎ•¥Ïùò Î∞©Ìñ•ÏùÑ Ï°∞ÏûëÌïòÎäî ÌîÑÎ°úÍ≤ê ÏÑ†Ïàò\" }\r\n\r\nÏù¥ Ï≤òÎüº CPUÍ∞Ä Î™ÖÎ†πÏùÑ Ïã§ÌñâÌïòÎäîÏ§ëÏóêÎèÑ Í∏¥Í∏âÌïòÍ±∞ÎÇò, Ïã§ÏãúÍ∞Ñ Ï≤òÎ¶¨Í∞Ä ÌïÑÏöîÌïúÍ≤ΩÏö∞ IRQÎ•º ÌÜµÌï¥, CPUÏóê Ïù∏ÌÑ∞ÎüΩÌä∏ Ïã†Ìò∏Î•º Î≥¥ÎÇ¥ Ïö∞ÏÑ†Ï†ÅÏúºÎ°ú Ï≤òÎ¶¨Î•º ÏàòÌñâÌï† Ïàò ÏûàÎã§.\r\n\r\n> **I**nterrupt **R**e**Q**uest LineÎäî Ïù∏ÌÑ∞ÎüΩÌä∏ ÏöîÏ≤≠ÏùÑ Î∞õÏùÑÏàòÏûàÎäî Ïù∏ÌÑ∞ÎüΩÌä∏ Î≤ÑÏä§Ïù¥Îã§ Ïù¥Îäî ÌïòÎìúÏõ®Ïñ¥ÏóêÏÑú Í∞Å Ïû•ÏπòÍπåÏßÄ Î¨ºÎ¶¨Ï†ÅÏúºÎ°ú Ïó∞Í≤∞Îêú Ïã†Ìò∏ÏÑ†Ïù¥Îã§.\r\n:{ \"type\": \"note\", \"icon\": \"info\"}\r\n\r\n## Ïù∏ÌÑ∞ÎüΩÌä∏ ÏÑúÎπÑÏä§ Î£®Ìã¥::interrupt-service-routine\r\n\r\n**I**nterrupt **S**ervice **R**outine (Ïù¥Ìïò ISR)ÏùÄ Îã§Î•∏ÎßêÎ°ú Interrupt Handler(Ïù∏ÌÑ∞ÎüΩÌä∏ Ìï∏Îì§Îü¨)ÎùºÍ≥†ÎèÑ ÌïúÎã§.\r\n`ISR`ÏùÄ Ïù∏ÌÑ∞ÎüΩÌä∏Î•º Ï≤òÎ¶¨ÌïòÍ∏∞ÏúÑÌïú Ïñ¥Îñ§ ÏùºÎ†®Ïùò ÌîÑÎ°úÏÑ∏Ïä§Ïù¥Îã§. `IRQ`Î•º ÌÜµÌï¥ `CPU`Î°ú Ïù∏ÌÑ∞ÎüΩÌä∏ Ïã†Ìò∏Î•º Î≥¥ÎÇ¥Î©¥(CPUÏùò Ïù∏ÌÑ∞ÎüΩÌä∏), CPUÎäî ÌïòÎçò ÏùºÏùÑ Ï§ëÎã®ÌïòÍ≥† ISRÏù¥ ÏûàÎäî Ï£ºÏÜåÎ°ú Ïã§ÌñâÏùÑ ÏòÆÍ∏¥Îã§.\r\nÍ∑∏Î¶¨Í≥† `ISR`Ïù¥ Ïã§ÌñâÎêúÌõÑ Îã§Ïãú ÏõêÎûò Ïó∞ÏÇ∞ÏùÑ Ïû¨Í∞úÌïúÎã§. ISRÏùÄ Ïù∏ÌÑ∞ÎüΩÌä∏ Î≤àÌò∏ ÌÖåÏù¥Î∏îÎ°ú Íµ¨ÏÑ±ÎêòÏñ¥ÏûàÎã§. Ïù¥Îäî ÏãúÏä§ÌÖúÎßàÎã§ Îã§Î•ºÏàò ÏûàÍ≥† ÏΩúÎ∞±Î£®Ìã¥ Î∞©ÏãùÏúºÎ°ú Ï≤òÎ¶¨ÎêúÎã§.\r\n\r\nÏù∏ÌÑ∞ÎüΩÌä∏ ÏõêÏù∏Ïóê Îî∞Îùº Ï≤òÎ¶¨ÎêòÎäî ISRÏù¥ Î≥ÑÎèÑÎ°ú ÏûàÏúºÎ©∞,Ïù¥Îäî [Ïª§ÎÑê(kernel)]()Ïóê Ï°¥Ïû¨ÌïúÎã§. \r\nÏù∏ÌÑ∞ÎüΩÌä∏Í∞Ä Î∞úÏÉùÎêòÎäî ÏõêÏù∏ÏùÄ ÏùºÎ∞òÏ†ÅÏúºÎ°ú `ÌïòÎìúÏõ®Ïñ¥ Î¶¨ÏÖã`, `Ï†ïÌï¥ÏßÑ Î©îÎ™®Î¶¨ Ïô∏Î∂Ä Ï∞∏Ï°∞`, `0ÏúºÎ°ú ÎÇòÎàÑÍ∏∞` Îì± Ïó¨Îü¨ ÏòàÏô∏Í∞Ä Ï°¥Ïû¨ÌïúÎã§.\r\n\r\nÏù∏ÌÑ∞ÎüΩÌä∏Í∞Ä Î∞úÏÉù(*raise*)ÌïòÎ©¥ `ISR`Ïùò Ï£ºÏÜåÎ•º Interrupt Vector(Ïù¥Ìïò Ïù∏ÌÑ∞ÎüΩÌä∏ Î≤°ÌÑ∞)ÎùºÍ≥† ÌïòÎäî Î∞∞Ïó¥ÏùÑ Ïù∏ÌÑ∞ÎüΩÌä∏ ÏöîÏ≤≠Í≥º Ìï®Íªò Ïû•Ïπò Í≥†Ïú†Î≤àÌò∏Î°ú Ïù∏Îç±Ïã±ÌïúÎã§.\r\nÎòêÌïú `CPU`Îäî Ïù∏ÌÑ∞ÎüΩÌä∏Î•º Ìè¨Ï∞©(*catch*)ÌïòÎ©¥ ÌòÑÏû¨ Ïã§Ìñâ Ï§ëÏù¥Îçò ÏûëÏóÖÏùÑ Ï§ëÎã®ÌïòÍ≥† `ISR`Î°ú Ï†ÑÏÜ°(*dispatch*)ÌïòÎ©¥ Î£®Ìã¥ÏùÑ Ïã§ÌñâÌï¥ÏïºÌïòÍ∏∞ ÎïåÎ¨∏Ïóê Ïã§ÌñâÏ§ëÏù∏ ÏûëÏóÖÏùò Î†àÏßÄÏä§ÌÑ∞ Í∞íÎì§ÏùÑ Ïä§ÌÉùÏóê Ï†ÄÏû•ÌïòÏó¨ ÏÉÅÌÉúÎ•º Î≥¥Ï°¥ÌïúÎã§.\r\nÏù¥Îü¨Ìïú Í∞íÎì§ÏóêÎäî [ÌîÑÎ°úÍ∑∏Îû® Ïπ¥Ïö¥ÌÑ∞(Ïù¥Ìïò PC)](), [Ïä§ÌÉù Ìè¨Ïù∏ÌÑ∞]() Îì± Î≤îÏö© Î†àÏßÄÏä§ÌÑ∞ Îì§Ïù¥ Ìè¨Ìï®ÎêúÎã§. \r\n\r\n| Î≤°ÌÑ∞ Î≤àÌò∏  | ÏÑ§Î™Ö                 |\r\n|--------|--------------------|\r\n| 0      | ÎÇòÎàóÏÖà ÏóêÎü¨             |\r\n| 1      | ÎîîÎ≤ÑÍ∑∏ ÏòàÏô∏             |\r\n| 2      | Null Ïù∏ÌÑ∞ÎüΩÌÑ∞          |\r\n| ...    |\r\n| 18     | Í∏∞Í∏∞ Í≤ÄÏÇ¨              |\r\n| 19~31  | (IntelÏóêÏÑú ÏòàÏïΩ, ÏÇ¨Ïö©Í∏àÏßÄ) |\r\n| 32~255 | Maskale Ïù∏ÌÑ∞ÎüΩÌä∏       |\r\n:{ \"description\": \"Ìëú 1: Intel Processor Ïù¥Î≤§Ìä∏-Î≤°ÌÑ∞\", \"align\": \"center\" }\r\n\r\n`ISR`Ïù¥ Ïã§ÌñâÎêòÎäî ÎèôÏïàÏóêÎäî ÌîÑÎ°úÏÑ∏ÏÑúÏùò Î†àÏßÄÏä§ÌÑ∞ Í∞íÏùÑ Î≥ÄÍ≤ΩÌï†Ïàò ÏûàÍ∏∞ÎïåÎ¨∏Ïóê, `ISR`Ïù¥ ÎÅùÎÇòÍ∏∞Ï†ÑÏóê Ïù∏ÌÑ∞ÎüΩÌä∏Î•º ÏßÄÏö∞Í≥†(*clear*) Ïä§ÌÉùÏóê Ï†ÄÏû•Ìï¥ ÎëêÏóàÎçò Î†àÏßÄÏä§ÌÑ∞ Í∞íÎì§ÏùÑ Îã§Ïãú Î≥µÏõê ÌïòÏó¨ CPUÍ∞Ä Ïù∏ÌÑ∞ÎüΩÌä∏ Î∞úÏÉù Ï†Ñ ÏÉÅÌÉúÎ°ú ÎêòÎèåÏïÑ Í∞àÏàò ÏûàÍ≤å Î†àÏßÄÏä§ÌÑ∞ Í∞íÏùÑ ÏõêÎ≥µÌïúÎã§.\r\n`ISR`Ïã§Ìñâ ÌõÑ Ïù∏ÌÑ∞ÎüΩÌä∏ ÏöîÏ≤≠ÏóêÏÑú Î∞õÏïòÏïòÎçò Î≥µÍ∑Ä Ï£ºÏÜåÎ•º `PC`Î°ú Ï†ÅÏû¨ÌïòÏó¨ Ïù∏ÌÑ∞ÎüΩÌä∏ Î∞úÏÉùÏãúÏ†êÎ∂ÄÌÑ∞ Ïã§ÌñâÏùÑ ÏòÆÍ≤® Ï§ëÎã®ÎêòÏóàÎçò Ïó∞ÏÇ∞ÏùÑ Îã§Ïãú ÏãúÏûëÌïúÎã§.\r\n\r\nÏã§Ï†úÎ°úÎäî Ïù∏ÌÑ∞ÎüΩÌä∏ Î≤°ÌÑ∞Ïùò Ï£ºÏÜå Í∞úÏàòÎ≥¥Îã§ ÎßéÏùÄ Ïû•ÏπòÍ∞Ä ÏûàÍ∏∞ ÎïåÎ¨∏Ïóê, `Ïù∏ÌÑ∞ÎüΩÌä∏ Ï≤¥Ïù∏` Î∞©ÏãùÏùÑ ÏÇ¨Ïö©ÌïúÎã§.   \r\nÏù¥Îäî Î≤°ÌÑ∞Ïùò Í∞Å ÏöîÏÜåÎ•º Ìï∏Îì§Îü≠ Î™©Î°ùÏùÑ Ï≤¥Ïù∏ÏúºÎ°ú Î¨∂Ïñ¥, Ï≤òÎ¶¨Ìï†Ïàò ÏûàÎäî Ìï∏Îì§Îü¨Î•º Ï∞æÏùÑ ÎñÑÍπåÏßÄ ÌïòÎÇòÏî© Ìò∏Ï∂úÌïòÎäî Î∞©Î≤ïÏù¥Îã§.\r\n\r\nÏúÑÏóêÏÑú `Ìëú1`ÏóêÏÑú 0~31ÍπåÏßÄÎäî Í∞Å Î£®Ìã¥Ïóê ÎåÄÌïú ÎßàÏä§ÌÇπÏù¥ Ïù¥ÎØ∏ ÎêòÏñ¥ÏûàÍ∏∞ÎïåÎ¨∏Ïóê `Non Maskable Interrupt`ÎùºÍ≥† ÌïòÎ©∞ ÏòàÏïΩÎêú Î£®Ìã¥Ïù¥Í≥†, 32Î∂ÄÌÑ∞Îäî Maskable Ïù¥ÎØÄÎ°ú Í∑∏Ïô∏ Ïù∏ÌÑ∞ÎüΩÌä∏Î•º Ï≤òÎ¶¨ÌïòÍ∏∞ ÏúÑÌï¥ ÏÇ¨Ïö©ÎêúÎã§.\r\n\r\n> Ïù∏ÌÑ∞ÎüΩÌä∏ Ïö∞ÏÑ†ÏàúÏúÑ Î†àÎ≤® (Interrupt Priority Level *Ïù¥Ìïò `IPL`)  \r\n> `IPL`ÏùÄ Ïù∏ÌÑ∞ÎüΩÌä∏ Î≥ÑÎ°ú Ïö∞ÏÑ† ÏàúÏúÑÎ•º Ï†ïÌïòÏó¨, Ïù∏ÌÑ∞ÎüΩÌä∏ Ï≤òÎ¶¨ÏóêÎèÑ Ïö∞ÏÑ†ÏàúÏúÑÎ•º Îëò Ïàò ÏûàÎã§.  \r\n> `IPL`ÏùÄ ÏàúÏúÑÏóê Îî∞Îùº Ï≤òÎ¶¨Î•º Ïó∞Í∏∞ÌïòÍ±∞ÎÇò, ÏàúÏúÑÍ∞Ä ÎçîÎÜíÏùÄ Ïù∏ÌÑ∞ÎüΩÌä∏Í∞Ä Ïã§ÌñâÏùÑ ÏÑ†Ï†ê Ìï† Ïàò ÎèÑÏûàÎã§.  \r\n: { \"type\": \"note\", \"icon\": \"info\" }\r\n\r\n\r\n## Ïù∏ÌÑ∞ÎüΩÌä∏Ïùò Îß§Ïª§ÎãàÏ¶ò::mechanism-of-interrupt\r\n\r\nÏù∏ÌÑ∞ÎüΩÌä∏Îäî CPUÏó∞ÏÇ∞ Ï§ë Ïã†Ìò∏Î•º Î∞õÏïÑ `ISR`ÏùÑ Ïã§ÌñâÌïúÎã§Í≥† ÌïòÏòÄÎã§. ÌïòÏßÄÎßå Ïª¥Ìì®ÌÑ∞Îäî ÎèôÍ∏∞ÏàúÏ∞®ÌöåÎ°úÏù¥Í∏∞ ÎïåÎ¨∏Ïóê ÏàúÏ∞®Ï†ÅÏúºÎ°ú Ïó∞ÏÇ∞Ïù¥ Ïù¥Î£®Ïñ¥Ï†∏Ïïº ÌïúÎã§.\r\nÎïåÎ¨∏Ïóê, CPUÍ∞Ä ÌïòÎÇòÏùò Î™ÖÎ†πÏñ¥ Ïã§ÌñâÏù¥ ÏôÑÎ£åÎê† ÎïåÎßàÎã§ IRQÎ•º Í∞êÏßÄÌïòÏó¨ Ïù∏ÌÑ∞ÎüΩÌä∏ Î≤àÌò∏Î•º ÏùΩÏñ¥ Ïù¥ Î≤àÌò∏Î•º Ïù∏ÌÑ∞ÎüΩÌä∏ Î≤°ÌÑ∞Ïùò Ïù∏Îç±Ïä§Î°ú ÏÇ¨Ïö©ÌïòÍ≥†, `ISR`Î°ú Ï†êÌîÑÌïòÏó¨ Ïù∏Îç±Ïä§ÏôÄ Í¥ÄÎ†®Îêú Ï£ºÏÜåÏóêÏÑú Ïã§ÌñâÏùÑ ÏãúÏûëÌïúÎã§.\r\nÏù∏ÌÑ∞ÎüΩÌä∏ Ï≤òÎ¶¨ÌõÑ Î≥µÏõêÍπåÏßÄ ÏàòÌñâÌïòÎ©¥ `return_from_interrupt` Î™ÖÎ†πÏñ¥Î°ú CPUÎ•º Ïù∏ÌÑ∞ÎüΩÌä∏ Ï†Ñ Ïã§ÌñâÏÉÅÌÉúÎ°ú ÎêòÎèåÎ¶∞Îã§.\r\n\r\n> Ìè¥ÎßÅ (Polling)  \r\n> CPUÍ∞Ä Ï£ºÍ∏∞Ï†ÅÏúºÎ°ú Ïû•ÏπòÏùò ÏÉÅÌÉúÎ•º ÏßÅÏ†ëÌôïÏù∏ÌïòÍ≥†, ÏÉÅÌÉúÏóêÎî∞Îùº Ï≤òÎ¶¨ÌïòÎäî Î∞©ÏãùÏù¥Îã§.  \r\n> Ïù¥Îäî Ïû•ÏπòÏª®Ìä∏Î°§Îü¨ÏôÄ Ïó∞Í¥ÄÏù¥Ïù¥ ÏûàÎäîÎç∞, CPUÏôÄ Î≥ëÎ†¨Î°ú Ïã§ÌñâÎêòÎäî Ïû•ÏπòÏª®Ìä∏Î°§Îü¨Îäî ÎÇ¥Î∂ÄÏùò Î°úÏª¨Î≤ÑÌçºÏôÄ Ïû•ÏπòÍ∞Ñ Îç∞Ïù¥ÌÑ∞Ïùò Ï†ÑÏÜ°ÏùÑ Îã¥ÎãπÌïúÎã§.  \r\n> Ïû•ÏπòÏóêÏÑú ÏûÖÎ†•Ïù¥ÏûàÎã§Î©¥, Î°úÏª¨Î≤ÑÌçºÎ°ú Îç∞Ïù¥ÌÑ∞Î•º Ïù¥ÎèôÏãúÌÇ§Í≥† ÏÉÅÌÉú Î†àÏßÄÏä§ÌÑ∞Ïùò Í∞íÏùÑ Î≥ÄÍ≤ΩÌïúÎã§. Ïó¨Í∏∞ÏÑú CPUÎäî Ïû•ÏπòÏª®Ìä∏Î°§Îü¨Ïùò ÏÉÅÌÉú Î†àÏßÄÏä§ÌÑ∞Î•º Ï£ºÍ∏∞Ï†ÅÏúºÎ°ú ÌôïÏù∏ÌïòÏó¨, ÏÉÅÌÉúÍ∞Ä Î≥ÄÍ≤ΩÎêòÏóàÎäîÏßÄ ÌôïÏù∏ÌïòÎ©∞ Î°úÏª¨Î≤ÑÌçºÏùò Îç∞Ïù¥ÌÑ∞Î•º ÏùΩÏñ¥ÏôÄ Ï≤òÎ¶¨ÌïúÎã§.  \r\n> Ïù¥Îü¨Ìïú Î∞©ÏãùÏùÄ CPUÍ∞Ä Ï£ºÍ∏∞Ï†ÅÏúºÎ°ú Ïû•ÏπòÏùò ÏÉÅÌÉúÎ•º ÌôïÏù∏ÌïòÍ∏∞ ÎïåÎ¨∏Ïóê, CPUÏùò Î∂ÄÌïòÍ∞Ä ÎÜíÏïÑÏßÄÍ≥†, Ïã§ÏãúÍ∞Ñ Ï≤òÎ¶¨Ïóê Ï†ÅÌï©ÌïòÏßÄ ÏïäÎã§. Ïù¥Îïå Ï†ÑÏÜ°ÌïòÎäî ÎπàÎèÑÎ•º Ìè¥ÎßÅ Î†àÏù¥Ìä∏ÎùºÍ≥†ÌïúÎã§.  Ìè¥ÎßÅÎ†àÏù¥Ìä∏Í∞Ä ÎÜíÏùÑÎïå ÏûÖÎ†•Ïù¥ ÎßéÏùÄÍ≤ΩÏö∞ CPUÏùò Î∂ÄÌïòÍ∞Ä ÎÜíÏïÑÏßÄÎäî Ïù¥Ïú†Í∞Ä Ïù¥Í≤É ÎïåÎ¨∏Ïù¥Îã§.  \r\n:{ \"icon\": \"warning-diamond\", \"type\": \"warning\" }\r\n\r\n## ÌÉÄÏù¥Î®∏::timer\r\n\r\nÌÉÄÏù¥Î®∏Îäî ÏÑ§Ï†ïÌïú ÏãúÍ∞ÑÏù¥ ÏßÄÎÇ¨ÏùÑÎïå Ïù∏ÌÑ∞ÎüΩÌä∏Î•º Î∞úÏÉùÏãúÌÇ¨Ïàò ÏûàÎäî Ïû•ÏπòÏù¥Îã§. \r\nÏòàÏª®Îç∞ ÏÇ¨Ïö©Ïûê ÌîÑÎ°úÍ∑∏Îû®Ïù¥ Î¨¥ÌïúÎ£®ÌîÑÏóê Îπ†ÏßÄÍ±∞ÎÇò, ÏãúÏä§ÌÖú ÏÑúÎπÑÏä§ Ìò∏Ï∂úÏóê Ïã§Ìå®ÌïòÏó¨, Ï†úÏñ¥Í∞Ä Ïö¥ÏòÅÏ≤¥Ï†úÎ°ú Î≥µÍ∑ÄÌïòÏßÄÏïäÎäî Í≤ΩÏö∞ÏóêÎ•º ÎåÄÎπÑÌï¥ ÏÑ§Ï†ïÌï† Ïàò ÏûàÎã§.\r\n\r\nÎåÄÌëú Ï†ÅÏù∏ ÏòàÍ∞Ä [DMA](/wiki/direct-memory-access)Ïù¥Îã§. DMAÎäî CPUÏùò Í∞úÏûÖÏóÜÏù¥ Î©îÎ™®Î¶¨ÏôÄ I/OÏû•ÏπòÍ∞Ñ Îç∞Ïù¥ÌÑ∞Î•º Ï†ÑÏÜ°ÌïòÎäî Í∏∞Ïà†Ïù¥Îã§.\r\nDMACÏù¥ ÏûÖÏ∂úÎ†• Ïû•ÏπòÍ∞Ñ Îç∞Ïù¥ÌÑ∞ Ï†ÑÏÜ°ÏùÑ Í¥ÄÏû•ÌïòÎäîÍ≤ΩÏö∞ Îç∞Ïù¥ÌÑ∞ Î≤ÑÏä§Ïóê ÎåÄÌïú Ï†úÏñ¥Í∂åÎ•º ÏñªÍ≤å ÎêòÎäîÎç∞, CPUÍ∞Ä Ï†úÏñ¥Í∂åÏùÑ ÎÑòÍ∏∞Îäî ÏãúÏ†êÏóê ÌÉÄÏù¥Î®∏Î•º ÏÑ§Ï†ïÌïòÏó¨, ÏßÄÏ†ïÎêú ÏãúÍ∞ÑÍπåÏßÄ DMAÍ∞Ä Î™®Îëê Ïù¥Î£®Ïñ¥ÏßÄÏßÄ ÏïäÎäî Í≤ΩÏö∞ Ïù∏ÌÑ∞ÎüΩÌä∏Î•º Î∞úÏÉùÏãúÌÇ®Îã§. \r\n"
  },
  {
    "path": "/docs/software-design/visitor-pattern",
    "header": {
      "layout": "post",
      "title": "ÎπÑÏßÄÌÑ∞ Ìå®ÌÑ¥ (Visitor Pattern)",
      "tags": [
        "Visitor Pattern",
        "Design Pattern",
        "Software Design"
      ],
      "date": 1593857040000,
      "thumbnail": "/post/software-design/visitor-pattern-intro.svg",
      "profile-image": "/post/profile/profile0.jpg",
      "current-company": "Cubic INC",
      "current-position": "SI Researcher",
      "summary": "ÎπÑÏßÄÌÑ∞ Ìå®ÌÑ¥",
      "excerpt-separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÏÜåÌîÑÌä∏Ïõ®Ïñ¥ ÏÑ§Í≥Ñ"
      ],
      "images": [],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "ÌïµÏã¨ Íµ¨ÏÑ±ÏöîÏÜå::key-components",
            "title": "ÌïµÏã¨ Íµ¨ÏÑ±ÏöîÏÜå",
            "fragment": "key-components",
            "children": []
          },
          {
            "rank": 2,
            "origin": "ÏòàÏ†ú::example",
            "title": "ÏòàÏ†ú",
            "fragment": "example",
            "children": [
              {
                "rank": 3,
                "origin": "ÎèÑÌòï::shape-processing",
                "title": "ÎèÑÌòï",
                "fragment": "shape-processing",
                "children": []
              },
              {
                "rank": 3,
                "origin": "ÌååÏùº ÏãúÏä§ÌÖú::file-system",
                "title": "ÌååÏùº ÏãúÏä§ÌÖú",
                "fragment": "file-system",
                "children": []
              }
            ]
          },
          {
            "rank": 2,
            "origin": "Ï†ÅÏö©::applicability",
            "title": "Ï†ÅÏö©",
            "fragment": "applicability",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Ïû•Îã®Ï†ê::pros-and-cons",
            "title": "Ïû•Îã®Ï†ê",
            "fragment": "pros-and-cons",
            "children": []
          }
        ]
      }
    },
    "description": "Visitor Pattern(Î∞©Î¨∏Ïûê Ìå®ÌÑ¥)ÏùÄ Í≥µÌÜµÏ†ÅÏù∏ ÏöîÏÜåÎì§Ïóê ÎåÄÌï¥ Í∞ÅÍ∏∞ Îã§Î•∏ ÏûëÏóÖÏùÑ ÏàòÌñâÌïòÎäî Í∏∞Îä•ÏùÑ Î∂ÑÎ¶¨ÌïòÎäî ÎîîÏûêÏù∏ Ìå®ÌÑ¥Ïù¥Îã§.",
    "content": "\r\n\r\n## ÌïµÏã¨ Íµ¨ÏÑ±ÏöîÏÜå::key-components\r\n\r\n* **Visitor**: Î∞©Î¨∏ÌïòÏó¨ Ï≤òÎ¶¨Ìï† Í∞ùÏ≤¥Ïùò Ïù∏ÌÑ∞ÌéòÏù¥Ïä§Î•º Ï†ïÏùòÌïúÎã§.\r\n* **Element**: Î∞©Î¨∏ÏûêÎ•º Î∞õÏïÑÎì§Ïù¥Îäî Í∞ùÏ≤¥Ïùò Ïù∏ÌÑ∞ÌéòÏù¥Ïä§Î•º Ï†ïÏùòÌïúÎã§.\r\n* **Client**: Ï†ÅÏ†àÌïú VisitorÏùò Íµ¨ÌòÑÏùÑ ÏÉùÏÑ±ÌïòÍ≥†, `Element` Í∞ùÏ≤¥Î•º ÏÉùÏÑ±ÌïòÏó¨ `Visitor` Ïù∏ÌÑ∞ÌéòÏù¥Ïä§Î•º ÏàòÎùΩÌïúÎã§.\r\n\r\n```mermaid\r\n---\r\nconfig:\r\n    class:\r\n        hideEmptyMembersBox: true\r\n---\r\nclassDiagram\r\n    class Visitor {\r\n        +visit(Element element)\r\n    }\r\n    class ConcreteVisitor {\r\n        +visit(Element element)\r\n    }\r\n    class Element {\r\n        +accept(Visitor visitor)\r\n    }\r\n    class ConcreteElement {\r\n        +accept(Visitor visitor)\r\n    }\r\n    Visitor <|-- ConcreteVisitor\r\n    Element <|-- ConcreteElement\r\n    Visitor <..> Element\r\n```\r\n\r\n## ÏòàÏ†ú::example\r\n\r\nÎπÑÏßÄÌÑ∞ Ìå®ÌÑ¥ÏùÑ ÏÇ¥Ìé¥Î≥¥Í∏∞ Ï†ÑÏóê Ïù¥Ìï¥Ìï† Íµ¨ÏÑ± ÏöîÏÜåÍ∞Ñ Ïó≠Ìï†Í≥º Ï±ÖÏûÑ:\r\n\r\n* **Visitor**: Î∞©Î¨∏ÌïòÏó¨ Ï≤òÎ¶¨Ìï† Í∞ùÏ≤¥Ïùò Ïù∏ÌÑ∞ÌéòÏù¥Ïä§\r\n    * **Ïó≠Ìï†**: ÏöîÏÜåÏóê Î∞©Î¨∏Ïóê ÎåÄÌï¥ Ï≤òÎ¶¨ÌïúÎã§.\r\n    * **Ï±ÖÏûÑ**: Ïñ¥Îñ§ ÏöîÏÜåÍ∞Ä ÏàòÎùΩÌñàÎäîÏßÄ Ïïå Ïàò ÏóÜÍ∏∞ ÎïåÎ¨∏Ïóê, ÏàòÎùΩÏùÑ Í∞ÄÏ†ïÌïòÍ≥† Ï≤òÎ¶¨Î•º ÏàòÌñâÌïúÎã§.\r\n* **Element**: Î∞©Î¨∏ÏûêÎ•º Î∞õÏïÑÎì§Ïù¥Îäî Í∞ùÏ≤¥Ïùò Ïù∏ÌÑ∞ÌéòÏù¥Ïä§\r\n    * **Ïó≠Ìï†**: Î∞©Î¨∏ÏûêÎ•º ÏàòÎùΩÌïúÎã§.\r\n    * **Ï±ÖÏûÑ**: Î∞©Î¨∏ÏûêÎ•º ÏàòÎùΩÌïòÎ©¥, Î∞©Î¨∏ÏûêÍ∞Ä Í∞ùÏ≤¥Î•º ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎèÑÎ°ù Ï†úÍ≥µÌï¥Ïïº ÌïúÎã§.\r\n\r\n### ÎèÑÌòï::shape-processing\r\n\r\nÏó¨Îü¨Í∞ÄÏßÄÏùò ÎèÑÌòïÏù¥ Ï°¥Ïû¨ÌïúÎã§. Ïù¥ ÎèÑÌòïÏùÄ `Square`, `Circle`, `Triangle`Ïù¥ ÏûàÎã§.\r\nÎèÑÌòïÏùò ÎÑíÏù¥Î•º Í≥ÑÏÇ∞ÌïòÎ†§Î©¥ Í∞Å ÎèÑÌòïÏóê Í≥ÑÏÇ∞ Í≥µÏãùÏùÑ Ï†ïÏùòÌï† Ïàò ÎèÑ ÏûàÎã§. ÌïòÏßÄÎßå, `SVG`Î°ú Ï∂úÎ†•ÌïòÎ†§Îäî Í≤ΩÏö∞ Ìï¥Îãπ ÎèÑÌòïÏóêÎäî `SVG`Î•º Ï∂úÎ†•ÌïòÎäî ÎπÑÏ¶àÎãàÏä§ Î°úÏßÅÏùÑ Ï∂îÍ∞Ä Ìï¥ÏïºÌïúÎã§.\r\n\r\nÌïòÏßÄÎßå, ÎèÑÌòï ÎÑíÏù¥ Í≥ÑÏÇ∞ Í≥µÏãùÍ≥º `SVG` Ï∂úÎ†• Î°úÏßÅÏùÄ ÎèÑÌòïÍ≥ºÎäî Í¥ÄÍ≥Ñ ÏóÜÎäî ÌñâÏúÑÍ∏∞ ÎïåÎ¨∏Ïóê, ÎπÑÏ¶àÎãàÏä§ Íµ¨ÌòÑÏùÄ ÎÇ¥Î∂ÄÏóêÏÑú Ïù¥Î£®Ïñ¥Ïßà ÌïÑÏöîÍ∞Ä ÏóÜÎã§.\r\n\r\n> Ïù¥Î•º Ïù¥Ïö©Ìï¥ ÎèÑÌòïÏùò `ÎÑíÏù¥`ÏôÄ `SVG`Î•º Ï∂úÎ†•ÌïòÎäî Í∏∞Îä•ÏùÄ Ïô∏Î∂ÄÏóêÏÑú Visitor PatternÏúºÎ°ú Íµ¨ÌòÑÌï† Ïàò ÏûàÎã§.\r\n:{ \"type\": \"tip\", \"icon\": \"lightbulb\" }\r\n\r\n> ÎπÑÏ¶àÎãàÏä§ Íµ¨ÌòÑÏóêÎåÄÌïú ÏàòÎùΩÏùÄ `Element` Í∞ùÏ≤¥Í∞Ä Ìï† Ïàò ÏûàÍ∏∞ ÎïåÎ¨∏Ïóê, ÏÑ†ÌÉùÏ†ÅÏúºÎ°ú Íµ¨ÌòÑÌï† Ïàò ÏûàÎã§.\r\n:{ \"type\": \"warning\", \"icon\": \"warning-diamond\" }\r\n\r\n**Visitor**\r\n\r\n::code-group\r\n\r\n```java::Î∞©Î¨∏Ïûê\r\npublic interface Visitor {\r\n    void visit(Square square);\r\n    void visit(Circle circle);\r\n    void visit(Triangle triangle);\r\n}\r\n```\r\n\r\n```java::ÎÑìÏù¥Í≥ÑÏÇ∞ Î∞©Î¨∏Ïûê\r\npublic class AreaCalculator implements ShapeVisitor {\r\n\r\n    private double total = 0.0;\r\n\r\n    public double getTotal() {\r\n        return total;\r\n    }\r\n\r\n    @Override\r\n    public void visitSquare(Square square) {\r\n        total += square.getSide() * square.getSide();\r\n    }\r\n\r\n    @Override\r\n    public void visitCircle(Circle circle) {\r\n        total += Math.PI * circle.getRadius() * circle.getRadius();\r\n    }\r\n\r\n    @Override\r\n    public void visitTriangle(Triangle triangle) {\r\n        total += 0.5 * triangle.getBase() * triangle.getHeight();\r\n    }\r\n}\r\n```\r\n\r\n```java::SVG Î≥ÄÌôò Î∞©Î¨∏Ïûê\r\npublic class SVGRenderer implements ShapeVisitor {\r\n    private String svg = \"\";\r\n\r\n    public String getSvg() {\r\n        return svg;\r\n    }\r\n\r\n    @Override\r\n    public void visitSquare(Square square) {\r\n        this.svg += String.format(\"<rect width=\\\"%d\\\" height=\\\"%d\\\" />\", square.getSide(), square.getSide());\r\n    }\r\n\r\n    @Override\r\n    public void visitCircle(Circle circle) {\r\n        this.svg += String.format(\"<circle r=\\\"%d\\\" />\", circle.getRadius());\r\n    }\r\n\r\n    @Override\r\n    public void visitTriangle(Triangle triangle) {\r\n        this.svg += String.format(\"<polygon points=\\\"0,0 %d,0 %d, %d\\\" />\", triangle.getBase(), triangle.getBase() /2, triangle.getHeight());\r\n    }\r\n}\r\n```\r\n\r\n::\r\n\r\n**Element**\r\n\r\n::code-group\r\n\r\n```java::ÎèÑÌòï ÏöîÏÜå\r\npublic interface Shape {\r\n    void accept(Visitor visitor);\r\n}\r\n```\r\n\r\n```java::ÏÇ¨Í∞ÅÌòï ÏöîÏÜå\r\npublic class Square implements Shape {\r\n\r\n    private final int side;\r\n\r\n    public Square(int side) {\r\n        this.side = side;\r\n    }\r\n\r\n    public int getSide() {\r\n        return side;\r\n    }\r\n\r\n    @Override\r\n    public void accept(ShapeVisitor visitor) {\r\n        visitor.visitSquare(this);\r\n    }\r\n}\r\n```\r\n\r\n```java::Ïõê ÏöîÏÜå\r\npublic class Circle implements Shape {\r\n\r\n    private final int radius;\r\n\r\n    public Circle(int radius) {\r\n        this.radius = radius;\r\n    }\r\n\r\n    public int getRadius() {\r\n        return radius;\r\n    }\r\n\r\n    @Override\r\n    public void accept(ShapeVisitor visitor) {\r\n        visitor.visitCircle(this);\r\n    }\r\n}\r\n```\r\n\r\n```java::ÏÇºÍ∞ÅÌòï ÏöîÏÜå\r\npublic class Triangle implements Shape {\r\n\r\n    private final int base;\r\n    private final int height;\r\n\r\n    public Triangle(int base, int height) {\r\n        this.base = base;\r\n        this.height = height;\r\n    }\r\n\r\n    public int getBase() {\r\n        return base;\r\n    }\r\n\r\n    public int getHeight() {\r\n        return height;\r\n    }\r\n\r\n    @Override\r\n    public void accept(ShapeVisitor visitor) {\r\n        visitor.visitTriangle(this);\r\n    }\r\n}\r\n```\r\n\r\n::\r\n\r\n**Client**\r\n\r\n```java::ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ ÏΩîÎìú\r\nShape [] shapes = new Shape[] {\r\n    new Circle(10),\r\n    new Square(20),\r\n    new Triangle(10, 20)\r\n};\r\n\r\nAreaCalculator areaCalculator = new AreaCalculator();\r\nSVGRenderer svgRenderer = new SVGRenderer();\r\n\r\nfor (Shape shape : shapes) {\r\n    shape.accept(areaCalculator);\r\n    shape.accept(svgRenderer);\r\n}\r\n\r\nSystem.out.println(\"totalArea = \" + areaCalculator.getTotal());\r\nSystem.out.println(\"svg = \" + svgRenderer.getSvg());\r\n```\r\n\r\n```text::Í≤∞Í≥º\r\ntotalArea = 814.1592653589794\r\nsvg = <circle r=\"10\" /><rect width=\"20\" height=\"20\" /><polygon points=\"0,0 10,0 5, 20\" />\r\n```\r\n\r\nÏúÑ Í∞ôÏùÄ ÏÉÅÌô©ÏúºÎ°ú Ï≤òÎ¶¨Ïóê ÎåÄÌïú Ï±ÖÏûÑÏùÑ `Visitor`ÏóêÍ≤å ÏúÑÏûÑÌïòÍ≥†, `Element`Îäî `Visitor`Î•º ÏàòÎùΩÌïòÏó¨ Ï≤òÎ¶¨Î•º ÏàòÌñâÌïúÎã§.\r\nÎòêÌïú ÏïÑÎûòÏôÄ Í∞ôÏù¥ Ïú†Ïó∞ÌïòÍ≤å ÌùêÎ¶ÑÏùÑ Î∞îÍøÄÏàòÎèÑ ÏûàÎã§.\r\n\r\n```java::‚úÖ ÏöîÏÜåÍ∞Ä ÏàòÎùΩÌï¥ÎèÑ ÎØ∏Ï≤òÎ¶¨\r\n@Override\r\npublic void visitPentagon(Pentagon pentagon) {\r\n    //Îã§Í∞ÅÌòïÏùÄ ÎßåÎì§ÏßÄ ÏïäÎäîÎã§.\r\n}\r\n```\r\n\r\n```java::‚úÖ Î™®Îì† Î∞©Î¨∏ÏûêÎ•º ÏàòÎùΩÌïòÏßÄ ÏïäÍ±∞ÎÇò, ÌäπÏ†ï Î∞©Î¨∏ÏûêÎßå ÏàòÎùΩ\r\n@Override\r\npublic void accept(ShapeVisitor visitor) {\r\n    if (visitor instanceof SVGRenderer) {\r\n        visitor.visitPentagon(this);   \r\n    }\r\n}\r\n```\r\n\r\n> Ï≤òÎ¶¨ÏóêÎåÄÌïú Ï±ÖÏûÑÏùÄ `Visitor`ÏóêÍ≤å ÏûàÍ∏∞ ÎïåÎ¨∏Ïóê, `Vistor`ÏóêÏÑú `Element`Î•º Íµ¨Î≥ÑÌïòÎäî Í≤ÉÏù¥ Ï¢ãÎã§.\r\n:{ \"type\": \"tip\", \"icon\": \"lightbulb\" }\r\n\r\n### ÌååÏùº ÏãúÏä§ÌÖú::file-system\r\n\r\nÌååÏùº ÏãúÏä§ÌÖúÏóêÎäî `ÌååÏùº`Í≥º `ÎîîÎ†âÌÜ†Î¶¨`Í∞Ä ÏûàÎã§.  \r\nÌååÏùºÏùò Ï†ïÎ≥¥Î•º Ï∂úÎ†•ÌïòÎ†§Î©¥ Í∞Å ÌååÏùºÏóê ÎåÄÌïú Ï†ïÎ≥¥Î•º Ï∂úÎ†•ÌïòÎäî ÎπÑÏ¶àÎãàÏä§ Î°úÏßÅÏùÑ Ï∂îÍ∞Ä Ìï¥ÏïºÌïúÎã§. ÌååÏùº ÌÅ¨Í∏∞Î•º Íµ¨ÌïòÎ†§Îäî Í≤ΩÏö∞ Ìï¥Îãπ ÌååÏùºÏóêÎäî ÌååÏùº ÌÅ¨Í∏∞Î•º Ï∂úÎ†•ÌïòÎäî ÎπÑÏ¶àÎãàÏä§ Î°úÏßÅÏùÑ Ï∂îÍ∞Ä Ìï¥ÏïºÌïúÎã§.\r\n\r\nÌååÏùº Ï∂úÎ†•Í≥º ÌååÏùºÎì§ ÌÅ¨Í∏∞ Í≥ÑÏÇ∞ÏùÄ ÌååÏùºÍ≥ºÎäî Í¥ÄÍ≥Ñ ÏóÜÎäî ÌñâÏúÑÍ∏∞ ÎïåÎ¨∏Ïóê, ÎπÑÏ¶àÎãàÏä§ Íµ¨ÌòÑÏùÄ ÎÇ¥Î∂ÄÏóêÏÑú Ïù¥Î£®Ïñ¥Ïßà ÌïÑÏöîÍ∞Ä ÏóÜÎã§.\r\n\r\n**Visitor**\r\n\r\n::code-group\r\n\r\n```java::Î∞©Î¨∏Ïûê\r\npublic interface FileSystemVisitor {\r\n    void visit(File file);\r\n    void visit(Directory directory);\r\n}\r\n```\r\n\r\n```java::ÌååÏùº Ï∂úÎ†•\r\npublic class FileListPrinterVisitor implements FileSystemVisitor {\r\n\r\n    @Override\r\n    public void visit(File file) {\r\n        System.out.println(\"File: \" + file.getName() + \", Size: \" + file.getSize() + \" bytes\");\r\n    }\r\n\r\n    @Override\r\n    public void visit(Directory directory) {\r\n        System.out.println(\"Directory: \" + directory.getName());\r\n        for (var child : directory.getChildren()) {\r\n            child.accept(this);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n```java::ÌååÏùº ÌÅ¨Í∏∞Í≥ÑÏÇ∞\r\npublic class SizeCalculatorVisitor implements FileSystemVisitor {\r\n    private long totalSize = 0;\r\n\r\n\r\n    @Override\r\n    public void visit(File file) {\r\n        this.totalSize += file.getSize();\r\n    }\r\n\r\n    @Override\r\n    public void visit(Directory directory) {\r\n        // ÎîîÎ†âÌÜ†Î¶¨ ÏûêÏ≤¥Ïùò Ï≤òÎ¶¨Îäî ÌïÑÏöî ÏóÜÏùå\r\n        for (var child : directory.getChildren()) {\r\n            child.accept(this);\r\n        }\r\n    }\r\n\r\n    public long getTotalSize() {\r\n        return this.totalSize;\r\n    }\r\n}\r\n```\r\n\r\n::\r\n\r\n> ÎèÑÌòï ÏòàÏ†úÏôÄ Îã§Î•¥Í≤å `visit` Î©îÏÑúÎìúÎ•º Ïò§Î≤ÑÎ°úÎî© ÌïòÏòÄÎã§. Ïù¥Îäî Ïò§Î≤ÑÎ°úÎî©Ïù¥ Ï†úÍ≥µÎêòÎäî Ïñ∏Ïñ¥ÏóêÏÑúÎäî Îã§ÌòïÏÑ±ÏùÑ Ïù¥Ïö©ÌïòÏó¨ Ï≤òÎ¶¨Ìï† Ïàò ÏûàÎã§.\r\n:{ \"type\": \"tip\", \"icon\": \"lightbulb\" }\r\n\r\n**Element**\r\n\r\n::code-group\r\n\r\n```java::ÏöîÏÜå\r\npublic interface FileSystemElement {\r\n    void accept(FileSystemVisitor visitor);\r\n}\r\n```\r\n\r\n```java::ÌååÏùº\r\npublic class File implements FileSystemElement {\r\n\r\n    private final String name;\r\n    private final long size;\r\n\r\n    public File(String name, long size) {\r\n        this.name = name;\r\n        this.size = size;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public long getSize() {\r\n        return this.size;\r\n    }\r\n\r\n    @Override\r\n    public void accept(FileSystemVisitor visitor) {\r\n        visitor.visit(this);\r\n    }\r\n}\r\n```\r\n\r\n```java::ÎîîÎ†âÌÜ†Î¶¨\r\npublic class Directory implements FileSystemElement {\r\n    private final String name;\r\n    private final List<FileSystemElement> children = new ArrayList<>();\r\n\r\n    public Directory(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void addChild(FileSystemElement child) {\r\n        children.add(child);\r\n    }\r\n\r\n    public List<FileSystemElement> getChildren() {\r\n        return children;\r\n    }\r\n\r\n    @Override\r\n    public void accept(FileSystemVisitor visitor) {\r\n        visitor.visit(this);\r\n    }\r\n}\r\n```\r\n\r\n::\r\n\r\n**Client**\r\n\r\n```java::ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ ÏΩîÎìú\r\n// ÌååÏùº ÏãúÏä§ÌÖú Íµ¨Ï°∞ ÏÉùÏÑ±\r\nDirectory root = new Directory(\"root\");\r\nDirectory documents = new Directory(\"documents\");\r\nDirectory pictures = new Directory(\"pictures\");\r\n\r\nroot.addChild(documents);\r\nroot.addChild(pictures);\r\n\r\ndocuments.addChild(new File(\"visitor-pattern.md\", 42366));\r\ndocuments.addChild(new File(\"composite-pattern.md\", 32456));\r\n\r\npictures.addChild(new File(\"visitor-pattern-intro.png\", 83456));\r\npictures.addChild(new File(\"visitor-pattern-diagram.svg\", 23456));\r\n\r\n//ÌÅ¨Í∏∞ Í≥ÑÏÇ∞ Visitor ÏÇ¨Ïö©\r\nSizeCalculatorVisitor sizeVisitor = new SizeCalculatorVisitor();\r\nroot.accept(sizeVisitor);\r\nSystem.out.println(\"Total Size: \" + sizeVisitor.getTotalSize() + \" bytes\");\r\n\r\n// ÌååÏùº Î™©Î°ù Ï∂úÎ†• Visitor ÏÇ¨Ïö©\r\nFileListPrinterVisitor printerVisitor = new FileListPrinterVisitor();\r\nroot.accept(printerVisitor);\r\n```\r\n\r\n```text::Í≤∞Í≥º\r\nTotal Size: 181734 bytes\r\nDirectory: root\r\nDirectory: documents\r\nFile: visitor-pattern.md, Size: 42366 bytes\r\nFile: composite-pattern.md, Size: 32456 bytes\r\nDirectory: pictures\r\nFile: visitor-pattern-intro.png, Size: 83456 bytes\r\nFile: visitor-pattern-diagram.svg, Size: 23456 bytes\r\n```\r\n\r\n## Ï†ÅÏö©::applicability\r\n\r\n`Visitor` Ìå®ÌÑ¥ÏùÄ Îã§ÏùåÍ≥º Í∞ôÏùÄ Í≤ΩÏö∞Ïóê ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎã§.\r\n\r\n* Í∞ùÏ≤¥Îì§ÏùÑ ÏàúÌöåÌïòÎ©∞, Îã§ÏñëÌïú ÏûëÏóÖÏùÑ ÏàòÌñâÌï¥Ïïº ÌïòÎäî Í≤ΩÏö∞\r\n* Í∞ùÏ≤¥Ïùò Íµ¨Ï°∞ÏôÄ ÏûëÏóÖÏùÑ Î∂ÑÎ¶¨ÌïòÍ≥† Ïã∂ÏùÄ Í≤ΩÏö∞\r\n\r\n## Ïû•Îã®Ï†ê::pros-and-cons\r\n\r\n**Ïû•Ï†ê**\r\n\r\n* [Í∞úÎ∞©/ÌèêÏáÑ ÏõêÏπô](): Îã§Î•∏ ÌÅ¥ÎûòÏä§Î•º Î≥ÄÍ≤ΩÌïòÏßÄ ÏïäÏúºÎ©¥ÏÑú Ìï¥Îãπ ÌÅ¥ÎûòÏä§Ïùò Í∞ùÏ≤¥ÏôÄ ÏûëÎèôÌï† Ïàò ÏûàÎäî ÏÉàÎ°úÏö¥ Ï≤òÎ¶¨Î•º Ï∂îÍ∞ÄÌï† Ïàò ÏûàÎã§.\r\n* [Îã®Ïùº Ï±ÖÏûÑ ÏõêÏπô](): Í∞ôÏùÄ ÌñâÎèôÏùò Ïó¨Îü¨ Î≤ÑÏ†ÑÏùÑ Í∞ôÏùÄ ÌÅ¥ÎûòÏä§Î°ú ÎÇòÎàå Ïàò ÏûàÎã§.\r\n* ÎπÑÏßÄÌÑ∞ Í∞ùÏ≤¥Îäî Îã§ÏñëÌïú Í∞ùÏ≤¥Îì§Í≥º ÏûëÏóÖÌïòÎ©¥ÏÑú Ïú†Ïö©Ìïú Ï†ïÎ≥¥Î•º Ï∂ïÏ†ÅÌï† Ïàò ÏûàÎã§. Ïù¥Í≤ÉÏùÄ Í∞ùÏ≤¥ Ìä∏Î¶¨ÏôÄ Í∞ôÏùÄ Î≥µÏû°Ìïú Í∞ùÏ≤¥ Íµ¨Ï°∞Î•º ÏàúÌöåÌïòÏó¨ Ïù¥ Íµ¨Ï°∞Ïùò Í∞Å Í∞ùÏ≤¥Ïóê ÎπÑÏßÄÌÑ∞ Ìå®ÌÑ¥ÏùÑ Ï†ÅÏö©ÌïòÎ†§Îäî Í≤ΩÏö∞Ïóê Ïú†Ïö©ÌïòÎã§.\r\n\r\n**Îã®Ï†ê**\r\n\r\n* ÌÅ¥ÎûòÏä§Í∞Ä ÏöîÏÜå Í≥ÑÏ∏µÍµ¨Ï°∞Ïóê Ï∂îÍ∞ÄÎêòÍ±∞ÎÇò Ï†úÍ±∞Îê† ÎïåÎßàÎã§ Î™®Îì† ÎπÑÏßÄÌÑ∞Î•º ÏóÖÎç∞Ïù¥Ìä∏Ìï¥Ïïº ÌïúÎã§.\r\n* ÎπÑÏßÄÌÑ∞Îì§ÏùÄ Ìï®Íªò ÏûëÏóÖÌï¥Ïïº ÌïòÎäî ÏöîÏÜåÎì§Ïùò ÎπÑÍ≥µÍ∞ú ÌïÑÎìúÎì§ Î∞è Î©îÏÑúÎìúÎì§Ïóê Ï†úÌïúÏ†ÅÏù∏ Í∏∞Îä•Ïóê ÎåÄÌï¥ ÌôïÏû•Ïù¥ ÌïÑÏöîÌï† Ïàò ÏûàÎã§.\r\n"
  },
  {
    "path": "/docs/software-design/command-pattern",
    "header": {
      "layout": "post",
      "title": "Ïª§Îß®Îìú Ìå®ÌÑ¥ (Command Pattern)",
      "tags": [
        "Command Pattern",
        "Design Pattern",
        "Software Design"
      ],
      "date": 1592386440000,
      "thumbnail": "/post/software-design/command-pattern-intro.svg",
      "profile-image": "/post/profile/profile0.jpg",
      "current-company": "Cubic INC",
      "current-position": "SI Researcher",
      "summary": "Ïª§Îß®Îìú Ìå®ÌÑ¥",
      "excerpt-separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÏÜåÌîÑÌä∏Ïõ®Ïñ¥ ÏÑ§Í≥Ñ"
      ],
      "images": [],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "ÌïµÏã¨ Íµ¨ÏÑ±ÏöîÏÜå::key-components",
            "title": "ÌïµÏã¨ Íµ¨ÏÑ±ÏöîÏÜå",
            "fragment": "key-components",
            "children": []
          },
          {
            "rank": 2,
            "origin": "ÏòàÏ†ú::example",
            "title": "ÏòàÏ†ú",
            "fragment": "example",
            "children": [
              {
                "rank": 3,
                "origin": "Ï£ºÎ¨∏ Ï≤òÎ¶¨ ÏãúÏä§ÌÖú::example-1",
                "title": "Ï£ºÎ¨∏ Ï≤òÎ¶¨ ÏãúÏä§ÌÖú",
                "fragment": "example-1",
                "children": []
              },
              {
                "rank": 3,
                "origin": "Í≤åÏûÑ Ïª®Ìä∏Î°§Îü¨::example-2",
                "title": "Í≤åÏûÑ Ïª®Ìä∏Î°§Îü¨",
                "fragment": "example-2",
                "children": []
              }
            ]
          },
          {
            "rank": 2,
            "origin": "Ï†ÅÏö©::applicability",
            "title": "Ï†ÅÏö©",
            "fragment": "applicability",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Ïû•Îã®Ï†ê::pros-and-cons",
            "title": "Ïû•Îã®Ï†ê",
            "fragment": "pros-and-cons",
            "children": []
          }
        ]
      }
    },
    "description": "Ïª§Îß®Îìú Ìå®ÌÑ¥ÏùÄ Ï≤òÎ¶¨ Î™ÖÎ†πÏùÑ ÎèÖÎ¶ΩÏ†ÅÏù∏ Ïã§ÌñâÍ∞ÄÎä• Í∞ùÏ≤¥Î°ú ÎßåÎì§Ïñ¥, ÏùºÍ¥ÑÏ†ÅÏúºÎ°ú Ï∑®ÏÜå ÎòêÎäî Ïã§ÌñâÏùÑ Ìï† Ïàò ÏûàÎèÑÎ°ù ÌïòÎäî ÎîîÏûêÏù∏ Ìå®ÌÑ¥Ïù¥Îã§.\r\n\r\nÎòêÌïú, Ïù¥ Î™ÖÎ†πÏùò Ï≤òÎ¶¨Î•º ÏßÄÏó∞ÏãúÌÇ§Í±∞ÎÇò, ÎåÄÍ∏∞Ïó¥Ïóê ÎÑ£ÏùÑ Ïàò ÏûàÎèÑÎ°ù ÌïòÏó¨ Ï≤òÎ¶¨Ìï† Ïàò ÏûàÎã§.",
    "content": "\r\n## ÌïµÏã¨ Íµ¨ÏÑ±ÏöîÏÜå::key-components\r\n\r\n* **Command**: Î™ÖÎ†πÏùÑ ÎÇòÌÉÄÎÇ¥Îäî Ïù∏ÌÑ∞ÌéòÏù¥Ïä§/Ï∂îÏÉÅ ÌÅ¥ÎûòÏä§\r\n* **ConcreteCommand**: Ïã§Ï†ú Î™ÖÎ†πÏùÑ ÎÇòÌÉÄÎÇ¥Îäî Íµ¨ÏÉÅ ÌÅ¥ÎûòÏä§\r\n* **Invoker**: Î™ÖÎ†πÏùÑ Ïã§ÌñâÌïòÎäî Í∞ùÏ≤¥\r\n* **Receiver**: Î™ÖÎ†πÏùò ÏàòÏã†Ïûê\r\n* **Client**: ConcreteCommand Í∞ùÏ≤¥Î•º ÏÉùÏÑ±ÌïòÍ≥† Invoker Í∞ùÏ≤¥ÏóêÍ≤å Ï†ÑÎã¨ÌïòÎäî Í∞ùÏ≤¥\r\n\r\n```mermaid\r\n---\r\nconfig:\r\n    class:\r\n        hideEmptyMembersBox: true\r\n---\r\nclassDiagram\r\n    direction LR\r\n    class Command {\r\n        <<interface>>\r\n        +execute(): void\r\n        +undo(): void\r\n    }\r\n    class ConcreteCommand {\r\n        -receiver: Receiver\r\n    }    \r\n    class Invoker {\r\n        -commands: List~Command~\r\n        +executeCommand(Command command): void\r\n        +undoLastCommand(): void\r\n    }\r\n    class Receiver {\r\n        ...\r\n        +feature1(): void\r\n        +feature2(): void\r\n    }\r\n    class Client {\r\n        \r\n    }\r\n    ConcreteCommand ..|> Command\r\n    Client ..> ConcreteCommand\r\n    Client ..> Receiver\r\n    Client ..> Invoker\r\n    Invoker --> Command\r\n    ConcreteCommand --> Receiver\r\n```\r\n\r\n## ÏòàÏ†ú::example\r\n\r\nÏòàÏ†úÎ•º ÌÜµÌï¥ Ïª§Îß®Îìú Ìå®ÌÑ¥ÏùÑ ÏÇ¥Ìé¥Î≥¥Í∏∞ Ï†ÑÏóê, Îã§ÏùåÏùò Ïó≠Ìï†Í≥º Ï±ÖÏûÑÏùÑ Î™ÖÏã¨ÌïòÏûê.\r\n\r\n* `Invoker`\r\n  * **Ïó≠Ìï†**: Î™ÖÎ†π Ìò∏Ï∂úÏûê Í∞ùÏ≤¥Ïù¥Î©∞, Î™ÖÎ†πÏùÑ Î™©Î°ùÏùÑ Í¥ÄÎ¶¨ÌïúÎã§.\r\n  * **Ï±ÖÏûÑ**: Î™ÖÎ†πÏùÑ Ïã§ÌñâÌïòÍ±∞ÎÇò Ï∑®ÏÜåÌïúÎã§.\r\n* `Command`\r\n  * **Ïó≠Ìï†**: Î™ÖÎ†πÏùò Íµ¨ÌòÑÏù¥Î©∞, ÎπÑÏ¶àÎãàÏä§ ÎÖºÎ¶¨ Í∞ùÏ≤¥Ï§ë ÌïòÎÇòÏóêÍ≤å Ìò∏Ï∂úÏùÑ Ï†ÑÎã¨ÌïúÎã§.\r\n  * **Ï±ÖÏûÑ**: Î™ÖÎ†πÏóê ÎåÄÌïú Ïã§ÌñâÍ≥º Ï∑®ÏÜåÎ•º `Receiver` Í∞ùÏ≤¥Î•º Ïù¥Ïö©Ìï¥ ÏàòÌñâÌïúÎã§.\r\n* `Receiver`\r\n  * **Ïó≠Ìï†**: Ïô∏Î∂ÄÏóêÏÑú Ìò∏Ï∂úÏùÑ Ï†ÑÎã¨Î∞õÎäîÎã§.\r\n  * **Ï±ÖÏûÑ**: Ï†ÑÎã¨ Î∞õÏùÄ Ìò∏Ï∂úÏóêÎåÄÌïú ÎπÑÏ¶àÎãàÏä§ Î°úÏßÅÏùÑ ÏàòÌñâÌïúÎã§.\r\n* `Client`\r\n  * **Ïó≠Ìï†**: Ïã§Ï†ú Î™ÖÎ†πÏùÑ `Invoker`ÏóêÍ≤å Ï†ÑÎã¨ÌïúÎã§.\r\n  * **Ï±ÖÏûÑ**: Ïã§Ï†ú Î™ÖÎ†πÏùÑ ÏÉùÏÑ±ÌïòÏó¨ `Invoker`ÏôÄ Ïó∞Í≤∞ÌïòÎ©∞, Ïã§ÌñâÌùêÎ¶ÑÏùÑ Ï†úÏñ¥ÌïúÎã§.\r\n\r\n\r\n### Ï£ºÎ¨∏ Ï≤òÎ¶¨ ÏãúÏä§ÌÖú::example-1\r\n\r\nÏ£ºÎ¨∏ Ï≤òÎ¶¨Ïóê ÎåÄÌïú ÏãúÏä§ÌÖúÏùÑ ÎßåÎì§Í≥†Ïûê ÌïúÎã§.\r\nÍµ¨Îß§ÌïòÎäî ÏÉÅÌíàÏóêÎåÄÌïú Ï£ºÎ¨∏Ïù¥ÏûàÍ≥†, Ìï¥Îãπ Ï£ºÎ¨∏Ïóê ÎåÄÌïòÏó¨ ÏÉùÏÑ±ÌïòÍ±∞ÎÇò Î≥ÄÍ≤ΩÌïòÎäî Í∏∞Îä•ÏùÑ ÎßåÎì§Ïñ¥Î≥¥Ïûê. \r\n\r\n**Command**\r\n\r\nÏàòÌñâÌïòÎ†§Îäî Ï£ºÎ¨∏ ÌñâÏúÑÏóê Îã®ÏúÑÏùò Î™ÖÎ†πÏùÑ Íµ¨ÌòÑÌïúÎã§.\r\n\r\n::code-group\r\n\r\n```java::Ï£ºÎ¨∏ Î™ÖÎ†π\r\npublic interface OrderCommand {\r\n\r\n    void execute();\r\n\r\n    void undo();\r\n}\r\n```\r\n\r\n```java::Ï£ºÎ¨∏ÏÉùÏÑ± Î™ÖÎ†π\r\npublic class CreateOrderCommand implements OrderCommand {\r\n\r\n    private final OrderManager receiver;\r\n    private final Order order;\r\n\r\n    public CreateOrderCommand(OrderManager receiver, Order order) {\r\n        this.receiver = receiver;\r\n        this.order = order;\r\n    }\r\n\r\n    @Override\r\n    public void execute() {\r\n        this.receiver.createOrder(order);\r\n    }\r\n\r\n    @Override\r\n    public void undo() {\r\n        this.receiver.cancelOrder(order);\r\n    }\r\n}\r\n```\r\n\r\n```java::Ï£ºÎ¨∏Î≥ÄÍ≤Ω Î™ÖÎ†π\r\npublic class UpdateOrderCommand implements OrderCommand {\r\n\r\n    private OrderManager receiver;\r\n    private Order order;\r\n    private OrderStatus previousOrder;\r\n    private OrderStatus newStatus;\r\n\r\n    public UpdateOrderCommand(OrderManager receiver, Order order, OrderStatus newStatus) {\r\n        this.receiver = receiver;\r\n        this.order = order;\r\n        this.newStatus = newStatus;\r\n        this.previousOrder = order.getStatus();\r\n    }\r\n\r\n    @Override\r\n    public void execute() {\r\n        receiver.updateOrderStatus(order, newStatus);\r\n    }\r\n\r\n    @Override\r\n    public void undo() {\r\n        receiver.updateOrderStatus(order, previousOrder);\r\n    }\r\n}\r\n```\r\n\r\n::\r\n\r\n**Invoker**\r\n\r\nÏ£ºÎ¨∏Ï≤òÎ¶¨ ÌñâÏúÑÏóêÎåÄÌïú Î™ÖÎ†πÎì§ÏùÑ Í¥ÄÎ¶¨ÌïòÎ©∞, Ïã§ÌñâÌïòÍ±∞ÎÇò Ï∑®ÏÜåÌï† Ïàò ÏûàÎã§.\r\n\r\n```java::Ï£ºÎ¨∏ Ï≤òÎ¶¨Ïóê ÎåÄÌïú Ìò∏Ï∂úÏûê\r\npublic class OrderCommandInvoker {\r\n    private final List<OrderCommand> commands = new ArrayList<>();\r\n\r\n    public void executeCommand(OrderCommand command) {\r\n        command.execute();\r\n        commands.add(command);\r\n    }\r\n\r\n    public void undoLastCommand() {\r\n        if (!commands.isEmpty()) {\r\n            OrderCommand lastCommand = commands.remove(commands.size() - 1);\r\n            lastCommand.undo();\r\n        }\r\n    }\r\n\r\n}\r\n```\r\n\r\n**Receiver**\r\n\r\n`Invoker`Í∞Ä Ìò∏Ï∂úÌïòÎäî `Command`Ïóê ÎåÄÌïú Ïã§Ï†ú ÎπÑÏ¶àÎãàÏä§ Î°úÏßÅÏùÑ ÏàòÌñâÌïúÎã§.\r\n\r\n```java::Ï£ºÎ¨∏ Ï≤òÎ¶¨Ïùò ÏàòÏã†Ïûê\r\npublic class OrderManager {\r\n    private List<Order> orders = new ArrayList<>();\r\n\r\n    public void createOrder(Order order) {\r\n        orders.add(order);\r\n        System.out.println(\"Order created: \" + order.getOrderId());\r\n    }\r\n\r\n    public void cancelOrder(Order order) {\r\n        orders.remove(order);\r\n        System.out.println(\"Order cancelled: \" + order.getOrderId());\r\n    }\r\n\r\n    public void updateOrderStatus(Order order, OrderStatus status) {\r\n        order.setStatus(status);\r\n        System.out.println(\"Order \" + order.getOrderId() + \" status updated to: \" + status);\r\n    }\r\n\r\n    public List<Order> getOrders() {\r\n        return orders;\r\n    }\r\n}\r\n```\r\n\r\n**Client**\r\n\r\nÏ†ÑÎ∞òÏ†ÅÏù∏ Ïã§ÌñâÌùêÎ¶ÑÏùÑ Ï†úÏñ¥ÌïòÎ©∞, `Command`Î•º ÏÉùÏÑ±ÌïòÏó¨ InvokerÏóêÍ≤å Ï†ÑÎã¨ÌïúÎã§.\r\n\r\n```java::ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ ÏΩîÎìú\r\nOrderManager receiver = new OrderManager();\r\nOrderCommandInvoker invoker = new OrderCommandInvoker();\r\n\r\n//Create Command\r\nProduct laptop = new Product(\"Laptop\", 999.99);\r\nProduct phone = new Product(\"Phone\", 499.00);\r\n\r\n//CreateOrder\r\nOrder order = new Order(List.of(laptop, phone));\r\n\r\n//Create Order Command\r\nCreateOrderCommand createCommand = new CreateOrderCommand(receiver, order);\r\ninvoker.executeCommand(createCommand);\r\n\r\n//Update Order Command\r\nUpdateOrderCommand updateCommand = new UpdateOrderCommand(receiver, order, OrderStatus.SHIPPED);\r\ninvoker.executeCommand(updateCommand);\r\n\r\n//undo last command\r\ninvoker.undoLastCommand();\r\n```\r\n\r\n### Í≤åÏûÑ Ïª®Ìä∏Î°§Îü¨::example-2\r\n\r\nÍ∞ÑÎã®Ìïú ÏäàÌçºÎßàÎ¶¨Ïò§ Í≤åÏûÑÏùÑ ÎßåÎìúÎ†§Í≥†ÌïúÎã§.\r\nÏïûÏúºÎ°ú ÎòêÎäî Îí§Î°ú Í∞ÄÍ±∞ÎÇò Ï†êÌîÑÎ•º Ìï† Ïàò ÏûàÏúºÎ©∞, Í≥µÍ≤©ÎèÑ Í∞ÄÎä•ÌïòÎã§.\r\n\r\n**Command**\r\n\r\nÍ≤åÏûÑ Ïª®Ìä∏Î°§Îü¨ÏóêÏÑú ÏàòÌñâÌï† ÏûàÎäî Î™ÖÎ†πÎì§ÏùÑ `Command`Î°ú Ï∂îÏÉÅÌôîÌïòÏó¨ Íµ¨ÌòÑÌïúÎã§.\r\n\r\n::code-group\r\n\r\n\r\n```java::Í≤åÏûÑ Î™ÖÎ†π\r\npublic interface Command {\r\n\r\n    void execute();\r\n    void undo();\r\n}\r\n```\r\n\r\n```java::Ï†êÌîÑ Î™ÖÎ†π\r\npublic class JumpCommand implements Command {\r\n    private GameCharacter receiver;\r\n    \r\n    public JumpCommand(GameCharacter receiver) {\r\n        this.receiver = receiver;\r\n    }\r\n\r\n    @Override\r\n    public void execute() {\r\n        this.receiver.jump();\r\n    }\r\n\r\n    @Override\r\n    public void undo() {\r\n        System.out.println(\"Jump command undone\");\r\n    }\r\n}\r\n```\r\n\r\n```java::Ïù¥Îèô Î™ÖÎ†π\r\npublic class MoveCommand implements Command {\r\n    private GameCharacter receiver;\r\n\r\n    public MoveCommand(GameCharacter character) {\r\n        this.receiver = character;\r\n    }\r\n\r\n    @Override\r\n    public void execute() {\r\n        receiver.moveForWard();\r\n    }\r\n\r\n    @Override\r\n    public void undo() {\r\n        receiver.moveBack();\r\n    }\r\n}\r\n```\r\n\r\n```java::Í≥µÍ≤© Î™ÖÎ†π\r\npublic class AttackCommand implements Command {\r\n\r\n    private GameCharacter receiver;\r\n\r\n    public AttackCommand(GameCharacter receiver) {\r\n        this.receiver = receiver;\r\n    }\r\n\r\n    @Override\r\n    public void execute() {\r\n        receiver.attack();\r\n    }\r\n\r\n    @Override\r\n    public void undo() {\r\n        System.out.println(\"Attack command undone\");\r\n    }\r\n}\r\n```\r\n\r\n::\r\n\r\n**Invoker**\r\n\r\nÏÇ¨Ïö©Ïûê(`Client`)ÏôÄ Ïù∏ÌÑ∞ÌéòÏù¥Ïä§ Ìï† Ïàò ÏûàÎäî Ïª®Ìä∏Î°§Îü¨Ïù¥Îã§.\r\nÏã§Ï†ú Î™ÖÎ†πÏùÑ Ìò∏Ï∂úÌïòÍ±∞ÎÇò, Ï∑®ÏÜåÌïòÎ©∞ Î™ÖÎ†πÎì§ÏùÑ Í¥ÄÎ¶¨ÌïúÎã§.\r\n\r\n```java::Í≤åÏûÑ Ïª®Ìä∏Î°§Îü¨\r\npublic class GameController {\r\n    private Command[] buttons = new Command[3];\r\n    private List<Command> commandHistory = new ArrayList<>();\r\n\r\n    public void setCommand(int slot, Command command) {\r\n        buttons[slot] = command;\r\n    }\r\n\r\n    public void pressButton(int slot) {\r\n        if (buttons[slot] != null) {\r\n            buttons[slot].execute();\r\n            commandHistory.add(buttons[slot]);\r\n        }\r\n    }\r\n\r\n    public void undoLastCommand() {\r\n        if (!commandHistory.isEmpty()) {\r\n            Command lastCommand = commandHistory.remove(commandHistory.size() - 1);\r\n            lastCommand.undo();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Receiver**\r\n\r\nÏô∏Î∂ÄÏóêÏÑú Ï†ÑÎã¨ÎêòÎäî Î™ÖÎ†πÏùÑ ÏàòÌñâÌïòÎäî Ï£ºÏ≤¥Ï†ÅÏù∏ Í∞ùÏ≤¥ ÏûêÏ≤¥Ïù¥Îã§.\r\nÍ≤åÏûÑ Ï∫êÎ¶≠ÌÑ∞Ïù¥Î©∞, Ïã§Ï†ú ÎπÑÏ¶àÎãàÏä§ Î°úÏßÅÏùÑ ÏàòÌñâÌïúÎã§. Ï∫êÎ¶≠ÌÑ∞Îäî Ïä§Ïä§Î°ú ÏõÄÏßÅÏù¥ÏßÄÎäî ÏïäÏßÄÎßå, Ïô∏Î∂Ä Î™ÖÎ†πÏóê ÎåÄÌï¥ Ï∫°ÏäêÌôîÌïòÏó¨ Ïù¥Ïóê ÎßûÎäî ÎèôÏûëÏùÑ Ïä§Ïä§Î°ú ÌåêÎã®ÌïòÏó¨ ÏàòÌñâÌïúÎã§.\r\n\r\n\r\n```java::Ï∫êÎ¶≠ÌÑ∞\r\npublic class GameCharacter {\r\n\r\n    private final String name;\r\n    private int positionX = 0;\r\n    private int positionY = 0;\r\n\r\n    public GameCharacter(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public void moveForWard() {\r\n        this.positionX += 1;\r\n        System.out.println(name + \" moved forward to position X: \" + this.positionX);\r\n    }\r\n\r\n    public void moveBack() {\r\n        this.positionX -= 1;\r\n        System.out.println(name + \" moved back to position X: \" + this.positionX);\r\n    }\r\n\r\n    public void jump() {\r\n        positionY += 2;\r\n        System.out.println(name + \" jumped to height Y: \" + positionY);\r\n        // Ï§ëÎ†•ÏúºÎ°ú Ïù∏Ìï¥ Îã§Ïãú ÎÇ¥Î†§Ïò¥\r\n        positionY = 0;\r\n    }\r\n\r\n    public void attack() {\r\n        System.out.println(name + \" performed attack!\");\r\n    }\r\n}\r\n```\r\n\r\n**Client**\r\n\r\n```java::ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ ÏΩîÎìú\r\n// Receiver ÏÉùÏÑ±\r\nGameCharacter mario = new GameCharacter(\"Mario\");\r\n\r\n// Commands ÏÉùÏÑ±\r\nCommand moveCommand = new MoveCommand(mario);\r\nCommand jumpCommand = new JumpCommand(mario);\r\nCommand attackCommand = new AttackCommand(mario);\r\n\r\n// Invoker ÏÑ§Ï†ï\r\nGameController controller = new GameController();\r\ncontroller.setCommand(0, moveCommand);  // Î≤ÑÌäº 0: Ïù¥Îèô\r\ncontroller.setCommand(1, jumpCommand);  // Î≤ÑÌäº 1: Ï†êÌîÑ\r\ncontroller.setCommand(2, attackCommand); // Î≤ÑÌäº 2: Í≥µÍ≤©\r\n\r\n// Í≤åÏûÑ ÌîåÎ†àÏù¥ ÏãúÎÆ¨Î†àÏù¥ÏÖò\r\nSystem.out.println(\"=== Game Start ===\");\r\ncontroller.pressButton(0); // Ïù¥Îèô\r\ncontroller.pressButton(1); // Ï†êÌîÑ\r\ncontroller.pressButton(2); // Í≥µÍ≤©\r\n\r\nSystem.out.println(\"\\n=== Undo Last Action ===\");\r\ncontroller.undoLastCommand(); // ÎßàÏßÄÎßâ Î™ÖÎ†π Ï∑®ÏÜå\r\n```\r\n\r\n> Ïª§Îß®Îìú Ìå®ÌÑ¥ÏùÄ Í∞Å Íµ¨ÏÑ±ÏöîÏÜå Í∞Ñ Ïó≠Ìï†(Ï†ÑÎã¨, Ïã§Ìñâ, Í¥ÄÎ¶¨)ÏùÑ Î∂ÑÎ¶¨ÌïòÏó¨ Í∞ùÏ≤¥Í∞Ñ Í≤∞Ìï©ÎèÑÎ•º ÎÇÆÏ∂îÏñ¥ Ïú†Ïó∞Ìïú Íµ¨Ï°∞Î°ú Î™ÖÎ†πÎì§ÏùÑ ÏàòÌñâÌï† Ïàò ÏûàÎã§.\r\n:{ \"type\": \"tip\", \"icon\": \"lightbulb\" }\r\n\r\n\r\n## Ï†ÅÏö©::applicability\r\n\r\nÏª§Îß®Îìú Ìå®ÌÑ¥Ïùò Íµ¨ÏÑ± ÏöîÏÜåÎäî Í≤∞Ìï©ÎèÑÎ•º ÎÇÆÏ∂îÍ∏∞ÏúÑÌï¥ Ï°¥Ïû¨ÌïòÏßÄÎßå, Í∞ÄÏû• ÌÅ∞ Ïù¥Ï†êÏùÄ Í∞Å Î™ÖÎ†πÏù¥ ÎèÖÎ¶ΩÏ†ÅÏúºÎ°ú Ïã§ÌñâÍ∞ÄÎä•Ìïú Í∞ùÏ≤¥Î°ú ÎßåÎì§Ïñ¥ÏßÑÎã§Îäî Í≤ÉÏù¥Îã§.  \r\n\r\nÏù¥Îäî, `Receiver` Ïä§Ïä§Î°úÎäî ÏàòÌñâÎê† Î™ÖÎ†πÏùÑ Ïïå ÌïÑÏöîÍ∞Ä ÏóÜÏúºÎ©∞, ÎÇ¥Î∂Ä ÏùòÏ°¥ Í∞ùÏ≤¥Ïóê ÎåÄÌï¥ÏÑú ÏÉÅÌÉúÎ•º Î≥ÄÍ≤ΩÌï† Ïàò ÏûàÎäî Ïù∏ÌÑ∞ÌéòÏù¥Ïä§Îßå Ï†úÍ≥µÌïòÎ©¥, `Command`ÏóêÏÑú ÌôïÏû•ÌïòÏó¨ Í∏∞Îä•ÏùÑ ÎßåÎì§Ïñ¥ ÏÇ¨Ïö©Ìï† Ïàò ÎèÑ ÏûàÍ∏∞ ÎïåÎ¨∏Ïù¥Îã§.  \r\n\r\nÏù¥ ÌôïÏû•ÏùÑ Ïù¥Ïö©Ìï¥, ÎèÖÎ¶ΩÏ†ÅÏúºÎ°ú ÌñâÏúÑÏùò Îã®ÏúÑÎ•º Ï∂îÏÉÅÌôî ÌïòÏó¨ Î™ÖÎ†πÏùÑ ÏàòÌñâ ÌïòÍ±∞ÎÇò Ï∑®ÏÜå ÌïúÎã§. `Client`Îäî Ïù¥Îü¨Ìïú Îã®ÏàúÌôîÎêú Î™ÖÎ†πÏùÑ ÌïÑÏöîÏóê ÎßûÍ≤å Ìò∏Ï∂úÏûêÏóêÍ≤å Ï†ÑÎã¨Îßå ÌïúÎã§Î©¥, `Invoker`Îäî Î™ÖÎ†πÏùÑ Ïã§ÌñâÌïòÍ±∞ÎÇò Ï∑®ÏÜåÌïòÎäî Ïó≠Ìï†Îßå ÏàòÌñâÌïòÎ©¥ ÎêúÎã§.\r\n\r\nÏª§Îß®Îìú Ìå®ÌÑ¥ÏùÄ ÏûëÏóÖÎì§Ïùò Ïã§ÌñâÏùÑ **ÏòàÏïΩ**ÌïòÍ±∞ÎÇò, ÌÅêÏûâ(Queueing)Ìï† Ïàò ÏûàÏúºÎ©∞, **Î°úÍ∑∏**Î•º ÎÇ®Í∏∞Í±∞ÎÇò **Î≥µÍµ¨**Ìï† Ïàò ÏûàÎäî Í∏∞Îä•ÏùÑ Ï†úÍ≥µÌïòÍ∏∞ ÎïåÎ¨∏Ïóê, **ÏßÅÎ†¨ÌôîÎêú Ïã§Ìñâ Îã®ÏúÑÏùò Íµ¨Ï°∞**ÏóêÏÑú ÏÇ¨Ïö©ÌïòÍ∏∞ Ï†ÅÌï©ÌïòÎã§. \r\n\r\n\r\n## Ïû•Îã®Ï†ê::pros-and-cons\r\n\r\n**Ïû•Ï†ê**\r\n\r\n* [Îã®Ïùº Ï±ÖÏûÑ ÏõêÏπô](): ÏûëÏóÖÏùÑ Ìò∏Ï∂úÌïòÎäî ÌÅ¥ÎûòÏä§Îì§ÏùÑ ÏàòÌñâÌïòÎäî ÌÅ¥ÎûòÏä§Îì§Î°ú Î∂ÄÌÑ∞ Î∂ÑÎ¶¨Ìï† Ïàò ÏûàÎã§.\r\n* [Í∞úÎ∞©/ÌèêÏáÑ ÏõêÏπô](): Í∏∞Ï°¥ ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ ÏΩîÎìúÎ•º ÏÜêÏÉÅÌïòÏßÄ ÏïäÍ≥† Ïï±Ïóê ÏÉà Ïª§Îß®ÎìúÎì§ÏùÑ ÎèÑÏûÖÌï† Ïàò ÏûàÎã§.\r\n* Ïã§Ìñâ Ï∑®ÏÜåÎòêÎäî Ïû¨Ïã§ÌñâÏùÑ Íµ¨ÌòÑÌï† Ïàò ÏûàÎã§.\r\n* ÏûëÏóÖÎì§Ïùò ÏßÄÏó∞Îêú Ïã§ÌñâÏùÑ Íµ¨ÌòÑÌï† ÏàòÏûàÎã§.\r\n* Í∞ÑÎã®Ìïú Ïª§Îß®ÎìúÎì§Ïùò ÏßëÌï©ÏùÑ Î≥µÏû°Ìïú Ïª§Îß®ÎìúÎ°ú Ï°∞Ìï©Ìï† Ïàò ÏûàÎã§\r\n\r\n**Îã®Ï†ê**\r\n\r\n* Î∞úÏÜ°ÏûêÏôÄ ÏàòÏã†Ïûê ÏÇ¨Ïù¥Ïóê Ï∂îÍ∞Ä ÌÅ¥ÎûòÏä§Î•º ÎèÑÏûÖÌïòÏó¨ ÏΩîÎìú Î≥µÏû°ÏÑ±Ïù¥ Ï¶ùÍ∞ÄÌï† Ïàò ÏûàÎã§.\r\n"
  },
  {
    "path": "/docs/software-design/bridge-pattern",
    "header": {
      "layout": "post",
      "title": "Î∏åÎ¶øÏßÄ Ìå®ÌÑ¥ (Bridge Pattern)",
      "tags": [
        "Bridge Pattern",
        "Design Pattern",
        "Software Design",
        "OCP",
        "SRP"
      ],
      "date": 1592191020000,
      "thumbnail": "/post/software-design/bridge-pattern-intro.svg",
      "profile-image": "/post/profile/profile0.jpg",
      "current-company": "Cubic INC",
      "current-position": "SI Researcher",
      "summary": "Î∏åÎ¶øÏßÄ Ìå®ÌÑ¥",
      "excerpt-separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÏÜåÌîÑÌä∏Ïõ®Ïñ¥ ÏÑ§Í≥Ñ"
      ],
      "images": [],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "ÌïµÏã¨ Íµ¨ÏÑ±ÏöîÏÜå::key-components",
            "title": "ÌïµÏã¨ Íµ¨ÏÑ±ÏöîÏÜå",
            "fragment": "key-components",
            "children": []
          },
          {
            "rank": 2,
            "origin": "ÏòàÏ†ú::example",
            "title": "ÏòàÏ†ú",
            "fragment": "example",
            "children": [
              {
                "rank": 3,
                "origin": "Î©ÄÌã∞ ÎØ∏ÎîîÏñ¥ ÌîåÎ†àÏù¥Ïñ¥::-player-example",
                "title": "Î©ÄÌã∞ ÎØ∏ÎîîÏñ¥ ÌîåÎ†àÏù¥Ïñ¥",
                "fragment": "-player-example",
                "children": []
              },
              {
                "rank": 3,
                "origin": "Î©îÏÑ∏ÏßÄ Î∞úÏÜ° ÏãúÏä§ÌÖú::message-sender-example",
                "title": "Î©îÏÑ∏ÏßÄ Î∞úÏÜ° ÏãúÏä§ÌÖú",
                "fragment": "message-sender-example",
                "children": []
              }
            ]
          },
          {
            "rank": 2,
            "origin": "Ï†ÅÏö©::applicability",
            "title": "Ï†ÅÏö©",
            "fragment": "applicability",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Ïû•Îã®Ï†ê::pros-and-cons",
            "title": "Ïû•Îã®Ï†ê",
            "fragment": "pros-and-cons",
            "children": []
          }
        ]
      }
    },
    "description": "Î∏åÎ¶øÏßÄ Ìå®ÌÑ¥ÏùÄ Íµ¨ÌòÑÎ∂ÄÏôÄ Ï∂îÏÉÅÎ∂ÄÎ•º Î∂ÑÎ¶¨ÌïòÏó¨ Í∞ÅÍ∞Å ÎèÖÎ¶ΩÏ†ÅÏúºÎ°ú Î≥ÄÌòïÌï† Ïàò ÏûàÎèÑÎ°ù ÌïòÎäî Ìå®ÌÑ¥Ïù¥Îã§.\r\nÏù¥ Ìå®ÌÑ¥ÏùÄ Í∞ÅÍ∞ÅÏùò ÎèÖÎ¶ΩÎêú ÌÅ¥ÎûòÏä§Î°ú Íµ¨ÏÑ±ÌïòÏó¨ ÏÑúÎ°ú Ïó∞Í≤∞ÌïòÏó¨ ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎèÑÎ°ù ÌïúÎã§.",
    "content": "\r\n## ÌïµÏã¨ Íµ¨ÏÑ±ÏöîÏÜå::key-components\r\n\r\n- **Abstraction**: Í∏∞Îä•Ïùò Íµ¨ÌòÑÏùÑ ÏúÑÌïú Ïù∏ÌÑ∞ÌéòÏù¥Ïä§Î•º Ï†ïÏùòÌïúÎã§.\r\n- **RefinedAbstraction**: Abstraction Ïù∏ÌÑ∞ÌéòÏù¥Ïä§Î•º Íµ¨ÌòÑÌïòÏó¨ Í∏∞Îä•ÏùÑ ÌôïÏû•ÌïúÎã§.\r\n- **Implementor**: Ïã§Ï†ú ÎèôÏûëÏùò Íµ¨ÌòÑÎ∂ÄÎ•º Ï†ïÏùòÌïúÎã§.\r\n- **ConcreteImplementor**: Implementor Ïù∏ÌÑ∞ÌéòÏù¥Ïä§Î•º Íµ¨ÌòÑÌïòÏó¨ Ïã§Ï†ú ÎèôÏûëÏùÑ ÏàòÌñâÌïúÎã§.\r\n- **Client**: Bridge Ìå®ÌÑ¥ÏùÑ ÏÇ¨Ïö©ÌïòÎäî ÌÅ¥ÎûòÏä§Ïù¥Îã§.\r\n\r\nÎ®ºÏ†Ä Bridge Ìå®ÌÑ¥ÏùÑ ÏÇ¨Ïö©ÌïòÍ∏∞ ÏúÑÌï¥ ÏÑ†Ïñ∏Ìïú ÌïµÏã¨ Íµ¨ÏÑ±ÏöîÏÜåÎäî ÏïÑÎûòÏôÄ Í∞ôÏùÄ Í¥ÄÍ≥ÑÎ°ú Íµ¨ÏÑ±ÎêúÎã§.\r\n\r\n```mermaid\r\nclassDiagram\r\n    class Abstraction {\r\n        <<abstract>>\r\n        -Implementor implementor\r\n        +changeImplementor(Implementor implementor)\r\n        +feature1()\r\n        +feature2()\r\n    }\r\n    class RefineAbstraction {\r\n        +feature1()\r\n        +feature2()\r\n    }\r\n    class Implementor {\r\n        <<interface>>\r\n        +method1()\r\n        +method2()\r\n        +method3()\r\n    }\r\n    class ConcreteImplementorA {\r\n        +method1()\r\n        +method2()\r\n        +method3()\r\n    }\r\n    class ConcreteImplementorB {\r\n        +method1()\r\n        +method2()\r\n        +method3()\r\n    }\r\n    RefineAbstraction --|> Abstraction\r\n    ConcreteImplementorA ..|> Implementor\r\n    ConcreteImplementorB ..|> Implementor\r\n    Abstraction --> Implementor\r\n```\r\n\r\nÍ∞ÅÍ∞ÅÏùò Íµ¨ÌòÑÎ∂Ä(Implementor)ÏôÄ Ï∂îÏÉÅÎ∂Ä(Abstraction)ÎùºÎäî Bridge ÌÜµÌï¥ Ïó∞Í≤∞ÎêòÏñ¥ ÏÇ¨Ïö©ÏûêÏóêÍ≤å Ï†úÍ≥µ ÎêúÎã§.  \r\n**ÎòêÌïú Íµ¨ÌòÑÎ∂ÄÎäî Îü∞ÌÉÄÏûÑÏóê Ïñ∏Ï†úÎì†ÏßÄ Î≥ÄÍ≤ΩÌï† Ïàò ÏûàÍ∏∞ ÎïåÎ¨∏Ïóê Ï∂îÏÉÅÎ∂ÄÎßå Ï∞∏Ï°∞ÌïòÎäî Ïú†Ïó∞Ìïú Íµ¨Ï°∞Î•º Í∞ÄÏßÄÍ≥† ÏûàÎã§.**\r\nÏúÑÏùò Îã§Ïù¥Ïñ¥Í∑∏Îû®ÏùÑ Î≥¥Î©¥ Ï∂îÏÉÅÎ∂ÄÎ•º Ï∂îÍ∞ÄÌïòÍ≥† Ïã∂Îã§Î©¥ Ï†ïÏ†úÎêú Ï∂îÏÉÅÎ∂Ä(RefineAbstraction)Î•º Ï∂îÍ∞ÄÌïòÏó¨ Íµ¨ÌòÑÌïòÎ©¥ ÎêòÎ©∞, Íµ¨ÌòÑÎ∂ÄÎ•º Ï∂îÍ∞ÄÌïòÍ≥† Ïã∂Îã§Î©¥, Ïã§Ï†ú Íµ¨ÌòÑÎ∂Ä(ConcreteImplementor)Î•º Ï∂îÍ∞ÄÌïòÏó¨ Íµ¨ÌòÑÌïòÎ©¥ ÎêúÎã§.\r\n\r\n## ÏòàÏ†ú::example\r\n\r\n`Bridge Pattern`ÏùÑ ÏïåÏïÑÎ≥¥Í∏∞ ÏúÑÌï¥ Îã§ÏùåÍ≥º Í∞ôÏùÄ ÏòàÏ†úÎ•º ÏÇ¥Ìé¥Î≥¥Ïûê.\r\n\r\n### Î©ÄÌã∞ ÎØ∏ÎîîÏñ¥ ÌîåÎ†àÏù¥Ïñ¥::-player-example\r\n\r\nÎã§ÏñëÌïú Ïû•ÏπòÏùò ÎØ∏ÎîîÏñ¥ ÌîåÎ†àÏù¥Ïñ¥Î•º Íµ¨ÌòÑÌïòÎ†§ ÌïúÎã§.\r\nÎòêÌïú Í∞ÅÍ∞ÅÏùò Ïû•ÏπòÏóêÏÑúÎäî ÎØ∏ÎîîÏñ¥ ÌîåÎ†àÏù¥Ïñ¥Ïùò Í∏∞Îä•ÏùÑ ÌôïÏû•ÌïòÏó¨ ÎèôÏòÅÏÉÅ ÌîåÎ†àÏù¥Ïñ¥ÏôÄ ÏùåÏïÖ ÌîåÎ†àÏù¥Ïñ¥Î•º Íµ¨ÌòÑÌïòÎ†§ ÌïúÎã§.\r\n\r\nÏù¥Îì§ Í∞ÑÏóê Í≥µÌÜµÏ†ÅÏù∏ Í∏∞Îä•ÏùÑ Ï∂îÏÉÅÌôîÌïòÏó¨ Íµ¨ÌòÑÌïòÍ≥†, Í∞ÅÍ∞ÅÏùò ÌîåÎ†àÏù¥Ïñ¥Îì§ÏùÄ Ïù¥Î•º Íµ¨ÌòÑÌïòÏó¨ ÏÇ¨Ïö©ÌïúÎã§.\r\n\r\n\r\n**Implementor**\r\n\r\nÍ≥µÌÜµÏ†ÅÏù∏ Í∏∞Îä•ÏùÑ Ï∂îÏÉÅÌôîÌïòÏó¨ Íµ¨ÌòÑÌïúÎã§.\r\n\r\n::code-group\r\n\r\n```java::PlayerImplementor.java\r\npublic interface PlayerImplementor {\r\n\r\n    //ÌååÏùºÎ™ÖÏùÑ Î∞õÏïÑ ÌîåÎ†àÏù¥ ÌïúÎã§.\r\n    void playFile(String filename);\r\n\r\n    //ÏùºÏãúÏ†ïÏßÄ\r\n    void stopPlayback();\r\n\r\n    //ÏΩîÎç±ÏùÑ Î°úÎìúÌïúÎã§.\r\n    void loadCodec(String codec);\r\n}\r\n```\r\n\r\n```java::WindowsPlayer.java\r\npublic class WindowsPlayer implements PlayerImplementor {\r\n\r\n    @Override\r\n    public void playFile(String filename) {\r\n        loadCodec(\"Windows DirectShow\");\r\n        System.out.println(\"Playing \" + filename + \" using Windows media player\");\r\n    }\r\n\r\n    @Override\r\n    public void stopPlayback() {\r\n        System.out.println(\"Stopping playback on Windows\");\r\n    }\r\n\r\n    @Override\r\n    public void loadCodec(String codec) {\r\n        System.out.println(\"Loading \" + codec + \" codec on Windows\");\r\n    }\r\n}\r\n```\r\n\r\n```java::MacPlayer.java\r\npublic class MacPlayer implements PlayerImplementor {\r\n    @Override\r\n    public void playFile(String filename) {\r\n        loadCodec(\"Apple QuickTime\");\r\n        System.out.println(\"Playing \"+ filename + \" using QuickTime Player\");\r\n    }\r\n\r\n    @Override\r\n    public void stopPlayback() {\r\n        System.out.println(\"Stopping playback on MacOS\");\r\n    }\r\n\r\n    @Override\r\n    public void loadCodec(String codec) {\r\n        System.out.println(\"Loading \" + codec + \" codec on MacOS\");\r\n    }\r\n}\r\n```\r\n\r\n::\r\n\r\n**Abstraction**\r\n\r\nImplementor Ïù∏ÌÑ∞ÌéòÏù¥Ïä§Î•º Ï∞∏Ï°∞ÌïòÏó¨ Í∏∞Îä•ÏùÑ ÌôïÏû•ÌïúÎã§.\r\n\r\n::code-group\r\n\r\n```java::MediaPlayer.java\r\npublic abstract class MediaPlayer {\r\n\r\n    protected PlayerImplementor implementor;\r\n\r\n    public MediaPlayer(PlayerImplementor implementor) {\r\n        this.implementor = implementor;\r\n    }\r\n\r\n    public abstract void play(String filename);\r\n    public abstract void stop();\r\n}\r\n```\r\n\r\n```java::VideoPlayer.java\r\npublic class VideoPlayer extends MediaPlayer {\r\n\r\n    public VideoPlayer(PlayerImplementor implementor) {\r\n        super(implementor);\r\n    }\r\n\r\n    @Override\r\n    public void play(String filename) {\r\n        System.out.println(\"Video Player:\");\r\n        implementor.playFile(filename);\r\n    }\r\n\r\n    @Override\r\n    public void stop() {\r\n        System.out.println(\"Video Player:\");\r\n        implementor.stopPlayback();\r\n    }\r\n}\r\n```\r\n\r\n```java::MusicPlayer.java\r\npublic class MusicPlayer extends MediaPlayer {\r\n\r\n    public MusicPlayer(PlayerImplementor implementor) {\r\n        super(implementor);\r\n    }\r\n\r\n    @Override\r\n    public void play(String filename) {\r\n        System.out.println(\"Music Player:\");\r\n        implementor.playFile(filename);\r\n    }\r\n\r\n    @Override\r\n    public void stop() {\r\n        System.out.println(\"Music Player:\");\r\n        implementor.stopPlayback();\r\n    }\r\n}\r\n```\r\n\r\n::\r\n\r\n\r\n**Client**\r\n\r\nÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ÏóêÏÑúÎäî Ïã§Ï†úÎ°ú Í∞ÅÍ∞ÅÏùò ÎèÖÎ¶ΩÎêú Ïª¥Ìè¨ÎÑåÌä∏Î•º Ïù¥Ïö©Ìï¥, Îã§ÏñëÌïú Í∏∞Îä•ÏúºÎ°ú ÌôïÏû•ÌïòÏó¨ ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎã§.\r\n\r\n::code-group\r\n\r\n```java::MacOSÏùò ÏùåÏïÖ ÌîåÎ†àÏù¥Ïñ¥ ÏòàÏ†ú\r\nPlayerImplementor macPlayer = new MacPlayer();\r\nMediaPlayer macMusicPlayer = new MusicPlayer(macPlayer);\r\n\r\nmacMusicPlayer.play(\"music.mp3\");\r\nmacMusicPlayer.stop();\r\n```\r\n\r\n```java::WindowsÏùò ÎèôÏòÅÏÉÅ ÌîåÎ†àÏù¥Ïñ¥ ÏòàÏ†ú\r\nPlayerImplementor windowsPlayer = new WindowsPlayer();\r\nMediaPlayer windowsVideoPlayer = new VideoPlayer(windowsPlayer);\r\n\r\nwindowsVideoPlayer.play(\"video.mp4\");\r\nwindowsVideoPlayer.stop();\r\n```\r\n\r\n::\r\n\r\n\r\n#### Ï∂îÍ∞ÄÏ†ÅÏù∏ ÏöîÍµ¨ÏÇ¨Ìï≠::additional-requirements\r\n\r\nÏúÑÏùò Í∏∞Îä•Ïù¥ Í≤ΩÏö∞ Ï∂îÏÉÅÎ∂ÄÏôÄ Íµ¨ÌòÑÎ∂ÄÎäî Î™ÖÎ∞±ÌïòÍ≤å ÎèÖÎ¶ΩÏ†ÅÏúºÎ°ú ÎèôÏûëÌïúÎã§.\r\nÎßåÏïΩ ÌòÑÏû¨Ïùò ÏÉÅÌô©ÏóêÏÑú AppPlayer Í∞Ä Ï∂îÍ∞ÄÎêúÎã§Î©¥ Ïñ¥Îñ®Íπå? BlueStack Ïï±Ïóê ÎåÄÌï¥ ÌôïÏû•Ìï† ÏàòÏûàÎäî ÏΩîÎìúÎ•º ÏïÑÎûòÏôÄ Í∞ôÏù¥ Ï∂îÍ∞ÄÌï† ÏàòÏûàÎã§.\r\n\r\n\r\n::code-group\r\n\r\n```java::AndroidAppPlayer.java\r\npublic abstract class AndroidAppPlayer extends MediaPlayer {\r\n\r\n    public AndroidAppPlayer(PlayerImplementor implementor) {\r\n        super(implementor);\r\n    }\r\n    \r\n    protected void emulateVirtualMachine() {\r\n        System.out.println(\"Emulating Android Virtual Machine\");\r\n    }\r\n}\r\n```\r\n\r\n```java::BlueStackAppPlayer.java\r\npublic class BlueStackAppPlayer extends AndroidAppPlayer {\r\n\r\n    public BlueStackAppPlayer(PlayerImplementor implementor) {\r\n        super(implementor);\r\n    }\r\n\r\n    @Override\r\n    public void play(String filename) {\r\n        super.emulateVirtualMachine();\r\n        System.out.println(\"App Player:\");\r\n        implementor.playFile(filename);\r\n    }\r\n\r\n    @Override\r\n    public void stop() {\r\n        System.out.println(\"App Player:\");\r\n        implementor.stopPlayback();\r\n    }\r\n}\r\n```\r\n\r\n```java::WindowsÏùò BlueStack Ïï± ÌîåÎ†àÏù¥Ïñ¥ ÏòàÏ†ú\r\n\r\nPlayerImplementor windowsPlayer = new WindowsPlayer();\r\nMediaPlayer windowsBlueStackPlayer = new BlueStackAppPlayer(windowsPlayer);\r\n\r\nwindowsBlueStackPlayer.play(\"app.apk\");\r\nwindowsBlueStackPlayer.stop();\r\n```\r\n\r\n::\r\n\r\n\r\n### Î©îÏÑ∏ÏßÄ Î∞úÏÜ° ÏãúÏä§ÌÖú::message-sender-example\r\n\r\nÍ≥µÌÜµ Íµ¨ÌòÑÎ∂ÄÎ°úÎäî Î©îÏÑ∏Ïßï ÌîåÎû´ÌèºÏù¥ Ï°¥Ïû¨ÌïúÎã§.\r\nÏù¥ Íµ¨ÌòÑÎ∂ÄÎ•º ÌôïÏû•ÌïòÏó¨ Î©îÏÑ∏ÏßÄ Ï†ÑÏÜ°Ïóê ÎåÄÌïú Ï∂îÏÉÅÏ†ÅÏù∏ Î∂ÄÎ∂ÑÏùÑ ÌôïÏû•ÌïúÎã§.\r\n\r\n**Implementor**\r\n\r\nÍµ¨ÌòÑÎ∂ÄÎ°úÏÑú Îã§ÏùåÏùò Í∏∞Îä•ÏùÑ Í≥µÌÜµÌôîÌïúÎã§.\r\n\r\n1. Ïã§Ï†ú Î©îÏÑ∏ÏßÄ Ï†ÑÏÜ°\r\n2. ÏàòÏã†Ïù∏ Í≤ÄÏ¶ù\r\n3. Î©îÏÑ∏ÏßÄ ÏÑ§Ï†ï ÏÑ∏ÌåÖ\r\n\r\n::code-group\r\n\r\n```java::MessageSenderImplementor.java\r\npublic interface MessageSenderImplementor {\r\n\r\n    void sendMessage(String message, String recipient);\r\n    boolean validateRecipient(String recipient);\r\n    void configureSettings(Map<String, String> settings);\r\n}\r\n```\r\n\r\n```java::EmailPlatform.java\r\npublic class EmailPlatform implements MessageSenderImplementor {\r\n\r\n    @Override\r\n    public void sendMessage(String message, String recipient) {\r\n        if (validateRecipient(recipient)) {\r\n            System.out.println(\"Sending email to \" + recipient);\r\n            System.out.println(\"Email content: \" + message);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public boolean validateRecipient(String recipient) {\r\n        return recipient.matches(\"^[A-Za-z0-9+_.-]+@(.+)$\");\r\n    }\r\n\r\n    @Override\r\n    public void configureSettings(Map<String, String> settings) {\r\n        System.out.println(\"Configuring email settings: \" + settings);\r\n    }\r\n}\r\n```\r\n\r\n```java::SMSPlatform.java\r\npublic class SMSPlatform implements MessageSenderImplementor {\r\n\r\n    @Override\r\n    public void sendMessage(String message, String recipient) {\r\n        if (validateRecipient(recipient)) {\r\n            System.out.println(\"Sending SMS to \" + recipient);\r\n            System.out.println(\"SMS content: \" + message);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public boolean validateRecipient(String recipient) {\r\n        return recipient.matches(\"^\\\\d{10}$\");\r\n    }\r\n\r\n    @Override\r\n    public void configureSettings(Map<String, String> settings) {\r\n        System.out.println(\"Configuring SMS settings: \" + settings);\r\n    }\r\n}\r\n```\r\n\r\n::\r\n\r\n**Abstraction**\r\n\r\nÏ∂îÏÉÅÎ∂ÄÎ°úÏÑú Íµ¨ÌòÑÎ∂ÄÏùò Í∏∞Îä•ÏùÑ ÌôïÏû•ÌïòÏó¨ Í∏¥Í∏â Î©îÏÑ∏ÏßÄ, ÏùºÎ∞ò Î©îÏÑ∏ÏßÄ Îì±ÏùÑ Ï≤òÎ¶¨Ìï† Ïàò ÏûàÎäî Î©îÏÑ∏ÏßÄ Ï†ÑÏÜ°ÏûêÎ•º Íµ¨ÌòÑÌïúÎã§.\r\n\r\n\r\n::code-group\r\n\r\n```java::MessageSender.java\r\npublic abstract class MessageSender {\r\n    protected MessageSenderImplementor implementor;\r\n\r\n    protected MessageSender(MessageSenderImplementor implementor) {\r\n        this.implementor = implementor;\r\n    }\r\n\r\n    protected void changeImplementor(MessageSenderImplementor implementor) {\r\n        this.implementor = implementor;\r\n    }\r\n\r\n    public abstract void send(String message, String recipient);\r\n}\r\n```\r\n\r\n```java::UrgentMessageSender.java\r\npublic class UrgentMessageSender extends MessageSender {\r\n\r\n    public UrgentMessageSender(MessageSenderImplementor implementor) {\r\n        super(implementor);\r\n    }\r\n\r\n    @Override\r\n    public void send(String message, String recipient) {\r\n        message = \"[URGENT] \" + message;\r\n        implementor.sendMessage(message, recipient);\r\n    }\r\n}\r\n```\r\n\r\n```java::RegalarMessageSender.java\r\npublic class RegularMessageSender extends MessageSender {\r\n\r\n    public RegularMessageSender(MessageSenderImplementor implementor) {\r\n        super(implementor);\r\n    }\r\n\r\n    @Override\r\n    public void send(String message, String recipient) {\r\n        implementor.sendMessage(message, recipient);\r\n    }\r\n}\r\n```\r\n\r\n::\r\n\r\n**Client**\r\n\r\nÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ÏóêÏÑúÎäî Ïã§Ï†úÎ°ú Í∞ÅÍ∞ÅÏùò ÎèÖÎ¶ΩÎêú Ïª¥Ìè¨ÎÑåÌä∏Î•º Ïù¥Ïö©Ìï¥, Îã§ÏñëÌïú Í∏∞Îä•ÏúºÎ°ú ÌôïÏû•ÌïòÏó¨ ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎã§.\r\n\r\n```java::Î©îÏÑ∏ÏßÄ Î∞úÏÜ° ÏòàÏ†ú\r\nMap<String, String> emailSettings = new HashMap<>();\r\nemailSettings.put(\"smtp\", \"smtp.gmail.com\");\r\nemailSettings.put(\"port\", \"587\");\r\n\r\nMap<String, String> smsSettings = new HashMap<>();\r\nsmsSettings.put(\"api_key\", \"your_api_key\");\r\nsmsSettings.put(\"provider\", \"twilio\");\r\n\r\n\r\nMessageSenderImplementor emailPlatform = new EmailPlatform();\r\nMessageSenderImplementor smsPlatform = new EmailPlatform();\r\n\r\nemailPlatform.configureSettings(emailSettings);\r\nsmsPlatform.configureSettings(smsSettings);\r\n\r\nMessageSender urgentEmailSender = new UrgentMessageSender(emailPlatform);\r\nMessageSender regularSMSSender = new RegularMessageSender(smsPlatform);\r\n\r\nurgentEmailSender.send(\"Server is down!\", \"admin@company.com\");\r\nregularSMSSender.send(\"Hello, how are you?\", \"+1234567890\");\r\n```\r\n\r\n## Ï†ÅÏö©::applicability\r\n\r\n> Î∏åÎ¶øÏßÄ Ìå®ÌÑ¥ÏùÄ Ïó¨Îü¨ Î≥ÄÌòïÏùÑ Í∞ÄÏßÑ Î™®ÎÜÄÎ¶¨Ïãù ÌÅ¥ÎûòÏä§Î•º Î∂ÑÎ¶¨ÌïòÏó¨ Í∞ÅÍ∞ÅÏùò ÎèÖÎ¶ΩÏ†ÅÏù∏ ÌÅ¥ÎûòÏä§Î°ú ÎÇòÎàÑÍ≥† Îã§ÏñëÌïú ÌôïÏû• Í∏∞Îä•ÏùÑ Íµ¨Ï°∞ÌôîÌïòÏó¨ Ïó∞Í≤∞ÌïòÍ∏∞ ÏúÑÌï¥ ÏÇ¨Ïö©ÌïúÎã§.\r\n:{ \"type\": \"tip\", \"icon\": \"lightbulb\" }\r\n\r\nÏñ¥Îñ§ Í∏∞Îä• Ï†ïÏùòÌïòÎäî ÌÅ¥ÎûòÏä§Í∞Ä Í±∞ÎåÄÌï¥Ïßà ÏàòÎ°ù ÏûëÎèô Î∞©ÏãùÏù¥ Î≥µÏû°Ìï¥ÏßÄÍ≥†, Ïú†ÏßÄÎ≥¥Ïàò Î∞è ÌôïÏû•Ïù¥ Ïñ¥Î†§ÏõåÏßÑÎã§.\r\nÌïúÍ≥≥Ïóê ÏûàÎäî ÏΩîÎìúÎäî Îã§Î•∏ ÏΩîÎìúÏóê ÏòÅÌñ•ÏùÑ ÎØ∏ÏπòÍ∏∞ ÏâΩÍ∏∞ ÎïåÎ¨∏Ïóê, Ïù¥Î•º Î∂ÑÎ¶¨ÌïòÏó¨ ÎèÖÎ¶ΩÏ†ÅÏúºÎ°ú Í¥ÄÎ¶¨Ìï† Ïàò ÏûàÎèÑÎ°ù ÌïòÎäîÍ≤ÉÏù¥ Ï¢ãÎã§.\r\n\r\nÎ∏åÎ¶øÏßÄ Ìå®ÌÑ¥ÏùÑ ÏÇ¨Ïö©ÌïòÎ©¥, Î™®ÎÜÄÎ¶¨Ïãù ÌÅ¥ÎûòÏä§Î•º Ïó¨Îü¨ ÌÅ¥ÎûòÏä§ Í≥ÑÏ∏µÍµ¨Ï°∞Î°ú ÎÇòÎàåÏàòÏûàÎã§. Í∑∏Îü∞ Îã§Ïùå Í∞Å Í≥ÑÏ∏µÍµ¨Ï°∞Ïùò ÌÅ¥ÎûòÏä§Îì§ÏùÑ Îã§Î•∏ Í≥ÑÏ∏µÍµ¨Ï°∞Îì§Ïóê ÏûàÎäî ÌÅ¥ÎûòÏä§Îì§Í≥ºÎäî ÎèÖÎ¶ΩÏ†ÅÏúºÎ°ú Î≥ÄÍ≤ΩÌï† Ïàò ÏûàÎã§.\r\nÏù¥ Ï†ëÍ∑º Î∞©ÏãùÏùÄ ÏΩîÎìúÏùò Ïú†ÏßÄÍ¥ÄÎ¶¨Î•º Îã®ÏàúÌôîÌïòÍ≥† Í∏∞Ï°¥ÏΩî ÎìúÍ∞Ä ÏÜêÏÉÅÎê† ÏúÑÌóòÏùÑ ÏµúÏÜåÌôîÌïúÎã§.\r\n\r\n\r\n## Ïû•Îã®Ï†ê::pros-and-cons\r\n\r\n**Ïû•Ï†ê**\r\n\r\n* ÌîåÎû´Ìèº ÎèÖÎ¶ΩÏ†ÅÏù∏ ÌÅ¥ÎûòÏä§Îì§Í≥º Ïï±Îì§ÏùÑ ÎßåÎì§ Ïàò ÏûàÎã§.\r\n* ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ ÏΩîÎìúÎäî ÏÉÅÏúÑ ÏàòÏ§ÄÏùò Ï∂îÏÉÅÌôîÎ•º ÌÜµÌï¥ ÏûëÎèôÌïòÎ©∞, ÌîåÎû´Ìèº ÏÑ∏Î∂Ä Ï†ïÎ≥¥Ïóê ÎÖ∏Ï∂ú ÎêòÏßÄ ÏïäÎäîÎã§.\r\n* [Í∞úÎ∞©/ÌèêÏáÑ ÏõêÏπô](): ÏÉàÎ°úÏö¥ Ï∂îÏÉÅÌôî Îì§Í≥º Íµ¨ÌòÑÎì§ÏùÑ ÏÉÅÌò∏ ÎèÖÎ¶ΩÏ†ÅÏúºÎ°ú ÎèÑÏûÖÌï† Ïàò ÏûàÎã§.\r\n* [Îã®Ïùº Ï±ÖÏûÑ ÏõêÏπô](): Ï∂îÏÉÅÌôîÏùò ÏÉÅÏúÑÏàòÏ§Ä ÎÖºÎ¶¨ÏôÄ Íµ¨ÌòÑÏùò ÌîåÎû´Ìèº ÏÑ∏Î∂Ä Ï†ïÎ≥¥Ïóê ÏßëÏ§ëÌï† Ïàò ÏûàÎã§.\r\n\r\n**Îã®Ï†ê**\r\n\r\n* Í≤∞Ìï©ÎèÑÍ∞Ä ÎÜíÏùÄ ÌÅ¥ÎûòÏä§Ïóê Ìå®ÌÑ¥ÏùÑ Ï†ÅÏö©ÌïòÎ©¥ ÏΩîÎìúÎ•º Îçî Î≥µÏû°ÌïòÍ≤å ÎßåÎì§ Ïàò ÏûàÎã§.\r\n"
  },
  {
    "path": "/docs/software-design/adapter-pattern",
    "header": {
      "layout": "post",
      "title": "Ïñ¥ÎåëÌÑ∞ Ìå®ÌÑ¥ (Adapter Pattern)",
      "tags": [
        "Adapter Pattern",
        "Design Pattern"
      ],
      "date": 1591960620000,
      "thumbnail": "/post/software-design/adapter-pattern-intro.svg",
      "profile-image": "/post/profile/profile0.jpg",
      "current-company": "Cubic INC",
      "current-position": "SI Researcher",
      "summary": "Ïñ¥ÎåëÌÑ∞ Ìå®ÌÑ¥",
      "excerpt-separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÏÜåÌîÑÌä∏Ïõ®Ïñ¥ ÏÑ§Í≥Ñ"
      ],
      "images": [],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "Íµ¨ÏÑ±ÏöîÏÜå",
            "title": "Íµ¨ÏÑ±ÏöîÏÜå",
            "fragment": "root-0",
            "children": []
          },
          {
            "rank": 2,
            "origin": "ÏòàÏ†ú",
            "title": "ÏòàÏ†ú",
            "fragment": "root-1",
            "children": [
              {
                "rank": 3,
                "origin": "ÏÉÅÌô©",
                "title": "ÏÉÅÌô©",
                "fragment": "root-1-0",
                "children": []
              },
              {
                "rank": 3,
                "origin": "Íµ¨ÏÑ±ÏöîÏÜå Ï†ïÏùò",
                "title": "Íµ¨ÏÑ±ÏöîÏÜå Ï†ïÏùò",
                "fragment": "root-1-1",
                "children": []
              },
              {
                "rank": 3,
                "origin": "ÏÇ¨Ïö©",
                "title": "ÏÇ¨Ïö©",
                "fragment": "root-1-2",
                "children": []
              }
            ]
          }
        ]
      }
    },
    "description": "Ïñ¥ÎåëÌÑ∞ Ìå®ÌÑ¥ÏùÄ ÏßÅÏ†ëÏ†ÅÏúºÎ°ú Î∞îÎ°ú ÏÇ¨Ïö©Ïù¥ Î∂àÍ∞ÄÎä•Ìïú ÌÅ¥ÎûòÏä§Î•º ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎèÑÎ°ù ÌïòÎäî Ìå®ÌÑ¥Ïù¥Îã§.\r\nÏù¥ Ìå®ÌÑ¥ÏùÄ Í∏∞Ï°¥Ïùò ÌÅ¥ÎûòÏä§Î•º ÏàòÏ†ïÌïòÏßÄ ÏïäÍ≥†, ÏÉàÎ°úÏö¥ ÌÅ¥ÎûòÏä§Î•º ÏÉùÏÑ±ÌïòÏó¨ Í∏∞Ï°¥Ïùò ÌÅ¥ÎûòÏä§Î•º ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎèÑÎ°ù ÌïúÎã§.",
    "content": "\r\n## Íµ¨ÏÑ±ÏöîÏÜå\r\n\r\n- Target: Ïñ¥ÎåëÌÑ∞ Ìå®ÌÑ¥ÏùÑ ÏÇ¨Ïö©ÌïòÍ∏∞ ÏúÑÌïú Ïù∏ÌÑ∞ÌéòÏù¥Ïä§Î•º Ï†ïÏùòÌïúÎã§.\r\n- Adapter: Target Ïù∏ÌÑ∞ÌéòÏù¥Ïä§Î•º Íµ¨ÌòÑÌïòÏó¨ Í∏∞Ï°¥Ïùò ÌÅ¥ÎûòÏä§Î•º ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎèÑÎ°ù ÌïúÎã§.\r\n- Adaptee: Ïñ¥ÎåëÌÑ∞ Ìå®ÌÑ¥ÏùÑ ÏÇ¨Ïö©ÌïòÍ∏∞ ÏúÑÌïú Í∏∞Ï°¥Ïùò ÌÅ¥ÎûòÏä§Ïù¥Îã§.\r\n- Client: Adapter Ìå®ÌÑ¥ÏùÑ ÏÇ¨Ïö©ÌïòÎäî ÌÅ¥ÎûòÏä§Ïù¥Îã§.\r\n\r\n## ÏòàÏ†ú\r\n\r\nÎ®ºÏ†Ä Adapter Ìå®ÌÑ¥ÏùÑ ÏÇ¨Ïö©ÌïòÍ∏∞ ÏúÑÌï¥ ÏÑ†Ïñ∏Ìïú ÌïµÏã¨ Íµ¨ÏÑ±ÏöîÏÜåÎäî ÏïÑÎûòÏôÄ Í∞ôÏùÄ ÌÅ¥ÎûòÏä§Îì§Î°ú Íµ¨ÏÑ±ÎêúÎã§.\r\n\r\n### ÏÉÅÌô©\r\n\r\nÍ∏∞Ï°¥Ïóê ÏÇ¨Ïö©ÌïòÎçò Í≤∞Ï†ú ÏãúÏä§ÌÖúÏù¥ ÏûàÎã§Í≥† Í∞ÄÏ†ïÌïòÏûê. Ïù¥ Í≤∞Ï†ú ÏãúÏä§ÌÖúÏùÄ `Payment` Ïù∏ÌÑ∞ÌéòÏù¥Ïä§Î•º Íµ¨ÌòÑÌïòÍ≥† ÏûàÎã§.\r\nÌïòÏßÄÎßå, ÏÉàÎ°úÏö¥ Í≤∞Ï†úÏàòÎã®ÏúºÎ°ú PayPalÏùÑ ÏÇ¨Ïö©ÌïòÍ≥†Ïûê ÌïúÎã§. PayPalÏùÄ `PayPalAPI` ÌÅ¥ÎûòÏä§Î•º ÏÇ¨Ïö©ÌïòÏó¨ Í≤∞Ï†úÎ•º Ï≤òÎ¶¨ÌïúÎã§.\r\nÏù¥Î•º ÏúÑÌï¥ Ï∂îÍ∞ÄÏ†ÅÏù∏ ÏΩîÎìúÏùò ÏûëÏÑ±Ïù¥ ÌïÑÏöîÌïú ÏÉÅÌô©Ïù¥Îã§.\r\n\r\n\r\n### Íµ¨ÏÑ±ÏöîÏÜå Ï†ïÏùò \r\n\r\n::code-group\r\n\r\n```Payment.java\r\npublic interface Payment {\r\n\r\n    void processPayment(double amount);\r\n\r\n    PaymentStatus checkStatus(String paymentId);\r\n}\r\n\r\n```\r\n```PayPalAPI.java\r\npublic class PayPalAPI {\r\n\r\n    public void makePayment(PayPalPaymentRequest request) {\r\n        System.out.println(\"Making PayPal payment of \" + request.getAmount());\r\n    }\r\n\r\n    public PayPalPaymentStatus getPaymentStatus(PaypalTransactionId txId) {\r\n        return PayPalPaymentStatus.SUCCESS;\r\n    }\r\n}\r\n```\r\n```PayPalAdapter.java\r\npublic class PaypalAdapter implements Payment {\r\n\r\n    private final PayPalAPI payPalAPI;\r\n\r\n    public PaypalAdapter(PayPalAPI payPalAPI) {\r\n        this.payPalAPI = payPalAPI;\r\n    }\r\n\r\n    @Override\r\n    public void processPayment(double amount) {\r\n        PayPalPaymentRequest request = new PayPalPaymentRequest(amount);\r\n        payPalAPI.makePayment(request);\r\n    }\r\n\r\n    @Override\r\n    public PaymentStatus checkStatus(String paymentId) {\r\n        PaypalTransactionId txId = new PaypalTransactionId(paymentId);\r\n        PayPalPaymentStatus paymentStatus = payPalAPI.getPaymentStatus(txId);\r\n\r\n        return convertPayPalStatus(paymentStatus);\r\n    }\r\n    ...\r\n}\r\n```\r\n```PaymentProcessor.java\r\npublic class PaymentProcessor {\r\n\r\n    private final Payment paymentSystem;\r\n\r\n    public PaymentProcessor(Payment paymentSystem) {\r\n        this.paymentSystem = paymentSystem;\r\n    }\r\n\r\n    public void process(Order order) {\r\n        paymentSystem.processPayment(order.getTotal());\r\n        //Í≤∞Ï†úÏÉÅÌÉú ÌôïÏù∏\r\n        PaymentStatus paymentStatus = paymentSystem.checkStatus(\"AE2D123-12\");\r\n        System.out.println(\"Payment status: \" + paymentStatus);\r\n\r\n    }\r\n}\r\n```\r\n\r\n::\r\n\r\nÏúÑÏùò ÏΩîÎìúÎ°ú Ïñ¥ÎåëÌÑ∞ Ìå®ÌÑ¥Ïùò ÌïµÏã¨ Íµ¨ÏÑ±ÏöîÏÜåÎ•º ÏÑ§Î™ÖÌïòÎ©¥ Îã§ÏùåÍ≥º Í∞ôÎã§.\r\n\r\n* Target: Payment.java\r\n* Adapter: PaypalAdapter.java\r\n* Adaptee: PayPalAPI.java\r\n* Client: PaymentProcessor.java\r\n\r\nÍ∑∏Î¶¨Í≥† ÏòàÏãúÎ•º ÏúÑÌï¥ Ï∂îÍ∞ÄÏ†ÅÏù∏ Îç∞Ïù¥ÌÑ∞Í∞Ä ÏïÑÎûòÏôÄ Í∞ôÏù¥ ÏûàÎã§Í≥† Í∞ÄÏ†ï ÌïúÎã§.\r\n\r\n::code-group\r\n```PayPalPaymentRequest.java\r\n//ÌéòÏù¥Ìåî Í≤∞Ï†ú ÏöîÏ≤≠Ï†ïÎ≥¥\r\npublic class PayPalPaymentRequest {\r\n\r\n    private final double amount;\r\n\r\n    public PayPalPaymentRequest(double amount) {\r\n        this.amount = amount;\r\n    }\r\n\r\n    public double getAmount() {\r\n        return amount;\r\n    }\r\n}\r\n```\r\n\r\n```PaypalTransactionId.java\r\n//ÌéòÏù¥Ìåî Í≤∞Ï†ú ID\r\npublic class PaypalTransactionId {\r\n\r\n    private final String txId;\r\n\r\n    public PaypalTransactionId(String txId) {\r\n        this.txId = txId;\r\n    }\r\n\r\n    public String getTxId() {\r\n        return txId;\r\n    }\r\n}\r\n```\r\n\r\n```Order.java\r\n//Ï£ºÎ¨∏ Ï†ïÎ≥¥\r\npublic class Order {\r\n\r\n    private final double total;\r\n\r\n    public Order(double total) {\r\n        this.total = total;\r\n    }\r\n\r\n    public double getTotal() {\r\n        return total;\r\n    }\r\n}\r\n```\r\n::\r\n\r\nÏúÑ Ï†ïÎ≥¥Î•º Ï°∞Ìï©ÌïòÎ©¥ Í∞Å ÌÅ¥ÎûòÏä§Í∞Ñ Ïó≠Ìï† Î∞è Í¥ÄÍ≥ÑÎäî Îã§ÏùåÍ≥º Í∞ôÎã§.\r\n\r\n```mermaid\r\n---\r\ntitle: ÏÉàÎ°úÏö¥ ÌéòÏù¥Ìåî Í≤∞Ï†úÏàòÎã®Ïóê ÎåÄÌï¥ ÎåÄÏùë Í∞ÄÎä•Ìïú Ïñ¥ÎåëÌÑ∞ Ìå®ÌÑ¥\r\nconfig:\r\n    class:\r\n        hideEmptyMembersBox: true\r\n---\r\nclassDiagram\r\n    class Payment {\r\n        +processPayment(double amount): void\r\n        +checkStatus(String paymentId): PaymentStatus\r\n    }\r\n    class LegacyPayment {\r\n        +processPayment(double amount): void\r\n        +checkStatus(String paymentId): PaymentStatus\r\n    }\r\n    class PayPalAPI {\r\n        +makePayment(PayPalPaymentRequest request): void\r\n        +getPaymentStatus(PaypalTransactionId txId): PayPalPaymentStatus\r\n    }\r\n    class PaypalAdapter {\r\n        -payPalAPI: PayPalAPI\r\n        +processPayment(double amount): void\r\n        +checkStatus(String paymentId): PaymentStatus\r\n    }\r\n    class PaymentProcessor {\r\n        +process(Order order): void\r\n    }\r\n    class PayPalPaymentRequest {\r\n        -amount: double\r\n        +getAmount(): double\r\n    }\r\n    class PaypalTransactionId {\r\n        -value: String\r\n        +getTxId(): String\r\n    }\r\n    class PayPalPaymentStatus {\r\n        SUCCESS\r\n        PENDING\r\n        FAILED\r\n        REFUND_SUCCESS\r\n        CANCELLED\r\n    }\r\n    class PaymentStatus {\r\n        PENDING\r\n        COMPLETED\r\n        FAILED\r\n        REFUNDED\r\n        CANCELLED\r\n    }\r\n    class Order {\r\n        +getTotal(): double\r\n    }\r\n    Payment <|-- PaypalAdapter\r\n    Payment <|-- LegacyPayment\r\n    PaypalAdapter --> PayPalAPI\r\n    PaymentProcessor --> Payment\r\n    PaymentProcessor --> Order\r\n    PayPalAPI --> PayPalPaymentRequest\r\n    PayPalAPI --> PaypalTransactionId\r\n```\r\n\r\nAdapter Ìå®ÌÑ¥Ïùò ÏÇ¨Ïö©ÏúºÎ°ú ÏÉàÎ°úÏö¥ Í≤∞Ï†úÏàòÎã®Ïù¥ Ï∂îÍ∞ÄÎêòÏñ¥ÎèÑ Í∏∞Ï°¥Ïùò Í≤∞Ï†úÏ≤òÎ¶¨ Î°úÏßÅÏùÑ Î≥ÄÍ≤ΩÌïòÏßÄ ÏïäÍ≥† ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎã§.\r\n* PayPalAdapterÎäî Payment Ïù∏ÌÑ∞ÌéòÏù¥Ïä§Î•º Íµ¨ÌòÑÌïòÏó¨ ÎÇ¥Î∂ÄÏ†ÅÏúºÎ°ú PayPalAPIÎ•º ÏÇ¨Ïö©ÌïòÎ©∞, Í∏∞Ï°¥ Í≤∞Ï†úÏóê ÎåÄÌïú ÌñâÎèôÏóêÎäî Î≥ÄÌôîÍ∞Ä ÏóÜÎã§.\r\n* Payment Ïó≠Ìï†ÏùÑ Í∑∏ÎåÄÎ°ú ÏàòÌñâÌïòÎ©∞ ÎÇ¥Î∂ÄÏ†ÅÏúºÎ°ú Ïã§Ï†ú Ï≤òÎ¶¨Í≥ºÏ†ïÎßå Îã§Î•º ÎøêÏù¥Îã§.\r\n\r\n### ÏÇ¨Ïö©\r\n\r\n```java\r\nOrder order = new Order(100.0);\r\n\r\nPaymentProcessor processor = LocalDate.now().isBefore(LocalDate.of(2021, 4, 13))\r\n        ? new PaymentProcessor(new LegacyPayment())\r\n        : new PaymentProcessor(new PaypalAdapter(new PayPalAPI()));\r\n\r\nprocessor.process(order);\r\n```\r\n\r\n> ÏòàÎ•ºÎì§Ïñ¥ `2021-04-13` Î∂ÄÌÑ∞ PayPal Í≤∞Ï†úÎ°úÎßå ÏÑúÎπÑÏä§Î•º Ï†úÍ≥µÌïúÎã§Í≥† Í∞ÄÏ†ïÌïòÎ©¥, ÏúÑÏôÄ Í∞ôÏù¥ ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎã§.\r\n:{ \"type\": \"tip\", \"icon\": \"info\" }\r\n"
  },
  {
    "path": "/docs/algorithm/base64",
    "header": {
      "layout": "wiki",
      "title": "Base64 Ïù∏ÏΩîÎî©",
      "date": 1572945900000,
      "tags": [
        "Algorithm",
        "Encoding",
        "Base64"
      ],
      "summary": "Base64",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÏïåÍ≥†Î¶¨Ï¶ò"
      ],
      "images": [
        {
          "src": "/post/algorithm/base64/index-table.png",
          "alt": "Base64 ÌÖåÏù¥Î∏î"
        },
        {
          "src": "/post/algorithm/base64/encoding.png",
          "alt": "Base64 Ïù∏ÏΩîÎî©"
        }
      ],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "Base64ÎûÄ?::what-is-base64",
            "title": "Base64ÎûÄ?",
            "fragment": "what-is-base64",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Base64 Î≥ÄÌôò Î∞©Î≤ï::how-to-convert",
            "title": "Base64 Î≥ÄÌôò Î∞©Î≤ï",
            "fragment": "how-to-convert",
            "children": []
          },
          {
            "rank": 2,
            "origin": "ÏÇ¨Ïö©ÎêòÎäî Ïù¥Ïú†::why-use-base64",
            "title": "ÏÇ¨Ïö©ÎêòÎäî Ïù¥Ïú†",
            "fragment": "why-use-base64",
            "children": []
          }
        ]
      }
    },
    "description": "",
    "content": "\r\n## Base64ÎûÄ?::what-is-base64\r\n\r\n**Base64**Îäî Ïù¥ÏßÑ Îç∞Ïù¥ÌÑ∞Î•º 6ÎπÑÌä∏Ïî© ÎÅäÏñ¥ÏÑú Î¨∏ÏûêÎ°ú Î≥ÄÌôòÌïòÎäî Ïù∏ÏΩîÎî© Î∞©ÏãùÏù¥Îã§.\r\n60ÎÖÑÎåÄ ÌõÑÎ∞òÏóêÏÑú 70ÎÖÑÎåÄ Ï¥àÎ∞ò, ÏµúÏ¥àÏùò Ïù¥Î©îÏùº ÏãúÏä§ÌÖúÏùÄ 7bit ASCII Î¨∏ÏûêÎßå Ï†ÑÏÜ°Ìï† Ïàò ÏûàÏóàÎã§. Ïù¥Îäî [SMTP]()(**S**imple **M**ail **T**ransfer **P**rotocol)Í∞Ä 7bit ASCII Í∏∞Î∞òÏúºÎ°ú ÏÑ§Í≥ÑÎêòÏóàÍ∏∞ ÎïåÎ¨∏Ïù¥Îã§.\r\n\r\nÌïòÏßÄÎßå Ïã§Ï†ú Îç∞Ïù¥ÌÑ∞Îäî ÎåÄÎ∂ÄÎ∂Ñ 8bit Î∞îÏù¥ÎÑàÎ¶¨ ÌòïÏãùÏù¥ÏòÄÍ≥†, Ïó¨Í∏∞Ïóê Ïã§Ìñâ ÌååÏùº, Ïù¥ÎØ∏ÏßÄ, ÎπÑÎîîÏò§ Îì±Ïù¥ Ìè¨Ìï® ÎêúÎã§. Ïù¥ 8bit Îç∞Ïù¥ÌÑ∞Î•º 7bit Ï±ÑÎÑêÎ°ú Ï†ÑÏÜ°ÌïòÍ∏∞ ÏúÑÌïú Ìï¥Í≤∞Ï±ÖÏù¥ ÌïÑÏöîÌñàÍ≥†, \r\nÏù¥ Î¨∏Ï†úÎ•º Ìï¥Í≤∞ÌïòÍ∏∞ÏúÑÌï¥ 1987ÎÖÑ PSRG(**P**rivacy and **S**ecurity **R**esearch **G**roup)ÏóêÏÑú Base64 Ïù∏ÏΩîÎî© Î∞©ÏãùÏùÑ Ï†úÏïàÌñàÎã§.\r\n\r\nBase64Îäî 3Î∞îÏù¥Ìä∏(24bit)Ïùò Î∞îÏù¥ÎÑàÎ¶¨ Îç∞Ïù¥ÌÑ∞Î•º 4Í∞úÏùò 6bit Ïú†ÎãõÏúºÎ°ú Î≥ÄÌôòÌïòÎ©∞, Îã§ÏùåÏùò ÌäπÏßïÏùÑ Í∞ôÎäîÎã§:\r\n* 6ÎπÑÌä∏Îäî 0-63ÍπåÏßÄÏùò Í∞íÏùÑ ÌëúÌòÑ Ìï† Ïàò ÏûàÏùå\r\n* Ïù¥ 64Í∞úÏùò Í∞íÏùÑ ASCII Î¨∏ÏûêÎ°ú Îß§Ìïë(A-Z, a-z, 0-9, +, /)\r\n* Ìå®Îî©Ïù¥ ÌïÑÏöîÌïú Í≤ΩÏö∞ `=` Î¨∏ÏûêÎ•º ÏÇ¨Ïö©\r\n\r\n## Base64 Î≥ÄÌôò Î∞©Î≤ï::how-to-convert\r\n\r\n![Base64 ÌÖåÏù¥Î∏î](/post/algorithm/base64/index-table.png)\r\n:{ \"align\": \"center\", \"max-width\": \"300px\", \"description\": \"Base64 Ïù∏Îç±Ïä§ ÌÖåÏù¥Î∏î\" }\r\n\r\nBase64Îäî 64ÏßÑÎ≤ïÏùò ÏùòÎØ∏Î•º Í∞ñÍ≥† ÏûàÏúºÎ©∞ ÏúÑÏùò 64Í∞úÏùò ÌÖåÏù¥Î∏î Îç∞Ïù¥ÌÑ∞Î°ú Îß§ÌïëÌïúÎã§. ÏõêÎ≥∏ Îç∞Ïù¥ÌÑ∞Î•º 6ÎπÑÌä∏Ïî© ÎÅäÏñ¥ÏÑú Ìï¥Îãπ ÌÖåÏù¥Î∏îÏùò Ïù∏Îç±Ïä§Î°ú Î≥ÄÌôòÌïòÎ©∞, Î∂ÄÏ°±Ìïú Í≥µÍ∞ÑÏùÄ Ìå®Îî© Î¨∏ÏûêÏù∏ `=`Î°ú Ï±ÑÏö¥Îã§.\r\n\r\n![Base64 Ïù∏ÏΩîÎî©](/post/algorithm/base64/encoding.png)\r\n:{ \"align\": \"center\", \"description\": \"Base64 Ïù∏ÏΩîÎî©\" }\r\n\r\nÏòàÎ•º Îì§Ïñ¥ `JPA`, `JP`, `J` Î¨∏ÏûêÏó¥Îì§ÏùÑ Í∞ÅÍ∞Å Base64Î°ú Ïù∏ÏΩîÎî©ÌïòÎ©¥ ÏúÑÏôÄ Í∞ôÎã§. `JPA`Îäî 3Î∞îÏù¥Ìä∏ Ïù¥ÎØÄÎ°ú 4Í∞úÏùò 6ÎπÑÌä∏Î°ú Îî±ÎßûÍ≤å Î≥ÄÌôòÎêúÎã§.\r\n\r\nÎ∞òÎåÄÎ°ú `JP`ÏôÄ `J`Îäî 3Î∞îÏù¥Ìä∏Í∞Ä ÏïÑÎãàÎØÄÎ°ú Ìå®Îî© Î¨∏ÏûêÏù∏ `=`Î°ú Ï±ÑÏõåÏßÑÎã§. Ïù¥Îïå ÎπÑÏñ¥ÏûàÎäî ÎπÑÌä∏Ïóê ÎåÄÌï¥ÏÑú `A` ÎòêÎäî `=`Î°ú Î≥ÄÌôò Îê†ÏßÄÎäî Î∞îÏù¥Ìä∏ Î≤îÏúÑ ÎÇ¥Ïóê ÏûàÎäîÏßÄÏóê Îî∞Îùº Îã§Î•¥Îã§.\r\n`JP`Îäî 6ÎπÑÌä∏Î°ú Ï™ºÍ∞úÏóàÏùÑÎïå 3Î≤àÏß∏ Í∑∏Î£πÏù¥ 0ÏúºÎ°ú Ï±ÑÏõåÏ†∏ÏûàÏßÄÎßå, ÎëêÎ≤àÏß∏ Î∞îÏù¥Ìä∏ Î≤îÏúÑÎÇ¥Ïóê ÏûàÏúºÎØÄÎ°ú `A`Î°ú Î≥ÄÌôòÎêúÎã§.\r\n\r\nÌïòÏßÄÎßå `JP`Ïùò 4Î≤àÏß∏ Í∑∏Î£π, `J`Ïùò 3Î≤àÏß∏ 4Î≤àÏß∏ Í∑∏Î£πÏùÄ Î™®Îëê Î∞îÏù¥Ìä∏ Î≤îÏúÑÏóê ÏóÜÏúºÎØÄÎ°ú Ìå®Îî© Î¨∏ÏûêÏù∏ `=`Î°ú Ï±ÑÏõåÏßÑÎã§.\r\n\r\n> Ìå®Îî© Î¨∏Ïûê =Îäî Base64 Ïù∏ÏΩîÎî©ÏãúÏóêÎßå ÏÇ¨Ïö©ÎêòÎ©∞, Base64 ÎîîÏΩîÎî©ÏãúÏóêÎäî Î¨¥ÏãúÎêúÎã§.\r\n:{ \"type\": \"tip\", \"icon\": \"lightbulb\" }\r\n\r\n## ÏÇ¨Ïö©ÎêòÎäî Ïù¥Ïú†::why-use-base64\r\n\r\nBase64Îäî Ïù¥ÏßÑ Îç∞Ïù¥ÌÑ∞Î•º ÌÖçÏä§Ìä∏ Îç∞Ïù¥ÌÑ∞Î°ú Î≥ÄÌïú ÎêòÏñ¥ Ï†ÑÏÜ°ÌïòÍ∏∞ ÎïåÎ¨∏Ïóê, ÏãúÏä§ÌÖúÍ∞Ñ Îç∞Ïù¥ÌÑ∞ ÏÜêÏã§ÏùÑ Î∞©ÏßÄÌïòÍ±∞ÎÇò ÌäπÏàò Î¨∏ÏûêÎÇò Ï†úÏñ¥Î¨∏Ïûê ÏóÜÏù¥ Î¨∏ÏûêÎßåÏúºÎ°ú Ï†ÑÏÜ°Ïù¥ Í∞ÄÎä•ÌïòÎã§.\r\nÎòêÌïú ASCII Î¨∏ÏûêÎßå ÏÇ¨Ïö©ÌïòÍ∏∞ ÎïåÎ¨∏Ïóê Ïù∏ÏΩîÎî© Î¨∏Ï†úÏóêÏÑú ÏûêÏú†Î°úÏõå Î™®Îì† ÏãúÏä§ÌÖúÏóêÏÑú ÏïàÏ†ÑÌïòÍ≤å Ï≤òÎ¶¨Í∞Ä Í∞ÄÎä•ÌïòÎã§.\r\n\r\nÎç∞Ïù¥ÌÑ∞Í∞Ä Ï°∞Í∏à Ïª§ÏßÄÎäî Îã®Ï†êÏù¥ ÏûàÏßÄÎßå, [RFC4648](https://datatracker.ietf.org/doc/html/rfc4648)Ïóê ÌëúÏ§ÄÌôî ÎêòÏñ¥ÏûàÍ≥† Íµ¨ÌòÑÏù¥ Í∞ÑÎã®ÌïòÍ∏∞Ïóê ÎßéÏùÄ ÌîÑÎ°úÌÜ†ÏΩúÏóêÏÑú ÏÇ¨Ïö©ÎêòÍ≥† ÏûàÎã§."
  },
  {
    "path": "/docs/algorithm/insertion-sort",
    "header": {
      "layout": "post",
      "title": "Insertion Sort (ÏÇΩÏûÖ Ï†ïÎ†¨)",
      "tags": [
        "Java",
        "Algorithm",
        "Sort",
        "Insertion Sort"
      ],
      "date": 1572945900000,
      "thumbnail": "/post/algorithm/insertion-sort/intro.png",
      "current-company": "Computer Academy",
      "current-position": "Student",
      "summary": "ÏÇΩÏûÖ Ï†ïÎ†¨",
      "excerpt-separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÏïåÍ≥†Î¶¨Ï¶ò"
      ],
      "images": [],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "ÏÜåÍ∞ú::intro",
            "title": "ÏÜåÍ∞ú",
            "fragment": "intro",
            "children": []
          },
          {
            "rank": 2,
            "origin": "ÏÑ§Î™Ö::how-to-make-insertion-sort",
            "title": "ÏÑ§Î™Ö",
            "fragment": "how-to-make-insertion-sort",
            "children": []
          },
          {
            "rank": 2,
            "origin": "ÏòàÏ†úÏΩîÎìú::example-code",
            "title": "ÏòàÏ†úÏΩîÎìú",
            "fragment": "example-code",
            "children": []
          }
        ]
      }
    },
    "description": "Ï†ïÎ†¨ Î∞©ÏãùÏ§ë ÌïòÎÇòÏù∏, ÏÇΩÏûÖ Ï†ïÎ†¨Ïóê ÎåÄÌï¥ ÏïåÏïÑÎ≥¥Ïûê.",
    "content": "\r\n\r\n## ÏÜåÍ∞ú::intro\r\n\r\nüå∏ ÏÇΩÏûÖÏ†ïÎ†¨ÏùÄ Î∞∞Ïó¥ÏùÑ ÏàúÌöåÌïòÎ©∞, ÏÇΩÏûÖÌï† ÏúÑÏπòÎ•º Ï∞æÍ≥† ÏöîÏÜåÎì§ÏùÑ **ÌïúÎã®Í≥ÑÏî© Î∞ÄÏñ¥** Ìï¥Îãπ ÏúÑÏπòÏóê ÏÇΩÏûÖÌïòÎ©∞ Ï†ïÎ†¨ÌïòÎäî ÏïåÍ≥†Î¶¨Ï¶ò Ïù¥Îã§.\r\nÏÇΩÏûÖÏ†ïÎ†¨ ÎòêÌïú ÏÑ†ÌÉùÏ†ïÎ†¨Í≥º ÎßàÏ∞¨Í∞ÄÏßÄÎ°ú Ï†ïÎ†¨Îêú Î∂ÄÎ∂ÑÍ≥º Ï†ïÎ†¨ÎêòÏßÄ ÏïäÏùÄ Î∂ÄÎ∂ÑÏúºÎ°ú ÎÇòÎâúÎã§.\r\n\r\n> **ÌïúÎã®Í≥ÑÏî© Î∞ÄÏñ¥** ÎùºÎäî ÎßêÏùÄ `[ 1 ][ 3 ][ 2 ]` ÏóêÏÑú 2ÎùºÎäî ÏöîÏÜåÎ•º ÏûÑÏãúÎ°ú ÎπºÍ≥† 1 Í≥º 3ÏÇ¨Ïù¥Ïóê Îì§Ïñ¥Í∞àÍ≥µÍ∞ÑÏùÑ ÎßåÎì§Í∏∞ ÏúÑÌï¥ Î∫Ä 2Ïùò ÏûêÎ¶¨Î°ú 3ÏùÑ Ìïú Îã®Í≥ÑÎ∞ÄÏñ¥,\r\n> `[ 1 ][    ][ 3 ]` Ï≤òÎüº Îπà Í≥µÍ∞ÑÏùÑ ÎßåÎì† Îã§Îäî ÏùòÎØ∏Ïù¥Îã§.\r\n:{ \"type\": \"tip\", \"icon\": \"lightbulb\"}\r\n\r\n---\r\n\r\n## ÏÑ§Î™Ö::how-to-make-insertion-sort\r\n\r\nÏàúÌöå Ïù∏Îç±Ïä§ i: 3 (0, 1, 2Îäî ÏöîÏÜåÍ∞Ä 1, 4, 7Ïù¥ÎØÄÎ°ú Ï†ïÎ†¨Ïù¥ÎêòÏñ¥ ÏûàÏúºÎØÄÎ°ú, ÎÑòÏñ¥Í∞ÑÎã§.)\r\n\r\n[1, 4, `7`, 3, 2, 5] ‚Üí [1, 4, **3**, `7`, 2, 5]\r\n\r\n> ÏÇΩÏûÖÏ†ïÎ†¨ÏùÄ ÏßÄÎÇòÏò® ÏöîÏÜåÎì§Í≥º ÎπÑÍµêÌïòÏó¨ Î∞ÄÎ©¥ÏÑú Ï†ïÎ†¨Ìï¥ ÎÇòÍ∞ÑÎã§. ÏúÑ Î∞∞Ïó¥ÏóêÏÑú 1, 4, 7 ÏöîÏÜåÎäî Ï†ïÎ†¨ ÎêòÏûàÍ∏∞ ÎïåÎ¨∏Ïóê,\r\n> `j`Îäî (j = i - 1, ÌòÑÏû¨ 3) 0Ïù¥ Îê†ÎïåÍπåÏßÄ Í≥ÑÏÜç ÏàúÌöåÌïòÎ©∞ Ïù¥Ï†ÑÍ∞íÍ≥º ÎπÑÍµêÌïòÏó¨ Ï†ïÎ†¨ ÎåÄÏÉÅÏù∏ÏßÄ ÏïÑÎãåÏßÄÎ•º ÌåêÎã®ÌïúÎã§.\r\n:{ \"type\": \"note\", \"icon\": \"info\"}\r\n\r\nÏàúÌöå Ïù∏Îç±Ïä§ i: 3\r\n\r\n> ÌïúÎ≤àÏùò Ï†ïÎ†¨Ïù¥ ÎÅùÎÇ¨ÏúºÎãà `j`Î•º Í∞êÏÜåÏãúÏºú ÎòêÎã§Ïãú Ïù¥Ï†Ñ ÏöîÏÜå (3Í≥º 4)Î•º ÎπÑÍµêÌïòÏó¨ Ï†ïÎ†¨ÎåÄÏÉÅÏù¥ ÎêòÏóàÎã§.\r\n> iÎäî ÌòÑÏû¨ 3Ïù¥ÏßÄÎßå `i` Ïù¥Ï†ÑÏùò Ïù∏Îç±Ïä§Î•º Í∞ÄÏßÑ ÏöîÏÜåÎì§ÏùÄ Ï†ïÎ†¨ÎêòÏßÄ ÏïäÏïòÍ∏∞ ÎïåÎ¨∏Ïóê `j`Î•º Í∞êÏÜåÏãúÏºúÍ∞ÄÎ©∞ ÎÅùÍπåÏßÄ Ï†ïÎ†¨ÌïúÎã§.\r\n:{ \"type\": \"note\", \"icon\": \"info\"}\r\n\r\n* ÏàúÌöå Ïù∏Îç±Ïä§ i: 3\r\n* ÎÇ¥Î∂Ä ÏàúÌöå Ïù∏Îç±Ïä§ j: 2 ‚Üí ÎÇ¥Î∂Ä ÏàúÌöå Ïù∏Îç±Ïä§ j: 1\r\n\r\n[1, `4`, 3, 7, 2, 5] ‚Üí [1, **3**, `4`, 7, 2, 5]\r\n\r\n> ÎÇ¥Î∂Ä ÏàúÌöå Ïù∏Îç±Ïä§Î•º Ï§ÑÏó¨Í∞ÄÎ©∞ Ï†ïÎ†¨ÏùÑ ÌïòÏòÄÍ≥† ÌòÑÏû¨ ÎÇ¥Î∂Ä ÏàúÌöå Ïù∏Îç±Ïä§(`j`)Ïù∏ 1ÏóêÎåÄÌïú ÏöîÏÜå(3)Í∞Ä ÎπÑÍµêÌï† Ïù∏Îç±Ïä§ 0ÏóêÎåÄÌïú ÏöîÏÜå(1)Í≥º Ï†ïÎ†¨ÎêòÏñ¥ÏûàÎã§Í≥† ÌåêÎã® ÌïòÍ∏∞Ïóê,\r\n> jÎäî ÎçîÏù¥ÏÉÅ Í∞êÏÜåÏãúÌÇ§ÏßÄ ÏïäÎäîÎã§. Îî∞ÎùºÏÑú `i`Î•º Îã§Ïãú Ï¶ùÍ∞ÄÏãúÌÇ§Î©∞ Ïù¥Í≥ºÏ†ïÏùÑ Î∞òÎ≥µÌïòÏó¨ Ï†ïÎ†¨ÌïúÎã§.\r\n> Ïù¥ÌõÑÏùò Í≥ºÏ†ïÏùÄ ÏïÑÎûòÏôÄ Í∞ôÎã§.\r\n:{ \"type\": \"note\", \"icon\": \"info\"}\r\n\r\n* ÏàúÌöå Ïù∏Îç±Ïä§ i: 4\r\n* ÎÇ¥Î∂Ä ÏàúÌöå Ïù∏Îç±Ïä§ j: 3 (i - 1)\r\n\r\n[1, 3, 4, `7`, **2**, 5] -> [1, 3, 4, **2**, `7`, 5]  \r\n\r\n* ÏàúÌöå Ïù∏Îç±Ïä§ i: 4\r\n* ÎÇ¥Î∂Ä ÏàúÌöå Ïù∏Îç±Ïä§ j: 2 (j--)\r\n\r\n[1, 3, `4`, **2**, 7, 5] -> [1, 3, **2**, `4`, 7, 5]\r\n\r\n* ÏàúÌöå Ïù∏Îç±Ïä§ i: 4\r\n* ÎÇ¥Î∂Ä ÏàúÌöå Ïù∏Îç±Ïä§ j: 1 (j--)\r\n\r\n[1, `3`, **2**, 4, 7, 5] -> [1, **2**, `3`, 4, 7, 5]  \r\n\r\n* ÏàúÌöå Ïù∏Îç±Ïä§ i: 5\r\n* ÎÇ¥Î∂Ä ÏàúÌöå Ïù∏Îç±Ïä§ j: 4 (j - 1)\r\n\r\n[1, 2, 3, 4, `7`, **5**] -> [1, 2, 3, 4, **5**, `7`]  \r\n\r\n* Ï†ïÎ†¨ Í≤∞Í≥º\r\n\r\n[1, 2, 3, 4, 5, 7]\r\n\r\n> Î™®Îì† Ï†ïÎ†¨ÏùÑ ÏàòÌñâÌñàÏúºÎØÄÎ°ú Ï†ïÎ†¨Ïù¥ ÏôÑÎ£åÎêòÏóàÎã§.\r\n:{ \"type\": \"tip\", \"icon\": \"check-circle\"}\r\n\r\n## ÏòàÏ†úÏΩîÎìú::example-code\r\n\r\n* ÏòàÏ†úÏΩîÎìúÎäî ÏÉùÍ∞Å Î≥¥Îã§ Îã®ÏàúÌïòÎã§. ÏïÑÎûòÏôÄ Í∞ôÏù¥ Î∞∞Ïó¥ÏùÑ ÏàúÌöåÌïòÎäî iÍ∞Ä ÏûàÍ≥†, `array[1..i]`ÏóêÏÑú Ï†ïÎ†¨ÏùÑ ÌïòÎäî Î∞©ÏãùÏù¥Îã§.\r\n\r\n```java::InsertionSort.java\r\npublic class InsertionSort {\r\n    \r\n    public static void sort(int [] array) {\r\n\r\n        for (int i = 1; i < array.length; i++) {\r\n            int current = array[i];\r\n            int j = i - 1;\r\n\r\n            while(array[j + 1] < array[j]) {\r\n                array[j + 1] = array[j];\r\n                array[j--] = current;\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n"
  },
  {
    "path": "/docs/software-design/class-diagram",
    "header": {
      "layout": "post",
      "title": "ÌÅ¥ÎûòÏä§ Îã§Ïù¥Ïñ¥Í∑∏Îû®",
      "tags": [
        "UML",
        "Class Diagram"
      ],
      "date": 1571376300000,
      "thumbnail": "/post/software-design/uml/class-diagram-intro.png",
      "profile-image": "/post/profile/profile0.jpg",
      "current-company": "Computer Academy",
      "current-position": "Student",
      "summary": "ÌÅ¥ÎûòÏä§ Îã§Ïù¥Ïñ¥Í∑∏Îû®",
      "excerpt-separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÏÜåÌîÑÌä∏Ïõ®Ïñ¥ ÏÑ§Í≥Ñ"
      ],
      "images": [
        {
          "src": "/post/software-design/uml/relationship-line.png",
          "alt": "ÌÅ¥ÎûòÏä§ Îã§Ïù¥Ïñ¥Í∑∏Îû®Ïùò Í¥ÄÍ≥Ñ ÏÑ†"
        }
      ],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "Í¥ÄÍ≥ÑÎ•º ÎÇòÌÉÄÎÇ¥Îäî ÌôîÏÇ¥Ìëú::relationship-line",
            "title": "Í¥ÄÍ≥ÑÎ•º ÎÇòÌÉÄÎÇ¥Îäî ÌôîÏÇ¥Ìëú",
            "fragment": "relationship-line",
            "children": [
              {
                "rank": 3,
                "origin": "Associations (Ïó∞Í¥Ä)::associations",
                "title": "Associations (Ïó∞Í¥Ä)",
                "fragment": "associations",
                "children": []
              },
              {
                "rank": 3,
                "origin": "Inheritances (ÏÉÅÏÜç)::inheritances",
                "title": "Inheritances (ÏÉÅÏÜç)",
                "fragment": "inheritances",
                "children": []
              },
              {
                "rank": 3,
                "origin": "Realizations (Ïã§Ï≤¥Ìôî)::realizations",
                "title": "Realizations (Ïã§Ï≤¥Ìôî)",
                "fragment": "realizations",
                "children": []
              },
              {
                "rank": 3,
                "origin": "Dependencies (ÏùòÏ°¥)::dependencies",
                "title": "Dependencies (ÏùòÏ°¥)",
                "fragment": "dependencies",
                "children": []
              },
              {
                "rank": 3,
                "origin": "Aggregations (ÏßëÌï©)::aggregations",
                "title": "Aggregations (ÏßëÌï©)",
                "fragment": "aggregations",
                "children": []
              },
              {
                "rank": 3,
                "origin": "Compositions (Ìï©ÏÑ±)::compositions",
                "title": "Compositions (Ìï©ÏÑ±)",
                "fragment": "compositions",
                "children": []
              }
            ]
          }
        ]
      }
    },
    "description": "ÏÜåÌîÑÌä∏ Ïõ®Ïñ¥ÏóêÏÑúÎäî Í∞Å Í∞ùÏ≤¥ÏôÄ Í∞ùÏ≤¥ Í∞ÑÏùò Í¥ÄÍ≥ÑÎ•º ÌëúÌòÑÌïòÍ∏∞ ÏúÑÌï¥ ÌÅ¥ÎûòÏä§ Îã§Ïù¥Ïñ¥Í∑∏Îû®ÏùÑ ÏÇ¨Ïö©ÌïúÎã§. \r\n\r\nÌÅ¥ÎûòÏä§ Îã§Ïù¥Ïñ¥Í∑∏Îû®ÏùÄ ÌÅ¥ÎûòÏä§Ïùò ÏÜçÏÑ±Í≥º Î©îÏÑúÎìúÎ•º ÌëúÌòÑÌïòÍ≥†, ÌÅ¥ÎûòÏä§ Í∞ÑÏùò Í¥ÄÍ≥ÑÎ•º ÌëúÌòÑÌïúÎã§. \r\nÌÅ¥ÎûòÏä§ Îã§Ïù¥Ïñ¥Í∑∏Îû®ÏùÄ Í∞ùÏ≤¥ ÏßÄÌñ• ÌîÑÎ°úÍ∑∏ÎûòÎ∞çÏóêÏÑú Í∞ÄÏû• ÎßéÏù¥ ÏÇ¨Ïö©ÎêòÎäî Îã§Ïù¥Ïñ¥Í∑∏Îû® Ï§ë ÌïòÎÇòÏù¥Îã§.\r\n\r\nÌÅ¥ÎûòÏä§ Îã§Ïù¥Ïñ¥Í∑∏Îû®Ïùò Íµ¨ÏÑ±ÏöîÏÜåÎ•º ÏïåÏïÑÎ≥¥Ïûê.",
    "content": "\r\n\r\n## Í¥ÄÍ≥ÑÎ•º ÎÇòÌÉÄÎÇ¥Îäî ÌôîÏÇ¥Ìëú::relationship-line\r\n\r\n![ÌÅ¥ÎûòÏä§ Îã§Ïù¥Ïñ¥Í∑∏Îû®Ïùò Í¥ÄÍ≥Ñ ÏÑ†](/post/software-design/uml/relationship-line.png)\r\n:{ \"align\": \"center\", \"max-width\": \"400px\", \"description\": \"ÌÅ¥ÎûòÏä§Í∞ÑÏùò Í¥ÄÍ≥ÑÎ•º ÎÇòÌÉÄÎÇ¥Îäî Relationship Line\" }\r\n\r\nÌÅ¥ÎûòÏä§ Îã§Ïù¥Ïñ¥Í∑∏Îû®ÏóêÏÑúÎäî ÌÅ¥ÎûòÏä§Í∞Ñ Í¥ÄÍ≥ÑÎ•º ÎÇòÌÉÄÎÇ¥Îäî ÌôîÏÇ¥ÌëúÎ•º ÏÇ¨Ïö©ÌïúÎã§.\r\nÍ∞Å Í¥ÄÍ≥ÑÎ•º ÎÇòÌÉÄÎÇ¥Îäî ÏùòÎØ∏Î•º ÏïåÏïÑÎ≥¥Ïûê.\r\n\r\n### Associations (Ïó∞Í¥Ä)::associations\r\n\r\n*Ìïú Î™®Îç∏ ÏöîÏÜåÏùò Ïù∏Ïä§ÌÑ¥Ïä§Îì§Ïù¥ Îã§Î•∏ Î™®Îç∏ ÏöîÏÜåÏùò Ïù∏Ïä§ÌÑ¥Ïä§Îì§Í≥º Ïó∞Í≤∞ÎêòÏóàÎã§Îäî Í≤ÉÏùÑ ÎÇòÌÉÄÎÇ∏Îã§.*\r\n\r\n**Îã®Î∞©Ìñ• Ïó∞Í¥Ä Í¥ÄÍ≥Ñ**\r\n\r\n```mermaid\r\nclassDiagram\r\n    direction LR\r\n    class Student {\r\n        -name: String\r\n    }\r\n    class Teacher {\r\n        -name: String\r\n        -children: List~Student~\r\n        +check(Student student): void\r\n    }\r\n    Teacher --> Student\r\n```\r\n\r\n\r\nÏù¥ Îã§Ïù¥Ïñ¥ Í∑∏Îû®ÏùÄ ÌïôÏÉùÍ≥º ÏÑ†ÏÉùÎãòÏùò Í¥ÄÍ≥ÑÎ•º ÎÇòÌÉÄÎÇ∏Îã§. ÏÑ†ÏÉùÎãòÏùÄ ÌïôÏÉùÎì§ÏùÑ Í¥ÄÎ¶¨ÌïòÍ∏∞ ÏúÑÌï¥ Ìï≠ÏÉÅ Ï∞∏Ï°∞ÌïúÎã§.\r\nÌïòÏßÄÎßå, ÌïôÏÉùÏùÄ ÏÑ†ÏÉùÎãòÏù¥ Í¥ÄÏã¨ ÏóÜÍ∏∞ ÎïåÎ¨∏Ïóê Ïã†Í≤ΩÏùÑ ÏïàÏì∞ÎØÄÎ°ú ÌïôÏÉùÏùÄ ÏÑ†ÏÉùÎãòÏùÑ Ï∞∏Ï°∞ÌïòÏßÄ ÏïäÎäîÎã§.\r\nÏù¥Îäî Îã®Î∞©Ìñ• Í¥ÄÍ≥ÑÏù¥Îã§.\r\n\r\n**ÏñëÎ∞©Ìñ• Ïó∞Í¥ÄÍ¥ÄÍ≥Ñ**\r\n\r\n```mermaid\r\nclassDiagram\r\n    direction LR\r\n    class Child {\r\n        -name: String\r\n        -parent: Parent\r\n    }\r\n    class Parent {\r\n        -name: String\r\n        -child: Child\r\n    }\r\n    Child <--> Parent\r\n```\r\n\r\nÌïòÏßÄÎßå Î∞òÎåÄÎ°ú ÏûêÏãùÍ≥º Î∂ÄÎ™®Ïùò Í¥ÄÍ≥ÑÎäî ÏñëÎ∞©Ìñ• Í¥ÄÍ≥ÑÏù¥Îã§. Î∂ÄÎ™®Îäî ÏûêÏãùÍ≥º, ÏûêÏãùÏùÄ Î∂ÄÎ™®ÏôÄ Í∞ÄÏ°±Ïù¥Í∏∞ ÎïåÎ¨∏Ïóê ÏÑúÎ°úÎ•º Ï∞∏Ï°∞ÌïúÎã§.\r\n\r\n> Ïù¥Ï≤òÎüº Îã®Î∞©Ìñ• ÎòêÎäî ÏñëÎ∞©Ìñ•ÏúºÎ°ú Ïñ¥Îñ§ Î™®Îç∏Ïùò Ïù∏Ïä§ÌÑ¥Ïä§Î•º Ï∞∏Ï°∞ÌïòÎäî Í¥ÄÍ≥ÑÎ•º `Ïó∞Í¥ÄÍ¥ÄÍ≥Ñ`ÎùºÍ≥† ÌïúÎã§.\r\n:{ \"type\": \"tip\", \"icon\": \"lightbulb\" }\r\n\r\n> Ïó∞Í¥Ä Í¥ÄÍ≥ÑÎäî Ï∞∏Ï°∞ÌïòÎ†§Îäî Í∞ùÏ≤¥Î•º ÎÇ¥Î∂ÄÏ†ÅÏúºÎ°ú Í∞ñÍ≥† ÏûàÏñ¥ÏïºÌïúÎã§.\r\n:{ \"type\": \"note\", \"icon\": \"info\" }\r\n\r\n\r\n### Inheritances (ÏÉÅÏÜç)::inheritances\r\n\r\n*Ìïú ÌÅ¥ÎûòÏä§Í∞Ä Îã§Î•∏ ÌÅ¥ÎûòÏä§Ïùò ÌäπÏÑ±ÏùÑ ÏÉÅÏÜçÎ∞õÏïòÎã§Îäî Í≤ÉÏùÑ ÎÇòÌÉÄÎÇ∏Îã§.*\r\n\r\nÏù¥Îäî Íµ¨ÌòÑÍ≥ºÎäî Îã§Î•¥Î©∞, ÏÉÅÏÜçÏùÄ ÌÅ¥ÎûòÏä§ Í∞ÑÏùò Í¥ÄÍ≥ÑÎ•º ÎÇòÌÉÄÎÇ∏Îã§.\r\n\r\n```mermaid\r\nclassDiagram\r\n    direction LR\r\n    class Animal {\r\n        <<abstract>>\r\n        -name: String\r\n        +eat(): void\r\n    }\r\n    class Dog {\r\n        -legs: int\r\n        +bark(): void\r\n    }\r\n    class BorderCollie {\r\n        -intelligence: int\r\n    }\r\n    Animal <|-- Dog\r\n    Dog <|-- BorderCollie\r\n```\r\n\r\nÏù¥ Îã§Ïù¥Ïñ¥Í∑∏Îû®ÏùÄ `Animal` ÌÅ¥ÎûòÏä§Í∞Ä `Dog` ÌÅ¥ÎûòÏä§Ïóê ÏÉÅÏÜçÎêòÍ≥†, `Dog` ÌÅ¥ÎûòÏä§Í∞Ä `BorderCollie` ÌÅ¥ÎûòÏä§Ïóê ÏÉÅÏÜçÎêòÎäî ÏÉÅÏÜç Í¥ÄÍ≥ÑÎ•º ÎÇòÌÉÄÎÇ∏Îã§.\r\n\r\n> ÏÉÅÏÜçÏùÄ `interface`Í∞Ä ÏïÑÎãå `Abstract Class` ÎòêÎäî ÏùºÎ∞ò `Class` ÏóêÏÑúÎßå ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎã§.\r\n:{ \"type\": \"note\", \"icon\": \"info\" }\r\n\r\n\r\n### Realizations (Ïã§Ï≤¥Ìôî)::realizations\r\n\r\n*Ìïú ÌÅ¥ÎûòÏä§Í∞Ä Ïù∏ÌÑ∞ÌéòÏù¥Ïä§Î•º Íµ¨ÌòÑÌñàÎã§Îäî Í≤ÉÏùÑ ÎÇòÌÉÄÎÇ∏Îã§.*\r\n\r\nÎã§Î•∏ÎßêÎ°ú `implementation` Ïù¥ÎùºÍ≥†ÎèÑ ÌïúÎã§. Ï¶â Íµ¨ÌòÑÌïòÏó¨ Ïã§Ï≤¥ÌôîÌïòÎäî Í≤ΩÏö∞Î•º ÏùòÎØ∏ÌïúÎã§.\r\n\r\n```mermaid\r\nclassDiagram\r\n    class Mammal {\r\n        <<interface>>\r\n        +breastfeed(): void\r\n    }\r\n    class Dog {\r\n        +breastfeed(): void\r\n    }\r\n    class Human {\r\n        +breastfeed(): void\r\n    }\r\n    Mammal <|.. Dog\r\n    Mammal <|.. Human\r\n```\r\n\r\nÌè¨Ïú†Î•òÎäî Ï†ñÏùÑ Î®πÏó¨ ÏÉàÎÅºÎ•º ÌÇ§Ïö∞Îäî ÎèôÎ¨ºÏùÑ ÏùºÏª∑Îäî ÎßêÏù¥Îã§. Ìè¨Ïú†Î•òÎäî Î∂ÑÎ•òÎ•º ÌïòÍ∏∞ ÏúÑÌï¥ ÎÇòÎàà Í∞úÎÖêÏù¥Í∏∞ ÎïåÎ¨∏Ïóê Ïã§Ï≤¥Í∞Ä ÏïÑÎãàÎã§.\r\nÏù¥Î•º Ïã§Ï≤¥Ìôî ÌïòÍ∏∞ÏúÑÌï¥ `Dog`ÏôÄ `Human` ÌÅ¥ÎûòÏä§Í∞Ä `Mammal` Ïù∏ÌÑ∞ÌéòÏù¥Ïä§Î•º Íµ¨ÌòÑÌïòÍ≥† ÏûàÎã§.\r\n\r\n> `Realization`/`Implementation` Í¥ÄÍ≥ÑÎäî `interface`Î•º Íµ¨ÌòÑÌïòÎäî ÌÅ¥ÎûòÏä§Ïóê ÏÇ¨Ïö©ÎêúÎã§.\r\n:{ \"type\": \"note\", \"icon\": \"info\" }\r\n\r\n\r\n### Dependencies (ÏùòÏ°¥)::dependencies\r\n\r\n*Ìïú ÌÅ¥ÎûòÏä§Í∞Ä Îã§Î•∏ ÌÅ¥ÎûòÏä§Ïóê ÏùòÏ°¥ÌïòÎäîÍ≤ÉÏùÑ ÏùòÎØ∏ÌïúÎã§.*\r\n\r\n```mermaid\r\nclassDiagram\r\n    direction LR\r\n    class A {\r\n        +use(B b): void\r\n    }\r\n    class B {\r\n        +doSomeThing(): void\r\n    }\r\n    A ..> B\r\n```\r\n\r\n> Ïñ¥Îñ§ ÌñâÏúÑÎ•º Ìï† Îïå Îã§Î•∏ ÌÅ¥ÎûòÏä§Î•º ÌïÑÏöîÎ°ú ÌïòÎäî Í≤ΩÏö∞ `ÏùòÏ°¥`Í¥ÄÍ≥ÑÏóê Ìï¥ÎãπÎêúÎã§.\r\n:{ \"type\": \"note\", \"icon\": \"info\" }\r\n\r\n### Aggregations (ÏßëÌï©)::aggregations\r\n\r\n*Ìïú ÌÅ¥ÎûòÏä§Í∞Ä Îã§Î•∏ ÌÅ¥ÎûòÏä§Î•º ÏÜåÏú†ÌïòÍ≥† ÏûàÎã§Îäî Í≤ÉÏùÑ ÎÇòÌÉÄÎÇ∏Îã§.*\r\n\r\n> `ÏßëÌï©` Í¥ÄÍ≥ÑÎäî `Ïó∞Í¥Ä` Í¥ÄÍ≥ÑÏôÄ Ïú†ÏÇ¨ÌïòÏßÄÎßå, ÏùòÎØ∏Î°†Ï†ÅÏúºÎ°ú Îã§Î•¥Îã§.\r\n:{ \"type\": \"important\", \"icon\": \"warning-octagon\" }\r\n\r\n\r\n```mermaid\r\nclassDiagram\r\n    direction LR\r\n    class Professor {\r\n        -name: String\r\n    }\r\n    class Department {\r\n        -professors: ~List~ Professor\r\n    }\r\n    Department o-- Professor\r\n```\r\n\r\nÎßåÏïΩ ÍµêÏàòÍ∞Ä ÌïôÍ≥ºÏóê ÏÜçÌï¥ÏûàÎã§Î©¥, Ïù¥Îü¨Ìïú Í¥ÄÍ≥ÑÎ•º `ÏßëÌï©` Í¥ÄÍ≥ÑÎùºÍ≥† ÌïúÎã§. **ÌïÑÎìúÎ°ú Í∞ñÍ≥† ÏûàÎã§Îäî Í∞úÎÖêÏù¥ ÎπÑÏä∑ÌïòÏßÄÎßå,** \r\nÏó∞Í¥Ä Í¥ÄÍ≥ÑÏóêÏÑúÎäî **Ï∞∏Ï°∞**Î•º ÏùòÎØ∏ÌïòÍ≥† ÏßëÌï© Í¥ÄÍ≥ÑÏóêÏÑúÎäî **ÏÜåÏú†**Î•º ÏùòÎØ∏ÌïúÎã§.\r\n\r\n\r\n### Compositions (Ìï©ÏÑ±)::compositions\r\n\r\n*Ìïú ÌÅ¥ÎûòÏä§Í∞Ä Îã§Î•∏ ÌÅ¥ÎûòÏä§Ïóê Ï¢ÖÏÜçÌïòÍ≥† ÏûàÎã§Îäî Í≤ÉÏùÑ ÎÇòÌÉÄÎÇ∏Îã§.*\r\n\r\n> `Ìï©ÏÑ±` Í¥ÄÍ≥ÑÎäî `ÏßëÌï©` Í¥ÄÍ≥ÑÏôÄ Ïú†ÏÇ¨ÌïòÏßÄÎßå, ÏùòÎØ∏Î°†Ï†ÅÏúºÎ°ú Îã§Î•¥Îã§. **Aggregation**ÏùÄ ÎèÖÎ¶ΩÏ†Å Ïù¥ÏßÄÎßå, **Composition**ÏùÄ Ï¢ÖÏÜçÏ†ÅÏù¥Îã§.\r\n:{ \"type\": \"important\", \"icon\": \"warning-octagon\" }\r\n\r\n```mermaid\r\nclassDiagram\r\n   Human *-- Heart\r\n   Human *-- Brain\r\n   Human *-- Organ\r\n\r\n   class Human {\r\n       -Heart heart\r\n       -Brain brain\r\n       -List~Organ~ organs\r\n       +Human()\r\n   }\r\n   class Heart {\r\n   }\r\n   class Brain {\r\n   }\r\n   class Organ {\r\n   }\r\n```\r\n\r\nÎßåÏïΩ ÏÇ¨ÎûåÏù¥ Ïã¨Ïû•, Îáå, Ïû•Í∏∞Î•º Í∞ÄÏßÄÍ≥† ÏûàÎã§Î©¥, Í∞ÅÍ∞ÅÏùò Íµ¨ÏÑ±ÏöîÏÜåÎäî ÏÇ¨ÎûåÏóê Ï¢ÖÏÜçÏ†ÅÏù¥Îã§. Ïù¥Îü¨Ìïú Ï¢ÖÏÜçÎì§Ïùò ÏßëÌï©ÏùÑ `Ìï©ÏÑ±` Í¥ÄÍ≥ÑÎùºÍ≥† ÌïúÎã§.\r\nÎòêÌïú ÏßëÌï© Í¥ÄÍ≥ÑÏóêÏÑ† Ï∞∏Ï°∞ÎêòÎäî ÌïÑÎì§ÏóêÍ≤å ÏùºÎ∂Ä ÏûëÏóÖÏùÑ ÏúÑÏûÑÌïúÎã§. \r\n\r\n> ÏßëÌï© Í¥ÄÍ≥Ñ/Ìï©ÏÑ±ÏùÄ ÎßéÏùÄ ÎîîÏûêÏù∏Ìå®ÌÑ¥Ïùò ÌïµÏã¨ ÏõêÏπôÏù¥Îã§.\r\n:{ \"type\": \"tip\", \"icon\": \"lightbulb\" }\r\n\r\n> **Í≥µÏú† Î∂àÍ∞ÄÎä•**: `Ìï©ÏÑ±` Í¥ÄÍ≥ÑÏóêÏÑúÎäî Ìïú Í∞ùÏ≤¥Ïùò Î∂ÄÎ∂ÑÏù¥ Îã§Î•∏Í∞ùÏ≤¥Ïóê ÏÜçÌï† Ïàò ÏóÜÍ≥†, Î∂ÄÎ∂Ñ Í∞ùÏ≤¥Í∞Ä Ïó¨Îü¨ Í∞ùÏ≤¥Ïóê ÎèôÏãúÏóê ÏÜçÌï† Ïàò ÏóÜÎã§. ÎòêÌïú Î∂ÄÎ∂Ñ Í∞ùÏ≤¥Ïùò ÎèÖÎ¶ΩÏ†ÅÏù∏ Ïû¨ÏÇ¨Ïö©Ïù¥ Î∂àÍ∞ÄÎä•ÌïòÎã§.\r\n:{ \"type\": \"caution\", \"icon\": \"x-circle\" }\r\n"
  },
  {
    "path": "/docs/data-structure/hash",
    "header": {
      "layout": "post",
      "title": "Ìï¥Ïãú (Hash)",
      "tags": [
        "Data Structure",
        "Hash"
      ],
      "date": 1570217400000,
      "profile-image": "/post/profile/profile0.jpg",
      "thumbnail": "/post/data-structure/hash/index.png",
      "current-company": "Computer Academy",
      "current-position": "Student",
      "summary": "Ìï¥Ïãú",
      "expose-images": true,
      "excerpt-separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÏûêÎ£åÍµ¨Ï°∞"
      ],
      "images": [
        {
          "src": "/post/data-structure/hash/hash-index.png",
          "alt": "Ìï¥Ïãú Ïù∏Îç±Ïä§"
        },
        {
          "src": "/post/data-structure/hash/hash-collision.png",
          "alt": "Ìï¥Ïãú Ï∂©Îèå"
        },
        {
          "src": "/post/data-structure/hash/hash-chaining.png",
          "alt": "Ï≤¥Ïù¥Îãù"
        },
        {
          "src": "/post/data-structure/hash/hash-linear-probing.png",
          "alt": "ÏÑ†Ìòï ÌÉêÏÇ¨"
        },
        {
          "src": "/post/data-structure/hash/hash-quadratic-probing.png",
          "alt": "Ï†úÍ≥± ÌÉêÏÇ¨"
        }
      ],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "Ìï¥ÏãúÎûÄ?::what-is-hash",
            "title": "Ìï¥ÏãúÎûÄ?",
            "fragment": "what-is-hash",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Ìï¥Ïãú Ï∂©Îèå::hash-collision",
            "title": "Ìï¥Ïãú Ï∂©Îèå",
            "fragment": "hash-collision",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Ìï¥Ïãú Ï∂©Îèå Ìï¥Í≤∞ Î∞©Î≤ï::how-to-solve-hash-collision",
            "title": "Ìï¥Ïãú Ï∂©Îèå Ìï¥Í≤∞ Î∞©Î≤ï",
            "fragment": "how-to-solve-hash-collision",
            "children": [
              {
                "rank": 3,
                "origin": "1. Ï≤¥Ïù¥Îãù::chaining",
                "title": "1. Ï≤¥Ïù¥Îãù",
                "fragment": "chaining",
                "children": []
              },
              {
                "rank": 3,
                "origin": "2. Í∞úÎ∞© Ï£ºÏÜåÎ≤ï::open-addressing",
                "title": "2. Í∞úÎ∞© Ï£ºÏÜåÎ≤ï",
                "fragment": "open-addressing",
                "children": []
              }
            ]
          }
        ]
      }
    },
    "description": "hashÎäî ÌîÑÎûëÏä§Ïñ¥ hacher [a Ée]: Ïç∞Îã§/Îã§ÏßÄÎã§ ÏóêÏÑú Ïú†ÎûòÌïú Îã®Ïñ¥Î°ú, ÏûòÍ≤å Îã§Ï†∏ÏÑú ÏöîÎ¶¨ÌïòÎäî ÏùåÏãùÏùÑ ÎßêÌïúÎã§.  \r\n\r\nÏª¥Ìì®ÌÑ∞ Í≥ºÌïôÏóêÏÑúÎäî ÏûòÍ≤å Îã§ÏßÑ Îç∞Ïù¥ÌÑ∞Î•º Ï†ÄÏû•ÌïúÎã§Îäî ÏùòÎØ∏Î°ú hashÎùºÎäî Ïö©Ïñ¥Î•º ÏÇ¨Ïö©ÌïúÎã§.",
    "content": "\r\n\r\n## Ìï¥ÏãúÎûÄ?::what-is-hash\r\n\r\n[hash](https://en.wikipedia.org/wiki/Hash_(food))Îäî ÌîÑÎûëÏä§Ïñ¥ hacher [a Ée]: Ïç∞Îã§/Îã§ÏßÄÎã§ ÏóêÏÑú Ïú†ÎûòÌïú Îã®Ïñ¥Î°ú, ÏûòÍ≤å Îã§Ï†∏ÏÑú ÏöîÎ¶¨ÌïòÎäî ÏùåÏãùÏùÑ ÎßêÌïúÎã§. \r\nÎåÄÌëúÏ†ÅÏù∏ ÏòàÎ°ú Í∞êÏûêÎ•º ÏûòÍ≤å Îã§Ï†∏ÏÑú ÌäÄÍπÄÏúºÎ°ú ÎßåÎìúÎäî Ìï¥Ïãú Î∏åÎùºÏö¥Ïù¥ ÏûàÎã§. Ïù¥Îü¨Ìïú Î¨∏Îß•ÏúºÎ°ú Ïª¥Ìì®ÌÑ∞ Í≥ºÌïôÏóêÏÑú ÏûòÍ≤å Îã§Ï†∏ Ï†ÄÏû•ÌïòÎäî ÏùòÎØ∏Î°ú hashÎùºÎäî Ïö©Ïñ¥Î•º ÏÇ¨Ïö©ÌïúÎã§.\r\n\r\n`hash`ÏóêÏÑúÎäî Îπ†Ïßà Ïàò ÏóÜÎäî `Hash Function`Ïù¥ ÏûàÎäîÎç∞, Ïù¥Îäî ÏûÑÏùòÏùò Í∏∏Ïù¥Ïùò Îç∞Ïù¥ÌÑ∞Î•º Í≥†Ï†ïÎêú Í∏∏Ïù¥Ïùò Îç∞Ïù¥ÌÑ∞Î°ú Îß§ÌïëÌïòÎäî Ìï®ÏàòÏù¥Îã§.  \r\nÏòàÎ•º Îì§Ïñ¥ JavaÏùò Í≤ΩÏö∞ ÏïÑÎûòÏôÄ Í∞ôÏùÄ Ìï¥ÏãúÌï®ÏàòÍ∞Ä Ï°¥Ïû¨ÌïúÎã§.\r\n\r\n```java::ÏûêÎ∞îÏùò Ìï¥ÏãúÌï®Ïàò\r\nstatic final int hash(Object key) {\r\n    int h;\r\n    return (key == null) ? 0 : (h = key.hashCode()) ^ (h >>> 16);\r\n}\r\n```\r\n\r\nJavaÏùò ÎÇ¥Ïö©ÏùÄ Í¥ÄÎ†®Ïù¥ ÏóÜÏßÄÎßå ÏÑ§Î™ÖÏùÑ ÏúÑÌï¥ hashCodeÎèÑ Í∞ôÏù¥ Î≥¥ÎäîÍ≤ÉÏù¥ Ï¢ãÎã§.  \r\nÎ®ºÏ†Ä `hashCode`Î•º ÏñªÎäî Î∞©Î≤ïÏùÄ ÏïÑÎûòÏôÄ Í∞ôÎã§. `UTF-16`Ïùò Í≤ΩÏö∞ `Latin-1`Ïùò ÏÉÅÏúÑ ÏßëÌï©Ïù¥ÏßÄÎßå, ÌïúÍ∏ÄÍ≥º Í∞ôÏùÄ Î¨∏Ïûê ÎïåÎ¨∏Ïóê ÌïÑÏöîÌïòÍ≥† 2byte Ï≤òÎ¶¨Î°ú `hashCode`Î•º ÎßåÎì†Îã§. \r\n\r\n::code-group\r\n```java::Latin-1\r\npublic static int hashCode(byte[] value) {\r\n    int h = 0;\r\n    for (byte v : value) {\r\n        h = 31 * h + (v & 0xff);\r\n    }\r\n    return h;\r\n}\r\n```\r\n```java::UTF-16\r\npublic static int hashCode(byte[] value) {\r\n    int h = 0;\r\n    int length = value.length >> 1;\r\n    for (int i = 0; i < length; i++) {\r\n        h = 31 * h + getChar(value, i);\r\n    }\r\n    return h;\r\n}\r\n```\r\n::\r\nÏïÑÎ¨¥Ìäº ÏùºÎ∞òÏ†ÅÏúºÎ°ú `üòÇ`Ïù¥ÎÇò `Ïï®Î¶¨Ïä§`ÏôÄ Í∞ôÏùÄ Í∞íÏúºÎ°ú Ìï¥Ïã±ÏùÑ ÌïòÏßÄÎäî ÏïäÏúºÎãà, ÎåÄÎ∂ÄÎ∂Ñ `Latin-1`ÏùÑ ÏÇ¨Ïö©ÌïúÎã§Îäî Í∞ÄÏ†ïÌïòÏóê ÏÑ§Î™ÖÌïúÎã§.  \r\nÏó¨Í∏∞ÏÑú \"Alice\"ÎùºÎäî Î¨∏ÏûêÏó¥Í≥º \"Bob\"Ïù¥ÎùºÎäî Î¨∏ÏûêÏó¥Ïù¥ ÏûÖÎ†•ÏúºÎ°ú Îì§Ïñ¥Ïò®Îã§Î©¥ Îã§ÏùåÏùò Í≥ºÏ†ïÏúºÎ°ú Ìï¥ÏãúÍ∞íÏùÑ ÏñªÏùÑ Ïàò ÏûàÎã§.\r\n\r\n::code-group\r\n```text::\"Alice\"Ïùò Ìï¥ÏãúÏΩîÎìú\r\n1. 'A' (Ï≤òÏùå)\r\nh = 31 * 0 + 65 = 65\r\n\r\n2. 'l' (ÎëêÎ≤àÏß∏)\r\nh = 31 * 65 + 108\r\nh = 2015 + 108 = 2123\r\n\r\n3. 'i' (ÏÑ∏Î≤àÏß∏)\r\nh = 31 * 2123 + 105\r\nh = 65813 + 105 = 65918\r\n\r\n4. 'c' (ÎÑ§Î≤àÏß∏)\r\nh = 31 * 65918 + 99\r\nh = 2043458 + 99 = 2043557\r\n\r\n5. 'e' (ÎßàÏßÄÎßâ)\r\nh = 31 * 2043557 + 101\r\nh = 63350267 + 101 = 63350368\r\n```\r\n```text::\"Bob\"Ïùò Ìï¥ÏãúÏΩîÎìú\r\n1. 'B' (Ï≤òÏùå)\r\nh = 31 * 0 + 66 = 66\r\n\r\n2. 'o' (ÎëêÎ≤àÏß∏)\r\nh = 31 * 66 + 111\r\nh = 2046 + 111 = 2157\r\n\r\n3. 'b' (ÎßàÏßÄÎßâ)\r\nh = 31 * 2157 + 98\r\nh = 66867 + 98 = 66965\r\n```\r\n::\r\n\r\nÍ≤∞Í≥ºÏ†ÅÏúºÎ°ú `63350368`Í≥º `66965`ÎùºÎäî Ìï¥ÏãúÏΩîÎìúÍ∞Ä ÎÇòÏò®Îã§. Ïù¥ Í∞íÏúºÎ°ú hash functionÏùÑ ÎèåÎ¶¨Î©¥ ÏïÑÎûòÏ≤òÎüº Ï≤òÎ¶¨ÎêúÎã§.\r\n\r\n::code-group\r\n```text::\"Alice\": hash(63350368)\r\n1) hashCodeÎ•º 2ÏßÑÏàòÎ°ú Î≥ÄÌôò\r\n63350182 = 0000 0011 1110 0011 0110 1011 1000 0110\r\n\r\n2) h >>> 16 (ÏÉÅÏúÑ 16ÎπÑÌä∏Î•º ÌïòÏúÑ 16ÎπÑÌä∏Î°ú)\r\n0000 0000 0000 0000 0000 0011 1110 0011\r\n\r\n3) XOR Ïó∞ÏÇ∞ (^)\r\n0000 0011 1110 0011 0110 1011 1000 0110  (ÏõêÎûò Ìï¥ÏãúÏΩîÎìú)\r\n0000 0000 0000 0000 0000 0011 1110 0011  (>>> 16Ìïú Í∞í)\r\n----------------------------------------\r\n0000 0011 1110 0011 0110 1000 0110 0101  (ÏµúÏ¢Ö Ìï¥ÏãúÍ∞í) 66063397 (Ïã≠ÏßÑÏàò)\r\n```\r\n```text::\"Bob\": hash(66965)\r\n1) hashCodeÎ•º 2ÏßÑÏàòÎ°ú Î≥ÄÌôò\r\n66965 = 0000 0000 0000 0001 0000 0101 1000 0101\r\n\r\n2) h >>> 16 (ÏÉÅÏúÑ 16ÎπÑÌä∏Î•º ÌïòÏúÑ 16ÎπÑÌä∏Î°ú)\r\n0000 0000 0000 0000 0000 0000 0000 0001\r\n\r\n3) XOR Ïó∞ÏÇ∞ (^)\r\n0000 0000 0000 0001 0000 0101 1000 0101  (ÏõêÎûò Ìï¥ÏãúÏΩîÎìú)\r\n0000 0000 0000 0000 0000 0000 0000 0001  (>>> 16Ìïú Í∞í)\r\n----------------------------------------\r\n0000 0000 0000 0001 0000 0101 1000 0100  (ÏµúÏ¢Ö Ìï¥ÏãúÍ∞í) 66964 (Ïã≠ÏßÑÏàò)\r\n```\r\n::\r\n\r\nÏµúÏ¢ÖÏ†ÅÏúºÎ°ú `Alice`Îäî `66063523`, `Bob`ÏùÄ `66964`ÎùºÎäî Ìï¥ÏãúÍ∞íÏùÑ ÏñªÏùÑ Ïàò ÏûàÎã§.\r\nÏù¥Î†áÍ≤å ÏñªÏñ¥ÏßÑ Ìï¥ÏãúÍ∞íÏùÑ ÌÜµÌï¥ Îç∞Ïù¥ÌÑ∞Î•º Ï†ÄÏû•ÌïòÍ±∞ÎÇò Í≤ÄÏÉâÌï† Ïàò ÏûàÎã§.\r\n\r\n> Hash Í∞íÏùÄ Îç∞Ïù¥ÌÑ∞Î•º Ï†ÄÏû•ÌïòÍ±∞ÎÇò Í≤ÄÏÉâÌïòÍ∏∞ ÏúÑÌï¥ ÏÇ¨Ïö©ÎêòÎäî Ïù∏Îç±Ïä§Î•º ÎßåÎì§ Ïàò ÏûàÎã§.\r\n:{ \"type\": \"tip\", \"icon\": \"check-circle\" }\r\n\r\n## Ìï¥Ïãú Ï∂©Îèå::hash-collision\r\n\r\n`Java` ÏóêÏÑúÎäî `hash` Í∞íÏúºÎ°ú ÌÖåÏù¥Î∏î Ïù∏Îç±Ïä§Î•º Íµ¨Ìï† Îïå `(n - 1) & hash`Î°ú ÎßåÎì†Îã§.\r\n`n`ÏùÄ ÌÖåÏù¥Î∏îÏùò ÌÅ¨Í∏∞Ïù¥Î©∞ Ï¥àÍ∏∞Í∞íÏùÄ 16(`1 << 4`)Ïù¥Îã§. `Alice`ÎùºÎäî Î¨∏ÏûêÏó¥Î°ú Ïù∏Îç±Ïä§Î•º Í≥ÑÏÇ∞ÌïòÎ©¥ ÏïÑÎûòÏôÄ Í∞ôÎã§.\r\n\r\n::code-group\r\n```text::\"Alice\"Ïùò Ìï¥Ïãú Ïù∏Îç±Ïä§\r\n0000 0000 0000 0000 0000 0000 0000 1111 (n - 1 = 15)\r\n0000 0011 1111 1010 1011 0101 0000 0101 (hash: 66063397\r\n----------------------------------------\r\n0000 0000 0000 0000 0000 0000 0000 0101 (ÏµúÏ¢Ö Ïù∏Îç±Ïä§: 5)\r\n```\r\n```text::\"Bob\"Ïùò Ìï¥Ïãú Ïù∏Îç±Ïä§\r\n0000 0000 0000 0000 0000 0000 0000 1111 (n - 1 = 15)\r\n0000 0000 0000 0001 0000 0101 1000 0100 (hash: 66964)\r\n----------------------------------------\r\n0000 0000 0000 0000 0000 0000 0000 0100 (ÏµúÏ¢Ö Ïù∏Îç±Ïä§: 4)\r\n```\r\n::\r\n\r\n![Ìï¥Ïãú Ïù∏Îç±Ïä§](/post/data-structure/hash/hash-index.png)\r\n:{ \"align\": \"center\", \"max-width\": \"400px\", \"description\": \"AliceÏôÄ BobÏùò Ìï¥Ïãú Ïù∏Îç±Ïä§\" }\r\n\r\nÏù¥Î†áÍ≤å Í≥ÑÏÇ∞Îêú Ïù∏Îç±Ïä§Îäî ÌòÑÏû¨ ÌÖåÏù¥Î∏îÏùò ÌÅ¨Í∏∞ÏôÄ Ìï¥ÏãúÍ∞íÏóê Îî∞Îùº ÏÉùÏÑ±ÎêòÎØÄÎ°ú ÏòàÏ∏°ÌïòÍ∏∞ Ïñ¥Î†§Ïö∞Î©∞, Í∞ÑÌòπ Í∞ôÏùÄ Ïù∏Îç±Ïä§Î•º ÏÉùÏÑ±ÌïòÎäî Í≤ΩÏö∞Í∞Ä Î∞úÏÉùÌïòÎäîÎç∞, Ïù¥Î•º **Ìï¥Ïãú Ï∂©Îèå**Ïù¥ÎùºÍ≥† ÌïúÎã§.\r\n\r\n![Ìï¥Ïãú Ï∂©Îèå](/post/data-structure/hash/hash-collision.png)\r\n:{ \"description\": \"Ìï¥Ïãú Ï∂©Îèå\" }\r\n\r\n**Ìï¥Ïãú Ï∂©Îèå**ÏùÄ Ìï¥ÏãúÎì§Ïù¥ Ïñ¥Îñ§ Í≥ÑÏÇ∞Îêú Í∞íÏóê ÏùòÌï¥ ÏÉùÏÑ±Îêú ÌÖåÏù¥Î∏î Ïù∏Îç±Ïä§Í∞Ä Í∞ôÏùÄ Í≤ΩÏö∞Î•º ÎßêÌïúÎã§.\r\nÌï¥Ïãú Í∞íÏù¥ Îã§Î•¥ÎçîÎùºÎèÑ, Í∞ÄÎ¶¨ÌÇ§Îäî ÌÖåÏù¥Î∏î Ïù∏Îç±Ïä§Í∞Ä Í∞ôÏùÄ Í≤ΩÏö∞ Ïù¥ÎØ∏ Îã§Î¶ÑÍ∞íÏù¥ Ï†ÄÏû•Ïù¥ ÎêòÏñ¥ÏûàÍ∏∞ ÎïåÎ¨∏Ïóê, Ï∂©ÎèåÏù¥ Î∞úÏÉùÌïúÎã§.\r\n\r\nÏù¥Îü∞ Ï∂©Îèå Î¨∏Ï†úÎ•º Ìï¥Í≤∞ÌïòÍ∏∞ ÏúÑÌï¥ Ïó¨Îü¨Í∞ÄÏßÄ Î∞©Î≤ïÎì§Ïù¥ Í≥†Ïïà ÎêòÏóàÎã§.\r\n\r\n## Ìï¥Ïãú Ï∂©Îèå Ìï¥Í≤∞ Î∞©Î≤ï::how-to-solve-hash-collision\r\n\r\n### 1. Ï≤¥Ïù¥Îãù::chaining\r\n\r\n![Ï≤¥Ïù¥Îãù](/post/data-structure/hash/hash-chaining.png)\r\n:{ \"description\": \"ÎÖ∏ÎìúÎ•º Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏Î°ú Î¨∂Îäî Ï≤¥Ïù¥Îãù\" }\r\n\r\n**Ï≤¥Ïù¥Îãù**ÏùÄ Ìï¥Ïãú Ï∂©ÎèåÏù¥ Î∞úÏÉùÌïòÎ©¥, Í∞ôÏùÄ ÌÖåÏù¥Î∏îÏóê [Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏](/docs/data-structure/linked-list)Î°ú Ïó∞Í≤∞ÌïòÎäî Î∞©ÏãùÏù¥Îã§.\r\n\r\nÌï¥Ïãú Ï∂©ÎèåÏù¥ ÏûêÏ£º Î∞úÏÉù ÌïòÎäîÍ≤ÉÏùÄ ÏïÑÎãàÏßÄÎßå, Ï¢ÖÏ¢Ö Î∞úÏÉùÌïúÎã§. Ïù¥Î†áÍ≤å Ìï¥Ïãú Ï∂©ÎèåÏù¥ Î∞úÏÉùÌïòÎ©¥ Ìï¥Îãπ Ïù∏Îç±Ïä§Î°ú Ïó∞Í≤∞Îêú Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏ÏóêÏÑú Îç∞Ïù¥ÌÑ∞Î•º Ï∞æÏïÑÏïº ÌïúÎã§.\r\nÍ∞ôÏùÄ Ìï¥Ïãú Ïù∏Îç±Ïä§Ïóê ÎåÄÌï¥ Îç∞Ïù¥ÌÑ∞Í∞Ä Ï†ÄÏû•ÎêúÍ≥≥ÏùÑ `Î≤ÑÌÇ∑(Bucket)`Ïù¥ÎùºÍ≥† ÌïòÎäîÎç∞, Ïù¥ Î≤ÑÌÇ∑ÏóêÎäî Îç∞Ïù¥ÌÑ∞Í∞Ä ÎßéÏïÑÏßàÏàòÎ°ù ÏÑ±Îä•Ïù¥ Ï†ÄÌïòÎêúÎã§.\r\n\r\n`Java`Ïùò Í≤ΩÏö∞ Ï≤¥Ïù¥Îãù Î∞©ÏãùÏùÑ Ïì∞ÏßÄÎßå, Î≤ÑÌÇ∑Ïùò ÏÑ±Îä•ÏùÑ Í∞úÏÑ†ÌïòÍ∏∞ ÏúÑÌï¥ 8(`threshold`)Í∞ú ÍπåÏßÄÎäî ÏÑ†Ìòï ÌÉêÏÉâÏùÑ ÌïòÏßÄÎßå, \r\nÍ∑∏ Ïù¥ÏÉÅÏùÄ Ìä∏Î¶¨(`Red Black`) Íµ¨Ï°∞Î°ú Î≥ÄÍ≤ΩÌïòÏó¨ Ïù¥ÏßÑ ÌÉêÏÉâÏúºÎ°ú ÏÑ±Îä•ÏùÑ Ìñ•ÏÉÅÏãúÌÇ§Î©∞ Í∞úÏàòÍ∞Ä Ï§ÑÏñ¥Îì§Î©¥ Îã§Ïãú Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏Î°ú Î∞îÍøî ÏÑ†Ìòï ÌÉêÏÉâÏùÑ ÌïúÎã§.\r\n\r\n> `Java` Ïù¥Ïô∏ÏóêÎèÑ `C++`, `C#`Îì± Îã§ÏñëÌïú Ïñ∏Ïñ¥ÏóêÏÑúÎèÑ Ï≤¥Ïù¥Îãù Î∞©ÏãùÏùÑ ÏÇ¨Ïö©ÌïúÎã§.\r\n:{ \"type\": \"tip\", \"icon\": \"check-circle\" }\r\n\r\n### 2. Í∞úÎ∞© Ï£ºÏÜåÎ≤ï::open-addressing\r\n\r\nÍ∞úÎ∞© Ï£ºÏÜåÎ≤ïÏùÄ Ìï¥Ïãú Ï∂©ÎèåÏù¥ Î∞úÏÉùÌï† Îïå, ÎπÑÏñ¥ÏûàÎäî Îã§Î•∏ Î≤ÑÌÇ∑ÏùÑ Ï∞æÏïÑ Îç∞Ïù¥ÌÑ∞Î•º Ï†ÄÏû•ÌïòÎäî Î∞©ÏãùÏù¥Îã§.\r\nÏó¨Í∏∞ÏÑú **ÎπÑÏñ¥ÏûàÎäî Îã§Î•∏ Ï£ºÏÜå**Ïóê ÎåÄÌï¥ Ï†ëÍ∑ºÌïòÎäî Í≤ÉÏù¥Í∏∞ ÎïåÎ¨∏Ïóê `Í∞úÎ∞© Ï£ºÏÜåÎ≤ï`Ïù¥ÎùºÍ≥† ÌïòÎ©∞ Ïù¥ Ï£ºÏÜåÎ•º Ï∞æÎäî Í≤ÉÏùÑ, `ÌÉêÏÇ¨(probing)`Ïù¥ÎùºÍ≥† ÌïúÎã§.\r\n\r\nÍ∞úÎ∞© Ï£ºÏÜåÎ≤ïÏùÄ [Ï≤¥Ïù¥Îãù](#chaining)Í≥º Îã§Î•¥Í≤å, Î≤ÑÌÇ∑Ïóê ÌïúÍ∞úÏùò Ï†ïÎ≥¥Îßå Ï†ÄÏû•Ìï†Ïàò ÏûàÎã§.\r\nÎî∞ÎùºÏÑú Î≤ÑÌÇ∑Ïù¥ Ï∞®Í≤å ÎêòÎ©¥, Îã§Î•∏ Î≤ÑÌÇ∑ÏùÑ Ï∞æÏïÑ Ï†ÄÏû•Ìï¥Ïïº ÌïúÎã§. Ïù¥Îïå Î≤ÑÌÇ∑ÏùÄ ÌòÑÏû¨ Ìï¥Ïãú Ïù∏Îç±Ïä§ÏôÄ Í¥ÄÎ†®Ïù¥ ÏóÜÎäî Îã§Î•∏ Î≤ÑÌÇ∑ÏùÑ Ï∞æÍ≤åÎêúÎã§.\r\n\r\nÍ∞úÎ∞© Ï£ºÏÜåÎ≤ïÏóêÎäî ÏÑ∏Í∞ÄÏßÄ Î∞©Î≤ïÏù¥ ÏûàÎã§.\r\n\r\n#### 2-1. ÏÑ†Ìòï ÌÉêÏÇ¨\r\n\r\n![ÏÑ†Ìòï ÌÉêÏÇ¨](/post/data-structure/hash/hash-linear-probing.png)\r\n:{ \"align\": \"center\", \"max-width\": \"400px\", \"description\": \"ÏÑ†Ìòï ÌÉêÏÇ¨Î°ú ÏÉàÎ°úÏö¥ Ï†ïÎ≥¥Î•º ÌÖåÏù¥Î∏îÏóê Ï∂îÍ∞Ä\" }\r\n\r\nÏ≤´ Î≤àÏß∏Î°ú **ÏÑ†Ìòï ÌÉêÏÇ¨**Îäî Ìï¥ÏãúÎ°ú Í≥ÑÏÇ∞Îêú Ïù∏Îç±Ïä§Í∞Ä Ïù¥ÎØ∏ ÏÇ¨Ïö©Ï§ëÏù¥ÎùºÎ©¥, Îã§Ïùå Ïù∏Îç±Ïä§Î°ú Ïù¥ÎèôÌïòÏó¨ Ï†ÄÏû•ÌïòÎäî Î∞©ÏãùÏù¥Îã§.\r\nÏù¥Îü¨Ìïú Î∞©ÏãùÏùÄ ÏßÄÏÜçÏ†ÅÏúºÎ°ú Îã§Ïùå Î≤ÑÌÇ∑ÏùÑ Ï∞æÍ∏∞ ÎïåÎ¨∏Ïóê, Ïã§Ï†ú Ìï¥Îãπ Ïù∏Îç±Ïä§Ïóê Ïó∞Í≤∞ÎêòÏñ¥Ïïº ÌïòÎäî Îç∞Ïù¥ÌÑ∞Í∞Ä Îòê Îã§Î•∏ Î≤ÑÌÇ∑ÏùÑ ÌÉêÏÇ¨Ìï¥ÏïºÌïòÎØÄÎ°ú ÌïúÍ≥≥Ïóê Îç∞Ïù¥ÌÑ∞Í∞Ä Î™®Ïù¥Í≤å ÎêúÎã§.\r\n\r\nÏù¥Î†áÍ≤å Îç∞Ïù¥ÌÑ∞Í∞Ä Î™®Ïù¥Îäî ÌòÑÏÉÅÏùÑ Íµ∞ÏßëÌôî(`clustering`)ÎùºÍ≥† ÌïòÎ©∞, \r\nÌï¥ÏãúÏ∂©ÎèåÎ°ú Îã§Ïùå Î≤ÑÌÇ∑ÏùÑ Í≥ÑÏÜç Ï∞æÏïÑÎã§ÎãàÎäî ÏÑ†Ìòï ÌÉêÏÇ¨Îäî Íµ∞ÏßëÌôîÍ∞Ä Î∞úÏÉùÌï† Í∞ÄÎä•ÏÑ±Ïù¥ ÎÜíÎã§.\r\n\r\n#### 2-2. Ï†úÍ≥± ÌÉêÏÇ¨ (Ïù¥Ï∞® ÌÉêÏÇ¨)\r\n\r\n![Ï†úÍ≥± ÌÉêÏÇ¨](/post/data-structure/hash/hash-quadratic-probing.png)\r\n:{ \"align\": \"center\", \"max-width\": \"250px\", \"description\": \"Ï†úÍ≥± ÌÉêÏÇ¨Î°ú ÏÉàÎ°úÏö¥ Ï†ïÎ≥¥Î•º ÌÖåÏù¥Î∏îÏóê Ï∂îÍ∞Ä\" }\r\n\r\nÎëê Î≤àÏß∏Î°ú **Ï†úÍ≥± ÌÉêÏÇ¨**Îäî `ÏÑ†Ìòï ÌÉêÏÇ¨`Ïùò Íµ∞ÏßëÌôîÎ•º Î≥¥ÏôÑÌïòÍ∏∞ ÏúÑÌï¥ ÎÇòÏò® Í∏∞Î≤ïÏù¥Îã§.\r\nÏù¥ Í∏∞Î≤ïÏùÄ **N + M^2^**(`N: ÏõêÎ≥∏ Ïù∏Îç±Ïä§`, `M: ÌÉêÏÉâ Ï∞®Ïàò`)Î°ú Îã§Ïùå Î≤ÑÌÇ∑ÏùÑ Ï∞æÎäîÎã§. \r\n\r\nÏòàÎ•º Îì§Ïñ¥ Îã§ÏùåÍ≥º ÏúÑ Ïù¥ÎØ∏ÏßÄÏôÄ Í∞ôÏù¥ Í≥ÑÏÇ∞Îêú Ïù∏Îç±Ïä§Í∞Ä 5Ïù∏ Í≤ΩÏö∞, 5Î≤à Î≤ÑÌÇ∑ÏóêÎäî Ïù¥ÎØ∏ Îç∞Ïù¥ÌÑ∞Í∞Ä ÏûàÍ∏∞ ÎïåÎ¨∏Ïóê Ï≤´Î≤àÏß∏ ÌÉêÏÇ¨ Ïù∏Îç±Ïä§Î°ú (**5 + 1^2^** = 6)ÏúºÎ°ú Ïù¥ÎèôÌïúÎã§.\r\n\r\nÏßÄÏÜçÏ†ÅÏúºÎ°ú Î≤ÑÌÇ∑Ïù¥ ÏÇ¨Ïö©Ï§ëÏù¥ÎùºÎ©¥ ÏïÑÎûòÏ≤òÎüº Ïù∏Îç±Ïä§Í∞Ä Í≥ÑÏÇ∞ÎêúÎã§.\r\n\r\n1. 5 + 1^2^ = 6\r\n2. 5 + 2^2^ = 9\r\n3. 5 + 3^2^ = 14\r\n4. 5 + 4^2^ = 21\r\n\r\nÏù¥Îü¨Ìïú Ï†úÍ≥±ÌÉêÏÇ¨Îäî ÏÑ†ÌòïÌÉêÏÇ¨Î≥¥Îã§Îäî Íµ∞ÏßëÌôîÍ∞Ä Ï†ÅÍ≤å Î∞úÏÉùÌïòÏßÄÎßå, Ïó¨Ï†ÑÌûà Íµ∞ÏßëÌôîÍ∞Ä Î∞úÏÉùÌï† Ïàò ÏûàÎã§.\r\n\r\n#### 2-3. Ïù¥Ï§ë Ìï¥Ïã±\r\n\r\nÏÑ∏ Î≤àÏß∏Î°ú **Ïù¥Ï§ë Ìï¥Ïã±**ÏùÄ Ìï¥Ïã± Ïù∏Îç±Ïä§Î•º Íµ¨ÌïòÎäî Ìï¥Ïãú Ìï®ÏàòÏóêÏÑú ÎëêÎ≤àÏùò Ìï¥Ïã±ÏúºÎ°ú Ïó∞ÏÇ∞ÌïúÎã§.\r\nÏïûÏÑú `Ìï¥Ïãú Ìï®Ïàò`Îäî Ìï¥Ïãú Í∞íÏùÑ Íµ¨ÌïòÎäî Ìï®ÏàòÎùºÍ≥† ÏÑ§Î™ÖÌïòÏòÄÏßÄÎßå, Ïó¨Í∏∞ÏÑúÎäî Ìï¥Ïãú Ïù∏Îç±Ïä§Î•º Íµ¨ÌïòÎäî Ìï®ÏàòÎèÑ `Ìï¥Ïãú Ìï®Ïàò`ÎùºÍ≥† Ïπ≠Ìï† Ïàò ÏûàÎã§.\r\n\r\nÏù¥Ï§ë Ìï¥Ïã±ÏóêÏÑú Ìï¥Ïãú Ìï®ÏàòÎäî Îã§ÏùåÍ≥º Í∞ôÎã§.\r\n\r\nÏ†ÑÏ≤¥ Ìï¥Ïãú Ìï®Ïàò: **h(k, i) = (h~1~(k) + i * h~2~(k)) % m**\r\n* h~1~(k) = k % m\r\n* h~2~(k) = PRIME - (k % PRIME)\r\n\r\n> k: ÌÇ§Í∞í, i: Ï∂©Îèå ÌöüÏàò (0, 1, 2, ...), m: ÌÖåÏù¥Î∏î ÌÅ¨Í∏∞, PRIME: ÏÜåÏàò\r\n:{ \"type\": \"tip\", \"icon\": \"check-circle\" }\r\n\r\n> `PRIME`ÏùÄ  h~2~(k)Í∞Ä 0Ïù¥ ÎêòÎäî Í≤ÉÏùÑ Î∞©ÏßÄÌïòÍ≥†, Î™®Îì† Î≤ÑÌÇ∑ÏùÑ Í≥®Í≥†Î£® Î∞©Î¨∏ÌïòÍ∏∞ ÏúÑÌï¥ ÏÇ¨Ïö©ÌïúÎã§.\r\n:{ \"type\": \"tip\", \"icon\": \"lightbulb\" }\r\n\r\nÏòàÎ•º Îì§Ïñ¥ ÌÇ§Í∞í(Ìï¥Ïãú Í∞í)Ïù¥ `14`, ÌÖåÏù¥Î∏îÏùò ÌÅ¨Í∏∞Í∞Ä `13` Í∑∏Î¶¨Í≥† `PRIME`Ïù¥ 7Ïù¥ÎùºÍ≥† Í∞ÄÏ†ïÌïúÎã§Î©¥ ÏïÑÎûòÏôÄ Í∞ôÏùÄ Í≥ºÏ†ïÏúºÎ°ú Ïù∏Îç±Ïä§Î•º Íµ¨Ìï† Ïàò ÏûàÎã§.\r\n\r\n```text\r\nh~1~(14) = 14 % 13 = 1\r\nh~2~(14) = 7 - (14 % 7) = 7 - 0 = 7\r\n\r\n// h(14, i) = (h~1~(14) + i * h~2~(14)) % 13\r\ni=0: (1 + 0 * 7) % 13 = 1 //Ï≤´ Î≤àÏß∏ ÏúÑÏπò\r\ni=1: (1 + 1 * 7) % 13 = 8 //Îëê Î≤àÏß∏ ÏúÑÏπò\r\ni=2: (1 + 2 * 7) % 13 = 2 //ÏÑ∏ Î≤àÏß∏ ÏúÑÏπò\r\n```\r\nÏù¥Îü∞ ÏãùÏúºÎ°ú ÌÖåÏù¥Î∏î ÌÅ¨Í∏∞Ïóê ÎßûÍ≤å Ï†ÅÏ†àÌïú Î∂ÑÌè¨Î•º Ìï†Ïàò ÏûàÎã§. ÌïòÏßÄÎßå, Ïù¥Ï§ë Ìï¥Ïã±ÏùÄ ÏÑ†Ìòï ÌÉêÏÇ¨ÎÇò Ï†úÍ≥± ÌÉêÏÇ¨Î≥¥Îã§Îäî ÏÑ±Îä•Ïù¥ Ï¢ãÏßÄÎßå, PRIMEÏùÑ Ï∞æÎäî Í≤ÉÏù¥ Ïñ¥Î†µÎã§.\r\nÎßåÏïΩ ÌÇ§Í∞í(Ìï¥Ïãú Í∞í)Ïù¥ `23`, ÌÖåÏù¥Î∏îÏùò ÌÅ¨Í∏∞Í∞Ä `10` Í∑∏Î¶¨Í≥† `PRIME`Ïù¥ 7Ïù¥ÎùºÍ≥† Í∞ÄÏ†ïÌïúÎã§Î©¥ ÏïÑÎûòÏôÄ Í∞ôÏùÄ Í≥ºÏ†ïÏúºÎ°ú ÏàúÌôòÏù¥ Î∞úÏÉùÌïúÎã§.\r\n\r\n```text\r\nh‚ÇÅ(23) = 23 % 10 = 3\r\nh‚ÇÇ(23) = 7 - (23 % 7) = 7 - 2 = 5\r\n\r\n// h(23, i) = (h‚ÇÅ(23) + i * h‚ÇÇ(23)) % 10 \r\ni=0: (3 + 0 * 5) % 10 = 3 //Ï≤´ Î≤àÏß∏ ÏúÑÏπò\r\ni=1: (3 + 1 * 5) % 10 = 8 //Îëê Î≤àÏß∏ ÏúÑÏπò\r\ni=2: (3 + 2 * 5) % 10 = 3 //ÏÑ∏ Î≤àÏß∏ ÏúÑÏπò\r\n```\r\n\r\n`3`Í≥º `8`Ïù∏Îç±Ïä§Ïóê ÎåÄÌï¥ ÏàúÌôòÏù¥ Î∞úÏÉùÌïòÎ©∞, Ïò¨Î∞îÎ•∏ Ï≤òÎ¶¨Î•º ÌïòÏßÄÎ™ªÌïúÎã§. Ïù¥Ï§ëÌï¥Ïã±ÏùÄ Í∑†Îì±Î∂ÑÌè¨Ïóê Í∞ÄÏû• Ï†ÅÌï©ÌïòÏßÄÎßå,\r\nÏù¥Ï§ë Ìï¥Ïã±ÏùÄ Ìï≠ÏÉÅ ÎëêÎ≤àÏùò Ìï¥Ïã±Ïù¥ ÌïÑÏöîÌïòÎ©∞, Ï†ÅÏ†àÌïú PRIMEÏùÑ Ï∞æÎäî Í≤ÉÏù¥ Ïñ¥Î†µÍ∏∞ ÎñÑÎ¨∏Ïóê **ÏÑ†ÌòÑ ÌÉêÏÇ¨**ÎÇò **Ï†úÍ≥± ÌÉêÏÇ¨**Î≥¥Îã§Îäî ÏûêÏ£º ÏÇ¨Ïö©ÎêòÏßÄ ÏïäÎäîÎã§.\r\n\r\n> Ïù¥Ïô∏ÏóêÎèÑ Ìï¥ÏãúÏ∂©Îèå Ìï¥Í≤∞ Î∞©Î≤ïÏùÄ `Î°úÎπà ÌõÑÎìú Ìï¥Ïã±`, `Î∂ÑÎ¶¨ Ïó∞Í≤∞Î≤ï`, `ÎèôÏ†Å Ìï¥Ïãú`Îì±Ïù¥ ÏûàÎã§.\r\n:{ \"type\": \"note\", \"icon\": \"info\" }\r\n"
  },
  {
    "path": "/docs/data-structure/queue",
    "header": {
      "layout": "post",
      "title": "ÌÅê (Queue)",
      "tags": [
        "Data Structure",
        "Queue"
      ],
      "date": 1570217400000,
      "profile-image": "/post/profile/profile0.jpg",
      "thumbnail": "/post/data-structure/queue/index.png",
      "current-company": "Computer Academy",
      "current-position": "Student",
      "summary": "ÌÅê",
      "expose-images": true,
      "excerpt-separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÏûêÎ£åÍµ¨Ï°∞"
      ],
      "images": [
        {
          "src": "/post/data-structure/queue/index.png",
          "alt": "ÌÅê"
        }
      ],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "ÌÅêÎûÄ?::what-is-queue",
            "title": "ÌÅêÎûÄ?",
            "fragment": "what-is-queue",
            "children": []
          },
          {
            "rank": 2,
            "origin": "ÌÅêÏùò ÌïÑÏàòÍ∏∞Îä• Íµ¨ÌòÑ::core-operations",
            "title": "ÌÅêÏùò ÌïÑÏàòÍ∏∞Îä• Íµ¨ÌòÑ",
            "fragment": "core-operations",
            "children": []
          },
          {
            "rank": 2,
            "origin": "ÌÅêÏùò Íµ¨ÌòÑ::implementation",
            "title": "ÌÅêÏùò Íµ¨ÌòÑ",
            "fragment": "implementation",
            "children": []
          }
        ]
      }
    },
    "description": "QueueÎäî Î¨¥ÏóáÏù∏Í∞Ä Í∏∞Îã§Î¶¨Îäî ÌñâÎ†¨ÏùÑ ÏùòÎØ∏ÌïúÎã§.  \r\nÏÑ†ÏûÖÏÑ†Ï∂ú(FIFO, First In First Out)Î°ú Îç∞Ïù¥ÌÑ∞Î•º Í¥ÄÎ¶¨ÌïòÎäî QueueÎ•º ÏïåÏïÑÎ≥¥Ïûê.",
    "content": "\r\n\r\n## ÌÅêÎûÄ?::what-is-queue\r\n\r\n![ÌÅê](/post/data-structure/queue/index.png)\r\n:{ \"description\": \"ÌÅêÏùò enqueue ÏôÄ dequeue\" }\r\n\r\n**Queue** ÏûêÎ£åÍµ¨Ï°∞Îäî [Î∞∞Ïó¥](/docs/data-structure/array)Î°úÎèÑ Íµ¨ÌòÑÌï† Ïàò ÏûàÍ≥†, [Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏](/docs/data-structure/linked-list)Î°úÎèÑ Í∞ÑÎã®ÌïòÍ≤å Íµ¨ÌòÑÌï† Ïàò ÏûàÎã§.\r\nÏúÑ Ïù¥ÎØ∏ÏßÄÏôÄ Í∞ôÏù¥ `Queue`Îäî Î®ºÏ†Ä Îì§Ïñ¥Ïò® ÏöîÏÜåÍ∞Ä Î®ºÏ†Ä ÎÇòÏò¨ Ïàò ÏûàÎäî ÏÑ†ÏûÖÏÑ†Ï∂ú(FIFO, First In First Out)Ïùò ÏûêÎ£åÍµ¨Ï°∞Ïù¥Îã§.\r\n\r\n`Queue`ÏóêÎäî Í∞íÏùÑ ÎÑ£ÏùÑÏàò ÏûàÎäî `enqueue`ÏôÄ Í∞íÏùÑ Í∫ºÎÇº Ïàò ÏûàÎäî `dequeue`Î•º Íµ¨ÌòÑÌïúÎã§.\r\n\r\nÏù¥Îäî ÎåÄÎûµÏ†ÅÏúºÎ°ú ÏïÑÎûòÏôÄ Í∞ôÏùÄ Íµ¨Ï°∞Î•º Í∞ÄÏßÑÎã§.\r\n\r\n```text\r\n//ÎÖ∏Îìú\r\nclass Node<T> is\r\n    T data\r\n    Node<T> next\r\n    \r\n//Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏\r\nclass Queue<T> is\r\n    Node<T> front\r\n    Node<T> rear\r\n    int size\r\n    \r\n    method is_empty(): boolean\r\n    method peek(): T\r\n    method enqueue(T item)\r\n    method dequeue(): T\r\n```\r\n\r\n\r\n## ÌÅêÏùò ÌïÑÏàòÍ∏∞Îä• Íµ¨ÌòÑ::core-operations\r\n\r\n* Í∞í Ï∂îÍ∞Ä (enqueue)\r\n\r\n```text\r\nmethod enqueue(T item) is\r\n    Node<T> newNode = new Node<>(item)\r\n    if is_empty() then\r\n        front = newNode // ÌÅêÍ∞Ä ÎπÑÏñ¥ÏûàÎã§Î©¥ ÏÉàÎ°úÏö¥ ÎÖ∏ÎìúÎ°ú frontÎ•º ÏÑ§Ï†ï\r\n    else\r\n        rear.next = newNode //ÏöîÏÜåÍ∞Ä ÏûàÎã§Î©¥, rearÏùò Îã§Ïùå ÎÖ∏ÎìúÎ°ú ÏÑ§Ï†ï\r\n    rear = newNode\r\n    size++\r\n```\r\n\r\n* Í∞í Ï†úÍ±∞ (dequeue)\r\n\r\n```text\r\nmethod dequeue(): T is\r\n    if is_empty() then\r\n        throw EmptyQueueException\r\n    T item = front.data // frontÏùò Îç∞Ïù¥ÌÑ∞Î•º Í∞ÄÏ†∏Ïò®Îã§.\r\n    front = front.next // frontÎ•º Îã§Ïùå ÎÖ∏ÎìúÎ°ú ÏÑ§Ï†ï\r\n    \r\n    // frontÍ∞Ä nullÏù¥Î©¥ rearÎèÑ nullÎ°ú ÏÑ§Ï†ï\r\n    if (front == null) then\r\n        rear = null\r\n    \r\n    size--\r\n    return item\r\n```\r\n\r\n* Í≥µÎ∞± ÌôïÏù∏ (is_empty)\r\n\r\n```text\r\nmethod is_empty(): boolean is\r\n    return size == 0\r\n```\r\n\r\n* Í∞í ÌôïÏù∏ (peek)\r\n\r\n```text\r\nmethod peek(): T is\r\n    if is_empty() then\r\n        throw EmptyQueueException\r\n    return front.data\r\n```\r\n\r\n## ÌÅêÏùò Íµ¨ÌòÑ::implementation\r\n\r\n::code-group\r\n```cpp::c++\r\nusing namespace std;\r\n\r\ntemplate <typename T>\r\nclass Queue {\r\nprivate:\r\n    struct Node {\r\n        T data;\r\n        Node *next;\r\n        explicit Node(const T &data): data(data), next(nullptr) {}\r\n    };  \r\n    Node *front;\r\n    Node *rear;\r\n    size_t size;\r\n\r\npublic:\r\n    Queue(): front(nullptr), rear(nullptr), size(0) {}\r\n    ~Queue() {\r\n        while (!is_empty()) {\r\n            dequeue();\r\n        }\r\n    }\r\n    bool is_empty() const {\r\n        return size == 0;\r\n    }\r\n    void enqueue(T data) {\r\n        Node *newNode = new Node(data);\r\n        if (is_empty()) {\r\n            front = newNode;\r\n        } else {\r\n            rear->next = newNode;\r\n        }\r\n        rear = newNode;\r\n        size++;\r\n    }\r\n    T dequeue() {\r\n        if (is_empty()) throw underflow_error(\"Queue is empty!\");\r\n        Node* temp = front;\r\n        front = front->next;\r\n        T data = temp->data;\r\n        delete temp;\r\n\r\n        if (front == nullptr) rear = nullptr;\r\n\r\n        size--;\r\n        return data;\r\n    }\r\n    T peek() const {\r\n        if (is_empty()) throw underflow_error(\"Queue is empty!\");\r\n        return front->data;\r\n    }\r\n    friend ostream& operator<<(ostream& os, const Queue& q) {\r\n        os << \"[\";\r\n        Node* temp = q.front;\r\n        while (temp != nullptr) {\r\n            os << temp->data;\r\n            if (temp->next != nullptr) os << \", \";\r\n            temp = temp->next;\r\n        }\r\n\r\n        os << \"]\";\r\n        return os;\r\n    }\r\n};\r\n```\r\n```java::java\r\npublic class Queue<T> {\r\n    private class Node {\r\n        T data;\r\n        Node next;\r\n        Node(T data) {\r\n            this.data = data;\r\n            this.next = null;\r\n        }\r\n    }\r\n    private Node front;\r\n    private Node rear;\r\n    private int size;\r\n\r\n    public Queue() {\r\n        front = null;\r\n        rear = null;\r\n        size = 0;\r\n    }\r\n\r\n    public boolean isEmpty() {\r\n        return size == 0;\r\n    }\r\n\r\n    public void enqueue(T data) {\r\n        Node newNode = new Node(data);\r\n        if (isEmpty()) {\r\n            front = newNode;\r\n        } else {\r\n            rear.next = newNode;\r\n        }\r\n        rear = newNode;\r\n        size++;\r\n    }\r\n\r\n    public T dequeue() {\r\n        if (isEmpty()) throw new RuntimeException(\"Queue is empty!\");\r\n        Node temp = front;\r\n        front = front.next;\r\n        T data = temp.data;\r\n        temp = null;\r\n\r\n        if (front == null) rear = null;\r\n\r\n        size--;\r\n        return data;\r\n    }\r\n\r\n    public T peek() {\r\n        if (isEmpty()) throw new RuntimeException(\"Queue is empty!\");\r\n        return front.data;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        StringBuilder sb = new StringBuilder();\r\n        sb.append(\"[\");\r\n        Node temp = front;\r\n        while (temp != null) {\r\n            sb.append(temp.data);\r\n            if (temp.next != null) sb.append(\", \");\r\n            temp = temp.next;\r\n        }\r\n        sb.append(\"]\");\r\n        return sb.toString();\r\n    }\r\n}    \r\n```\r\n::\r\n\r\n"
  },
  {
    "path": "/docs/data-structure/linked-list",
    "header": {
      "layout": "post",
      "title": "Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏ (Linked List)",
      "tags": [
        "Data Structure",
        "Linked List"
      ],
      "date": 1569358380000,
      "profile-image": "/post/profile/profile0.jpg",
      "thumbnail": "/post/data-structure/linked-list/index.png",
      "current-company": "Computer Academy",
      "current-position": "Student",
      "summary": "Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏",
      "expose-images": true,
      "excerpt-separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÏûêÎ£åÍµ¨Ï°∞"
      ],
      "images": [
        {
          "src": "/post/data-structure/linked-list/node.png",
          "alt": "ÎÖ∏Îìú"
        },
        {
          "src": "/post/data-structure/linked-list/index.png",
          "alt": "Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏"
        },
        {
          "src": "/post/data-structure/linked-list/add-to-linked-list.png",
          "alt": "Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏ Ï∂îÍ∞Ä"
        }
      ],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "Ïó∞Í≤∞Î¶¨Ïä§Ìä∏ÎûÄ?::what-is-linked-list",
            "title": "Ïó∞Í≤∞Î¶¨Ïä§Ìä∏ÎûÄ?",
            "fragment": "what-is-linked-list",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏Ïùò ÌïÑÏàòÍ∏∞Îä• Íµ¨ÌòÑ::core-operations",
            "title": "Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏Ïùò ÌïÑÏàòÍ∏∞Îä• Íµ¨ÌòÑ",
            "fragment": "core-operations",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏Ïùò Íµ¨ÌòÑ::implementation",
            "title": "Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏Ïùò Íµ¨ÌòÑ",
            "fragment": "implementation",
            "children": []
          }
        ]
      }
    },
    "description": "Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏Îäî Ïó¨Îü¨Í∞úÏùò ÎÖ∏ÎìúÍ∞Ä Ïó∞Í≤∞Îêú ÏûêÎ£åÍµ¨Ï°∞Î°ú, Í∞íÏùò Î≥ÄÍ≤Ω(ÏÇΩÏûÖ, ÏÇ≠Ï†ú)Ïù¥ Ïö©Ïù¥ÌïòÎã§.\r\nÎ∞∞Ïó¥Í≥º Îã§Î•¥Í≤å Í∞Å ÎÖ∏ÎìúÎ•º Ïó∞Í≤∞ÌïòÎäî Î∞©ÏãùÏù¥Îùº ÌÅ¨Í∏∞Í∞Ä ÎèôÏ†ÅÏúºÎ°ú Î≥ÄÌï† Ïàò ÏûàÎã§.",
    "content": "\r\n\r\n## Ïó∞Í≤∞Î¶¨Ïä§Ìä∏ÎûÄ?::what-is-linked-list\r\n\r\n::text-wrapping\r\n![ÎÖ∏Îìú](/post/data-structure/linked-list/node.png)\r\n\r\nÏó∞Í≤∞ Î¶¨Ïä§Ìä∏Îäî ÎÖ∏ÎìúÎ•º ÏÇ¨Ïö©ÌïòÏó¨ Íµ¨ÌòÑÌïòÎäîÎç∞, ÎÖ∏ÎìúÎûÄ Ïñ¥Îñ§ ÏûêÎ£åÍµ¨Ï°∞Î•º Íµ¨ÏÑ±ÌïòÍ∏∞ ÏúÑÌï¥ ÏÇ¨Ïö©ÎêòÎäî Í∞Å ÏöîÏÜåÎ•º ÏùòÎØ∏ÌïúÎã§. Í∞íÏùÑ ÎûòÌïëÌïòÎäî Ïó≠Ìï†ÏùÑ ÌïúÎã§.  \r\n\r\nÏÇ¨Ïö©ÌïòÎ†§Îäî ÏûêÎ£å Íµ¨Ï°∞Ïóê Îî∞Îùº ÎÖ∏ÎìúÎ•º Ïó∞Í≤∞ÌïòÍ∏∞ÏúÑÌï¥ next, prev Îì±Ïùò Ìè¨Ïù∏ÌÑ∞Î•º ÏÇ¨Ïö©ÌïúÎã§.\r\n\r\n::{ \"align\": \"left\", \"max-width\": \"80px\" }\r\n\r\nÏùºÎ∞òÏ†ÅÏúºÎ°ú Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏ÏóêÏÑúÎäî ÎÖ∏ÎìúÏóê `next` Ìè¨Ïù∏ÌÑ∞(Îã§Î•∏ ÎÖ∏ÎìúÎ•º Ï∞∏Ï°∞)Î•º Ï∂îÍ∞ÄÌïòÏó¨ Íµ¨ÌòÑÌïúÎã§.\r\n\r\n![Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏](/post/data-structure/linked-list/index.png)\r\n:{ \"description\": \"Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏\" }\r\n\r\nÏó∞Í≤∞ Î¶¨Ïä§Ìä∏Îäî Ïù¥ÎØ∏ÏßÄÏ≤òÎüº ÎÖ∏ÎìúÏùò `next` ÌïÑÎìúÍ∞Ä Îã§Ïùå ÎÖ∏ÎìúÎ•º Ï∞∏Ï°∞ÌïòÍ≥† ÏûàÎã§. \r\nÎî∞ÎùºÏÑú Í∞íÏùÑ Ï∂îÍ∞Ä Ìï†Îïå ÎßàÎã§ ÌòÑÏû¨Ïùò ÏµúÏÉÅÏúÑ ÎÖ∏ÎìúÏôÄ ÏÉàÎ°úÏö¥ ÎÖ∏ÎìúÎ•º Ïó∞Í≤∞Ìï¥Ï§òÏïº ÌïúÎã§.\r\n\r\nÏù¥Îäî ÎåÄÎûµÏ†ÅÏúºÎ°ú Îã§ÏùåÍ≥º Í∞ôÏùÄ Íµ¨Ï°∞Í∞Ä ÎêúÎã§.\r\n```text\r\n//ÎÖ∏Îìú\r\nclass Node<T> is\r\n    T data\r\n    Node<T> next\r\n    \r\n//Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏\r\nclass LinkedList<T> is\r\n    Node<T> head;\r\n    Node<T> tail;\r\n    ...\r\n```\r\n\r\nÏó∞Í≤∞ Î¶¨Ïä§Ìä∏Ïóê ÏÉàÎ°úÏö¥ Í∞íÏùÑ Ï∂îÍ∞ÄÌïòÎ†§Î©¥ ÏÉàÎ°úÏö¥ ÎÖ∏ÎìúÏùò `next`Î•º `head`Î°ú ÏÑ§Ï†ïÌïòÍ≥†, `head`Î•º ÏÉàÎ°úÏö¥ ÎÖ∏ÎìúÎ°ú ÏÑ§Ï†ïÌïúÎã§.\r\n\r\n![Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏ Ï∂îÍ∞Ä](/post/data-structure/linked-list/add-to-linked-list.png)\r\n:{ \"description\": \"Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏Ïóê ÏÉàÎ°úÏö¥ ÎÖ∏ÎìúÎ•º Ï∂îÍ∞Ä\" }\r\n\r\nÎ∞òÎåÄÎ°ú Ï†úÍ±∞Ìï† ÎïåÎèÑ, `head`Î•º Îã§Ïùå ÎÖ∏ÎìúÎ°ú ÏÑ§Ï†ïÌïòÍ≥†, Ï†úÍ±∞Ìï† ÎÖ∏ÎìúÎ•º Ìï¥Ï†úÌïúÎã§.\r\n\r\n> Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏Îäî Ïó¨Îü¨ Ï¢ÖÎ•òÍ∞Ä ÏûàÏßÄÎßå, Îã®Î∞©Ìñ•Ïùò Í≤ΩÏö∞ `head`Îäî Í∞ÄÏû• ÎßàÏßÄÎßâÏóê Îì§Ïñ¥Ïò® ÏöîÏÜåÎ•º ÏùòÎØ∏ÌïúÎã§.\r\n:{ \"type\": \"tip\", \"icon\": \"lightbulb\" }\r\n\r\n\r\n## Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏Ïùò ÌïÑÏàòÍ∏∞Îä• Íµ¨ÌòÑ::core-operations\r\n\r\n* Í∞í Ï∂îÍ∞Ä (push_back)\r\n\r\n```text\r\nmethod push_back(Item item) is\r\n    Node newNode = new Node(item)\r\n    newNode.next = head\r\n    head = newNode\r\n    \r\n    size++;\r\n```\r\n\r\n* Í∞í Ï†úÍ±∞ (pop_back)\r\n\r\n```text\r\nmethod pop_back(): Item is\r\n    if is_empty() then\r\n        throw EmptyListException\r\n    \r\n    Node temp = head\r\n    Item item = temp.data\r\n    head = temp.next\r\n    \r\n    size--;\r\n    \r\n    return item\r\n```\r\n\r\n* Í≥µÎ∞± ÌôïÏù∏ (is_empty)\r\n\r\n```text\r\nmethod is_empty(): boolean is\r\n    return size == 0\r\n```\r\n\r\n## Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏Ïùò Íµ¨ÌòÑ::implementation\r\n\r\n**Node Class**\r\n::code-group\r\n\r\n```cpp::c++\r\ntemplate <typename U>\r\nstruct Node {\r\n    U data;\r\n    Node *next;\r\n\r\n    explicit Node(const U& data): data(data), next(nullptr) {}\r\n};\r\n```\r\n\r\n```java::java\r\npublic class Node<T> {\r\n    public T data;\r\n    public Node<T> next;\r\n\r\n    public Node(T data) {\r\n        this.data = data;\r\n        this.next = null;\r\n    }\r\n}\r\n```\r\n::\r\n\r\n**LinkedList Class**\r\n\r\n::code-group\r\n```cpp::c++\r\ntemplate <typename T>\r\nclass LinkedList {\r\nprivate:\r\n    Node<T>* head;\r\n    size_t size;\r\npublic:\r\n    LinkedList(): head(nullptr), size(0) {}\r\n    ~LinkedList();\r\n    void push_back(T value);\r\n    T pop_back();\r\n    bool is_empty() const;\r\n    friend ostream& operator<<(ostream& os, const LinkedList<T>& list) {\r\n        os << \"[\";\r\n        Node<T>* current = list.head;\r\n        while (current != nullptr) {\r\n            os << current->data;\r\n            current = current->next;\r\n            if (current != nullptr) {\r\n                os << \", \";\r\n            }\r\n        }\r\n        os << \"]\";\r\n        return os;\r\n    }\r\n};\r\n```\r\n```java::java\r\npublic class LinkedList<T> {\r\n    private Node<T> head;\r\n    private int size;\r\n\r\n    public LinkedList() {\r\n        head = null;\r\n        size = 0;\r\n    }\r\n\r\n    ...\r\n\r\n    @Override\r\n    public String toString() {\r\n        StringBuilder sb = new StringBuilder();\r\n        sb.append(\"[\");\r\n        Node<T> current = head;\r\n        while (current != null) {\r\n            sb.append(current.data);\r\n            current = current.next;\r\n            if (current != null) {\r\n                sb.append(\", \");\r\n            }\r\n        }\r\n        sb.append(\"]\");\r\n        return sb.toString();\r\n    }\r\n}\r\n```\r\n::\r\n\r\n\r\n**push_back Íµ¨ÌòÑ**\r\n::code-group\r\n```cpp::c++\r\ntemplate<typename T>\r\nvoid LinkedList<T>::push_back(T value) {\r\n    auto* newNode = new Node<T>(value);\r\n    newNode->next = head;\r\n    head = newNode;\r\n\r\n    size ++;\r\n}\r\n```\r\n```java::java\r\npublic void pushBack(T value) {\r\n    Node<T> newNode = new Node<>(value);\r\n    newNode.next = head;\r\n    head = newNode;\r\n\r\n    size++;\r\n}\r\n```\r\n::\r\n\r\n**pop_back Íµ¨ÌòÑ**\r\n\r\n::code-group\r\n```cpp::c++\r\ntemplate<typename T>\r\nT LinkedList<T>::pop_back() {\r\n    if (is_empty()) throw underflow_error(\"The linked list is empty\");\r\n    auto* current = head;\r\n    T value = current->data;\r\n    head = current->next;\r\n    delete current;\r\n    size --;\r\n    return value;\r\n\r\n}\r\n```\r\n```java::java\r\npublic T popBack() {\r\n    if (isEmpty()) throw new EmptyListException();\r\n\r\n    Node<T> current = head;\r\n    T value = current.data;\r\n    head = current.next;\r\n    size--;\r\n\r\n    return value;\r\n}\r\n```\r\n::\r\n\r\n**is_empty Íµ¨ÌòÑ**\r\n\r\n::code-group\r\n```cpp::c++\r\ntemplate<typename T>\r\nbool LinkedList<T>::is_empty() const {\r\n    return size == 0;\r\n}\r\n```\r\n```java::java\r\npublic boolean isEmpty() {\r\n    return size == 0;\r\n}\r\n```\r\n::\r\n\r\n**ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ ÏΩîÎìú**\r\n\r\n```cpp\r\nLinkedList<int> list;\r\n\r\nlist.push_back(2);\r\ncout << \"add new \" << 2 << \": \" << list << endl;\r\n\r\nlist.push_back(7);\r\ncout << \"add new \" << 7 << \": \" << list << endl;\r\n\r\nlist.push_back(5);\r\ncout << \"add new \" << 5 << \": \" << list << endl;\r\n\r\nint removed = list.pop_back();\r\ncout << \"remove \" << removed << \": \" << list << endl;\r\nlist.push_back(4);\r\ncout << \"add \" << 4 << \": \" << list << endl;\r\n\r\ncout << list << endl;\r\n```\r\n\r\n**Í≤∞Í≥º**\r\n\r\n```text\r\nadd new 2: [2]\r\nadd new 7: [7, 2]\r\nadd new 5: [5, 7, 2]\r\nremove 5: [7, 2]\r\nadd 4: [4, 7, 2]\r\n[4, 7, 2]\r\n```\r\n"
  },
  {
    "path": "/docs/data-structure/stack",
    "header": {
      "layout": "post",
      "title": "Ïä§ÌÉù (Stack)",
      "tags": [
        "Data Structure",
        "Array"
      ],
      "date": 1568037180000,
      "profile-image": "/post/profile/profile0.jpg",
      "thumbnail": "/post/data-structure/stack/index.png",
      "current-company": "Computer Academy",
      "current-position": "Student",
      "summary": "Ïä§ÌÉù",
      "expose-images": true,
      "excerpt-separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÏûêÎ£åÍµ¨Ï°∞"
      ],
      "images": [
        {
          "src": "/post/data-structure/stack/index.png",
          "alt": "Ïä§ÌÉù"
        }
      ],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "Ïä§ÌÉùÏù¥ÎûÄ?::what-is-stack",
            "title": "Ïä§ÌÉùÏù¥ÎûÄ?",
            "fragment": "what-is-stack",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Ïä§ÌÉùÏùò ÌïÑÏàòÍ∏∞Îä• Íµ¨ÌòÑ::core-operations",
            "title": "Ïä§ÌÉùÏùò ÌïÑÏàòÍ∏∞Îä• Íµ¨ÌòÑ",
            "fragment": "core-operations",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Ïä§ÌÉùÏùò Íµ¨ÌòÑ::implementation",
            "title": "Ïä§ÌÉùÏùò Íµ¨ÌòÑ",
            "fragment": "implementation",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Ïä§ÌÉùÏùò ÏÇ¨Ïö©::usage",
            "title": "Ïä§ÌÉùÏùò ÏÇ¨Ïö©",
            "fragment": "usage",
            "children": []
          }
        ]
      }
    },
    "description": "Ïä§ÌÉùÏùÄ ÌõÑÏûÖÏÑ†Ï∂ú(LIFO, Last In First Out)Ïùò ÏûêÎ£åÍµ¨Ï°∞Î°ú, Îç∞Ïù¥ÌÑ∞Î•º ÏåìÏïÑ Ïò¨Î¶¨Îäî Î∞©ÏãùÏúºÎ°ú Ï†ÄÏû•ÌïúÎã§.",
    "content": "\r\n\r\n## Ïä§ÌÉùÏù¥ÎûÄ?::what-is-stack\r\n\r\n![Ïä§ÌÉù](/post/data-structure/stack/index.png)\r\n:{ \"description\": \"Ïä§ÌÉù\" }\r\n\r\nÏä§ÌÉùÏùÄ ÌõÑÏûÖÏÑ†Ï∂ú(LIFO, Last In First Out)Ïùò ÏûêÎ£åÍµ¨Ï°∞Î°ú, Îç∞Ïù¥ÌÑ∞Î•º ÏåìÏïÑ Ïò¨Î¶¨Îäî Î∞©ÏãùÏúºÎ°ú Ï†ÄÏû•ÌïúÎã§.\r\nÏä§ÌÉùÏóê Í∞íÏùÑ ÎÑ£Îäî ÌñâÏúÑÎ•º **Push**, Í∞íÏùÑ Í∫ºÎÇ¥Îäî ÌñâÏúÑÎ•º **Pop**Ïù¥ÎùºÍ≥† ÌïúÎã§.\r\n\r\nÏù¥ÎØ∏ÏßÄ Ï≤òÎüº 9ÎùºÎäî Í∞íÏùÑ ÎÑ£Í≥†(Push) Îã§Ïãú Í∫ºÎÇ¥Ïñ¥(Pop)ÎèÑ 9Í∞Ä ÎÇòÏò§Í≤å ÎêúÎã§.\r\nÏù¥ ÏûêÎ£åÍµ¨Ï°∞Îäî Ïª¥Ìì®ÌÑ∞Ïùò Î©îÎ™®Î¶¨ Íµ¨Ï°∞ÏóêÏÑú Ìï®Ïàò Ìò∏Ï∂úÍ≥º Î≥µÍ∑Ä Ï£ºÏÜåÎ•º Ï†ÄÏû•ÌïòÎäîÎç∞ ÏÇ¨Ïö©ÎêúÎã§.\r\n\r\nÌîÑÎ°úÏÑ∏Ïä§Í∞Ä Î©îÎ™®Î¶¨Ïóê Ïò¨ÎùºÍ∞ÄÏÑú Ìï®ÏàòÏùò Ìò∏Ï∂úÏùÑ Î∞õÏúºÎ©¥, Ìï®ÏàòÏùò Ìò∏Ï∂ú Ï†ïÎ≥¥Î•º Ïä§ÌÉùÏóê Ï†ÄÏû•ÌïòÍ≥† Ìï®ÏàòÍ∞Ä Ï¢ÖÎ£åÎêòÎ©¥ Ïä§ÌÉùÏóêÏÑú Í∫ºÎÇ¥Ïñ¥ Î≥µÍ∑Ä Ï£ºÏÜåÎ°ú ÏÇ¨Ïö©ÌïúÎã§.\r\nÏä§ÌÉùÏùÄ [Î∞∞Ïó¥](/docs/data-structure/array)Ïù¥ÎÇò [Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏](/docs/data-structure/linked-list)Î°ú Íµ¨ÌòÑÌï† Ïàò ÏûàÎã§.\r\n\r\n## Ïä§ÌÉùÏùò ÌïÑÏàòÍ∏∞Îä• Íµ¨ÌòÑ::core-operations\r\n\r\n* peek(): Ïä§ÌÉùÏùò Îß® ÏúÑÏóê ÏûàÎäî Îç∞Ïù¥ÌÑ∞Î•º Î∞òÌôòÌïúÎã§. ÎßêÍ∑∏ÎåÄÎ°ú ÌõîÏ≥êÎ≥¥Îäî Í≤ÉÏù¥Í∏∞ ÎïåÎ¨∏Ïóê Îç∞Ïù¥ÌÑ∞Î•º Í∫ºÎÇ¥ÏßÄ ÏïäÎäîÎã§.\r\n\r\n```text\r\nmethod peek(): Item is\r\n    return stack[top]\r\n```\r\n\r\n* push(item): Ïä§ÌÉùÏùò Îß® ÏúÑÏóê Îç∞Ïù¥ÌÑ∞Î•º Ï∂îÍ∞ÄÌïúÎã§.\r\n```text\r\nmethod push(Item item) is\r\n    if stack is full then\r\n        throw StackOverflowException\r\n    top = top + 1 //ÎßàÏßÄÎßâÏúºÎ°ú Îì§Ïñ¥Í∞Ñ ÏöîÏÜåÏùò Ïù∏Îç±Ïä§Î•º Ï¶ùÍ∞ÄÏãúÌÇ®Îã§.\r\n    stack[top] = item //ÏÉàÎ°úÏö¥ ÏöîÏÜåÏùò Í∞íÏùÑ ÎÑ£ÎäîÎã§.\r\n```\r\n\r\n* pop(): Ïä§ÌÉùÏùò Îß® ÏúÑÏóê ÏûàÎäî Îç∞Ïù¥ÌÑ∞Î•º Í∫ºÎÇ¥Ïñ¥ Î∞òÌôòÌïúÎã§.\r\n```text\r\nmethod pop(): Item is\r\n    if stack is empty then\r\n        throw StackUnderflowException\r\n    Item item = stack[top] //Îß® ÏúÑÏóê ÏûàÎäî ÏöîÏÜåÎ•º Í∫ºÎÇ∏Îã§.\r\n    top = top - 1 //Îß® ÏúÑÏóê ÏûàÎäî ÏöîÏÜåÎ•º Í∫ºÎÉàÏúºÎØÄÎ°ú Ïù∏Îç±Ïä§Î•º Í∞êÏÜåÏãúÌÇ®Îã§.\r\n    return item\r\n```\r\n\r\n## Ïä§ÌÉùÏùò Íµ¨ÌòÑ::implementation\r\n\r\nÏù¥ ÏòàÏ†úÏóêÏÑúÎäî Î∞∞Ïó¥Í≥º, Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏Î°ú Ïä§ÌÉùÏùÑ Íµ¨ÌòÑÌïúÎã§.\r\n\r\n::code-group\r\n```cpp::(c++) Stack ÏÉÅÏúÑ ÌÅ¥ÎûòÏä§\r\ntemplate <typename T>\r\nclass Stack {\r\n    public:\r\n        // Í∞ÄÏÉÅ ÏÜåÎ©∏Ïûê\r\n        virtual ~Stack() = default;\r\n        virtual void push(const T& item) = 0;\r\n        virtual T pop() = 0;\r\n        virtual T peek() = 0;\r\n        virtual bool is_empty() = 0;\r\n        virtual int size() = 0;\r\n};\r\n```\r\n\r\n```java::(java) Stack ÏÉÅÏúÑ ÌÅ¥ÎûòÏä§\r\npublic interface Stack<T> {\r\n    void push(T item);\r\n    T pop();\r\n    T peek();\r\n    boolean isEmpty();\r\n    int size();\r\n}\r\n```\r\n::\r\n\r\nÎëê Í∞ÄÏßÄ Î∞©Ïãù Î™®Îëê Íµ¨ÌòÑÌïòÍ∏∞ ÏúÑÌï¥, ÏÉÅÏúÑ ÌÅ¥ÎûòÏä§Î•º ÎßåÎì§Ïñ¥ Í≥µÌÜµÎêú Î©îÏÑúÎìúÎ•º Ï†ïÏùòÌïúÎã§.\r\n\r\n::code-group\r\n```cpp::(c++) Î∞∞Ïó¥Î°ú Íµ¨ÌòÑÌïú Ïä§ÌÉù\r\n#include <iostream>\r\n#include \"Stack.h\"\r\nusing namespace std;\r\n\r\ntemplate <typename T>\r\nclass ArrayStack final : public Stack<T> {\r\nprivate:\r\n    T* arr;\r\n    int top;\r\n    int cap;\r\npublic:\r\n    explicit ArrayStack(const int cap): top(-1), cap(cap) {\r\n        arr = new T[cap];\r\n    }\r\n\r\n    ~ArrayStack() override {\r\n        delete[] arr;\r\n    }\r\n\r\n    void push(const T& item) override {\r\n        if (top == cap -1) {\r\n            throw overflow_error(\"Stack is full\");\r\n        }\r\n        arr[++top] = item;\r\n    }\r\n\r\n    T pop() override {\r\n        if (is_empty()) {\r\n            throw underflow_error(\"Stack is empty\");\r\n        }\r\n\r\n        return arr[top--];\r\n    }\r\n\r\n    T peek() override {\r\n        if (is_empty()) {\r\n            throw underflow_error(\"Stack is empty\");\r\n        }\r\n\r\n        return arr[top];\r\n    }\r\n\r\n    bool is_empty() override {\r\n        return top == -1;\r\n    }\r\n\r\n    int size() override {\r\n        return top + 1;\r\n    }\r\n\r\n    friend ostream& operator<<(ostream& os, const ArrayStack<T>& stack) {\r\n        os << \"Stack: [\";\r\n        for (int i = stack.top; i >= 0; i--) {\r\n            os << stack.arr[i];\r\n            if (0 < i) os << \",\";\r\n        }\r\n        os << \"]\";\r\n        return os;\r\n    }\r\n};\r\n```\r\n```java::(java) Î∞∞Ïó¥Î°ú Íµ¨ÌòÑÌïú Ïä§ÌÉù\r\npublic class ArrayStack<T> implements Stack<T> {\r\n    private T[] arr;\r\n    private int top;\r\n    private int cap;\r\n\r\n    public ArrayStack(int cap) {\r\n        this.top = -1;\r\n        this.cap = cap;\r\n        arr = (T[]) new Object[cap];\r\n    }\r\n\r\n    @Override\r\n    public void push(T item) {\r\n        if (top == cap - 1) {\r\n            throw new StackOverflowError(\"Stack is full\");\r\n        }\r\n        arr[++top] = item;\r\n    }\r\n\r\n    @Override\r\n    public T pop() {\r\n        if (isEmpty()) {\r\n            throw new StackUnderflowError(\"Stack is empty\");\r\n        }\r\n        return arr[top--];\r\n    }\r\n\r\n    @Override\r\n    public T peek() {\r\n        if (isEmpty()) {\r\n            throw new StackUnderflowError(\"Stack is empty\");\r\n        }\r\n        return arr[top];\r\n    }\r\n\r\n    @Override\r\n    public boolean isEmpty() {\r\n        return top == -1;\r\n    }\r\n\r\n    @Override\r\n    public int size() {\r\n        return top + 1;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        StringBuilder sb = new StringBuilder();\r\n        sb.append(\"Stack [\");\r\n        for (int i = 0; i <= top; i++) {\r\n            sb.append(arr[i]);\r\n            if (i < top) sb.append(\",\");\r\n        }\r\n        sb.append(\"]\");\r\n        return sb.toString();\r\n    }\r\n}\r\n```\r\n::\r\n\r\n::code-group\r\n```cpp::(c++) Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏Î°ú Íµ¨ÌòÑÌïú Ïä§ÌÉù\r\n#include \"Stack.h\"\r\n#include <iostream>\r\nusing namespace std;\r\n\r\n\r\ntemplate <typename T>\r\nclass LinkedListStack : public Stack<T> {\r\nprivate:\r\n\r\n    //Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏Î•º ÏúÑÌïú Node Íµ¨Ï°∞Ï≤¥\r\n    struct Node {\r\n        T data;\r\n        Node* next;\r\n\r\n        explicit Node(const T& value) : data(value), next(nullptr) {}\r\n    };\r\n\r\n    Node* top;\r\n    int cap;\r\n\r\npublic:\r\n    explicit LinkedListStack(int capacity) : cap(capacity), top(nullptr) {}\r\n    ~LinkedListStack() override {\r\n        while (top != nullptr) {\r\n            Node* temp = top;\r\n            top = top->next;\r\n            delete temp;\r\n        }\r\n    }\r\n    void push(const T &item) override {\r\n        Node* newNode = new Node(item);\r\n        newNode->next = top;\r\n        top = newNode;\r\n        cap++;\r\n    }\r\n\r\n    T pop() override {\r\n        if (is_empty()) {\r\n            throw underflow_error(\"Stack is empty\");;\r\n        }\r\n        Node* temp = top;\r\n        T popped = temp->data;\r\n        top = top->next;\r\n        delete temp;\r\n        cap--;\r\n\r\n        return popped;\r\n    }\r\n\r\n    T peek() override {\r\n        if (is_empty()) {\r\n            throw underflow_error(\"Stack is empty\");;\r\n        }\r\n        return top->data;\r\n    }\r\n\r\n    bool is_empty() override {\r\n        return top == nullptr;\r\n    }\r\n\r\n    int size() override {\r\n        return top == nullptr ? 0 : cap;\r\n    }\r\n\r\n    friend ostream& operator<<(ostream& os, const LinkedListStack<T>& stack) {\r\n        os << \"Stack: [\";\r\n        Node* current = stack.top;\r\n        while (current != nullptr) {\r\n            os << current->data;\r\n            if (current->next != nullptr) {\r\n                os << \", \";\r\n            }\r\n            current = current->next;\r\n        }\r\n        os << \"]\";\r\n        return os;\r\n    }\r\n};\r\n```\r\n```java::(java) Ïó∞Í≤∞ Î¶¨Ïä§Ìä∏Î°ú Íµ¨ÌòÑÌïú Ïä§ÌÉù\r\npublic class LinkedListStack implements Stack {\r\n    private Node top;\r\n    private int cap;\r\n\r\n    public LinkedListStack(int capacity) {\r\n        this.cap = capacity;\r\n        this.top = null;\r\n    }\r\n\r\n    @Override\r\n    public void push(Object item) {\r\n        Node newNode = new Node(item);\r\n        newNode.next = top;\r\n        top = newNode;\r\n        cap++;\r\n    }\r\n\r\n    @Override\r\n    public Object pop() {\r\n        if (isEmpty()) {\r\n            throw new StackUnderflowError(\"Stack is empty\");\r\n        }\r\n        Node temp = top;\r\n        Object popped = temp.data;\r\n        top = top.next;\r\n        temp.next = null;\r\n        cap--;\r\n        return popped;\r\n    }\r\n\r\n    @Override\r\n    public Object peek() {\r\n        if (isEmpty()) {\r\n            throw new StackUnderflowError(\"Stack is empty\");\r\n        }\r\n        return top.data;\r\n    }\r\n\r\n    @Override\r\n    public boolean isEmpty() {\r\n        return top == null;\r\n    }\r\n\r\n    @Override\r\n    public int size() {\r\n        return top == null ? 0 : cap;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        StringBuilder sb = new StringBuilder(\"Stack: [\");\r\n        Node current = top;\r\n        while (current != null) {\r\n            sb.append(current.data);\r\n            if (current.next != null) {\r\n                sb.append(\", \");\r\n            }\r\n            current = current.next;\r\n        }\r\n        sb.append(\"]\");\r\n        \r\n        return sb.toString();\r\n    }\r\n    \r\n    public static class Node<T> {\r\n        T data;\r\n        Node next;\r\n        \r\n        public Node(T data) {\r\n            this.data = data;\r\n            this.next = null;\r\n        }\r\n    }\r\n```\r\n::\r\n\r\n## Ïä§ÌÉùÏùò ÏÇ¨Ïö©::usage\r\n\r\n::code-group\r\n```cpp::ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ ÏΩîÎìú\r\nLinkedListStack<int> stack(100);\r\nstack.push(10);\r\nstack.push(20);\r\n\r\ncout << stack << endl;\r\n\r\nconst int popped = stack.pop();\r\ncout << \"popped: \" << popped << endl;\r\ncout << stack << endl;\r\n\r\nstack.push(75);\r\ncout << \"pushed: \" << 75 << endl;\r\ncout << stack << endl;\r\n```\r\n```text::Ï∂úÎ†• Í≤∞Í≥º\r\nStack [10,20]\r\npopped: 20\r\nStack [10]\r\npushed: 75\r\nStack [10,75]\r\n```\r\n::\r\n"
  },
  {
    "path": "/docs/computer-science/computer-structure/bit",
    "header": {
      "layout": "wiki",
      "title": "ÎπÑÌä∏ (Bit)",
      "date": 1567671000000,
      "tags": [
        "Computer",
        "Binary",
        "Digit",
        "Bit"
      ],
      "summary": "ÎπÑÌä∏",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "Ïª¥Ìì®ÌÑ∞",
        "ÌïòÎìúÏõ®Ïñ¥"
      ],
      "images": [],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "BitÎûÄ?::what-is-bit",
            "title": "BitÎûÄ?",
            "fragment": "what-is-bit",
            "children": []
          },
          {
            "rank": 2,
            "origin": "2ÏßÑÏàò Î≥ÄÌôò::convert-binary",
            "title": "2ÏßÑÏàò Î≥ÄÌôò",
            "fragment": "convert-binary",
            "children": []
          }
        ]
      }
    },
    "description": "",
    "content": "\r\n## BitÎûÄ?::what-is-bit\r\n\r\n**Bit**Îäî 2ÏßÑÎ≤ïÏùÑ ÎúªÌïòÎäî **B**inary ÏôÄ Ïà´ÏûêÎ•º ÎúªÌïòÎäî Dig**it**Ïùò Ìï©ÏÑ±Ïñ¥Î°ú 2ÏßÑÏàòÎ•º ÎÇòÌÉÄÎÇ¥Îäî Îã®ÏúÑÏù¥Îã§.  \r\nÏùºÏÉÅ ÏÉùÌôúÏóêÏÑúÎäî 10ÏßÑÎ≤ïÏùÑ ÏÇ¨Ïö©ÌïúÎã§. 10ÏßÑÎ≤ïÏùÄ 0Î∂ÄÌÑ∞ 9ÍπåÏßÄÏùò Ïà´ÏûêÎ°ú Ïù¥Î£®Ïñ¥Ï†∏ ÏûàÏúºÎ©∞, 10Í∞úÏùò Ïà´ÏûêÎ°ú ÌëúÌòÑÌïúÎã§.\r\n\r\nÌïòÏßÄÎßå, Ïª¥Ìì®ÌÑ∞ Ï≤¥Í≥ÑÏóêÏÑúÎäî 2ÏßÑÎ≤ïÏùÑ ÏÇ¨Ïö©ÌïòÎ©∞, Ïã§Ï†úÎ°ú Ïª¥Ìì®ÌÑ∞ ÏÉÅÏóêÏÑú Ïö∞Î¶¨Í∞Ä Îã§Î£®Îäî 10ÏßÑÏàòÎäî Ïã§Ï†úÎ°ú 2ÏßÑÏàòÎ°ú Î≥ÄÌôòÎêòÏñ¥ Ï≤òÎ¶¨ÎêúÎã§.\r\n\r\nÏòàÎ•º Îì§Ïñ¥ 10ÏßÑÏàò **11**ÏùÑ 2ÏßÑÏàòÎ°ú Î≥ÄÌôòÌïòÎ©¥ **1011**Ïù¥ ÎêúÎã§. Ïù¥Î†áÍ≤å 2ÏßÑÎ≤ï Ï≤¥Í≥ÑÎ°ú Î≥ÄÌôòÎêú Ïà´ÏûêÎ•º 2ÏßÑÏàò(**Bit**)ÎùºÍ≥† ÌïúÎã§.\r\n\r\n## 2ÏßÑÏàò Î≥ÄÌôò::convert-binary\r\n\r\nÏòà) 1011~2~ = 1x2^3^ + 0x2^2^ + 1x2^1^ + 1x2^0^ = 11~10~\r\n\r\n\r\n\r\n\r\n\r\n"
  },
  {
    "path": "/docs/data-structure/array",
    "header": {
      "layout": "post",
      "title": "Î∞∞Ïó¥ (Array)",
      "tags": [
        "Data Structure",
        "Array"
      ],
      "date": 1567630380000,
      "profile-image": "/post/profile/profile0.jpg",
      "thumbnail": "/post/data-structure/array/index.png",
      "current-company": "Computer Academy",
      "current-position": "Student",
      "summary": "Î∞∞Ïó¥",
      "expose-images": true,
      "excerpt-separator": "<!--more-->",
      "hide": false,
      "breadcrumbs": [
        "Î¨∏ÏÑú",
        "ÏûêÎ£åÍµ¨Ï°∞"
      ],
      "images": [
        {
          "src": "/post/data-structure/array/index.png",
          "alt": "Î∞∞Ïó¥Ïùò Ï£ºÏÜå"
        }
      ],
      "headlines": {
        "rank": 0,
        "origin": "root::root",
        "title": "root",
        "fragment": "root",
        "children": [
          {
            "rank": 2,
            "origin": "Î∞∞Ïó¥Ïù¥ÎûÄ?::what-is-array",
            "title": "Î∞∞Ïó¥Ïù¥ÎûÄ?",
            "fragment": "what-is-array",
            "children": []
          },
          {
            "rank": 2,
            "origin": "Î∞∞Ïó¥Ïùò ÌäπÏßï::features",
            "title": "Î∞∞Ïó¥Ïùò ÌäπÏßï",
            "fragment": "features",
            "children": []
          }
        ]
      }
    },
    "description": "Î∞∞Ïó¥ÏùÄ ÌîÑÎ°úÍ∑∏ÎûòÎ∞ç Ïñ∏Ïñ¥ÏóêÏÑú ÏßÄÏõêÎêòÎ©∞, Í∞ÄÏû• Í∏∞Î≥∏Ïù¥ ÎêòÎäî ÏûêÎ£åÍµ¨Ï°∞Ïù¥Îã§.\r\nÎ∞∞Ïó¥Ïóê ÎåÄÌï¥ ÏïåÏïÑÎ≥¥Ïûê.",
    "content": "\r\n\r\n## Î∞∞Ïó¥Ïù¥ÎûÄ?::what-is-array\r\n\r\n**Î∞∞Ïó¥(Array)**ÏùÄ ÎèôÏùºÌïú ÏûêÎ£åÌòïÏùò Îç∞Ïù¥ÌÑ∞Î•º Ïó∞ÏÜçÏ†ÅÏúºÎ°ú Ï†ÄÏû•ÌïòÎäî ÏûêÎ£åÍµ¨Ï°∞Ïù¥Îã§.\r\nÏó¨Îü¨Í∞úÏùò Îç∞Ïù¥ÌÑ∞Î•º ÌïúÎ≤àÏóê Îã§Î£∞ Ïàò ÏûàÏúºÎ©∞, ÏÉâÏù∏(index)ÏúºÎ°ú Í∞Å Îç∞Ïù¥ÌÑ∞Ïóê Ï†ëÍ∑ºÌï† Ïàò ÏûàÎã§.\r\n\r\nÍ∞Å Ïñ∏Ïñ¥ Î≥ÑÎ°ú ÏÑ†Ïñ∏ Î∞©Î≤ïÏù¥ Îã§Î•¥ÏßÄÎßå, ÎÇ¥Î∂ÄÏ†ÅÏúºÎ°ú Ï†ÄÏû•ÎêòÍ≥† ÏÇ¨Ïö©ÎêòÎäî Îß§Ïª§ÎãàÏ¶òÏùÄ ÎèôÏùºÌïòÎã§.\r\n\r\n::code-group\r\n```cpp::C++Ïùò Î∞∞Ïó¥Ïùò ÏÑ†Ïñ∏\r\nint arr[5] = {1, 2, 3, 4, 5};\r\n```\r\n\r\n```java::JavaÏùò Î∞∞Ïó¥ ÏÑ†Ïñ∏\r\nint [] arr = {1, 2, 3, 4, 5};\r\n```\r\n\r\n```typescript::TypeScriptÏùò Î∞∞Ïó¥ ÏÑ†Ïñ∏\r\nvar arr: number[] = [1, 2, 3, 4, 5];\r\n```\r\n::\r\n\r\nÎ∞∞Ïó¥ÏùÄ ÏÑ†Ïñ∏Ïãú ÌÅ¨Í∏∞Î•º Ï†ïÌï¥ÏïºÌïúÎã§. ÏΩîÎìúÏóêÏÑú Î™ÖÏãúÌïú 5Îäî Î∞∞Ïó¥Ïùò ÌÅ¨Í∏∞Î•º ÏùòÎØ∏ÌïúÎã§.\r\nÎ∞∞Ïó¥Ïùò Í∞Å ÏöîÏÜåÎäî Ïù∏Îç±Ïä§Î°ú Ï†ëÍ∑ºÌï† Ïàò ÏûàÎäîÎç∞, Ï±ÖÏúºÎ°ú ÏπòÎ©¥ Ï±ÖÏùò Ï™Ω Î≤àÌò∏ÏôÄ Í∞ôÎã§.\r\n\r\nÏòàÎ•º Îì§Ïñ¥ ÏúÑÏùò ÏΩîÎìúÏóêÏÑú `arr[0]`ÏùÄ 1, `arr[1]`ÏùÄ 2, `arr[2]`Îäî 3, `arr[3]`ÏùÄ 4, `arr[4]`Îäî 5Î•º Í∞ÄÎ¶¨ÌÇ®Îã§.\r\n**Ïù∏Îç±Ïä§Îäî 0Î∂ÄÌÑ∞ ÏãúÏûëÌïòÎ©∞**, ÏßÅÍ¥ÄÏ†ÅÏúºÎ°ú ÌëúÌòÑÎêú `[1, 2, 3, 4, 5]`Î•º Í∑∏ÎåÄÎ°ú Î≥¥Î©¥ÎêúÎã§.\r\n\r\nÎ∞∞Ïó¥Ïùò ÌÅ¨Í∏∞Îäî Î¨ºÎ¶¨Ï†ÅÏù∏ Î©îÎ™®Î¶¨Î•º Ìï†Îãπ Î∞õÎäî Í≤ÉÏù¥Í∏∞ ÎïåÎ¨∏Ïóê, Ï†ïÌï¥ÏßÑ ÌÅ¨Í∏∞Ïô∏Ïùò Ïù∏Îç±Ïä§Î°ú Ï†ëÍ∑ºÏãú Ïò§Î•òÍ∞Ä Î∞úÏÉùÌïúÎã§.\r\n\r\n## Î∞∞Ïó¥Ïùò ÌäπÏßï::features\r\n\r\n![Î∞∞Ïó¥Ïùò Ï£ºÏÜå](/post/data-structure/array/index.png)\r\n:{ \"align\": \"center\", \"max-width\": \"300px\", \"description\": \"Î∞∞Ïó¥Ïùò ÏöîÏÜå\" }\r\n\r\nÎ∞∞Ïó¥ÏùÄ ÏÑ†Ïñ∏Ïãú ÏúÑÏôÄÍ∞ôÏù¥ Ìï†ÎãπÎêúÎã§. ÏôºÏ™ΩÏùò Î©îÎ™®Î¶¨ Ï£ºÏÜåÎäî Î∞∞Ïó¥Ïóê Ï†ÄÏû•ÎêòÎäî ÌÉÄÏûÖÏùò ÌÅ¨Í∏∞Ïóê Îî∞Îùº Îã§Î•¥Í∞ú Ìï†ÎãπÎêúÎã§.\r\n`int`Î∞∞Ïó¥ Í∞ôÏùÄ Í≤ΩÏö∞ `4byte`Î•º Ï∞®ÏßÄÌïòÍ∏∞ ÎïåÎ¨∏Ïóê, Ïó∞ÏÜçÏ†ÅÏù∏ Ï£ºÏÜåÎ•º ÏúÑÌï¥ `90..94..98` Ï≤òÎüº(ÎÅùÏóê ÎëêÏûêÎ¶¨ Ïòà)Ï¶ùÍ∞ÄÌïúÎã§.\r\n\r\nÍ∏∞Î≥∏ÌòïÏùò Í≤ΩÏö∞ ÏûêÎ£åÌòïÏùò ÌÅ¨Í∏∞ÎßåÌÅº Ï¶ùÍ∞ÄÍ∞ÄÎêòÍ≥†, Ï∞∏Ï°∞ÌòïÏùò Í≤ΩÏö∞ Ïª¥Ìì®ÌÑ∞ ÎπÑÌä∏ Ï≤¥Í≥ÑÎ•º Îî∞Îùº Ï¶ùÍ∞ÄÌïúÎã§. (Ïòà: 64 ÎπÑÌä∏ Ï≤¥Í≥ÑÏùò Í≤ΩÏö∞ `8byte` Îã®ÏúÑÎ°ú Ï¶ùÍ∞Ä)\r\n\r\nÏñ¥Ï®ãÎì† ÏúÑÏùò Í∞ÅÍ∞ÅÏùò ÏöîÏÜåÎ•º Ï†ëÍ∑ºÌïòÍ∏∞ ÏúÑÌï¥ÏÑúÎäî ÏïÑÎûòÏ≤òÎüº Ïù∏Îç±Ïä§Î•º ÌÜµÌï¥ Ï†ëÍ∑ºÌïúÎã§.\r\n\r\n```c++\r\nint arr[5] = {9, 1, 4, 3, 6};\r\nint first = arr[0]; // 9\r\nint second = arr[1]; // 1\r\nint third = arr[2]; // 4\r\nint fourth = arr[3]; // 3\r\nint fifth = arr[4]; // 6\r\n```\r\n\r\nÏù¥Ï≤òÎüº Ïó¨Îü¨Í∞úÏùò ÏöîÏÜåÎ•º ÌïúÍ∞úÏùò Î≥ÄÏàòÎ°ú Í¥ÄÎ¶¨Ìï† Ïàò ÏûàÎäî Îç∞Ïù¥ÌÑ∞ Íµ¨Ï°∞Ïù¥Îã§.\r\n\r\n> Ï∞∏Ï°∞Ïùò Í≤ΩÏö∞ Î∞∞Ïó¥Ïùò ÏöîÏÜåÏóê Ï∞∏Ï°∞ Í∞ùÏ≤¥Ïùò Ï£ºÏÜåÍ∞Ä Ï†ÄÏû•ÎêòÎØÄÎ°ú Ï¥àÍ∏∞Ìôî ÌïòÏßÄÏïäÎäî Îã§Î©¥ `0x0` Ï¶â null ÏÉÅÌÉúÏù¥Îã§.\r\n:{ \"type\": \"note\", \"icon\": \"info\" }\r\n\r\n\r\n\r\n\r\n"
  }
]